/*
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.keycloak.rest.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import in.docq.keycloak.rest.client.model.ApplicationRepresentation;
import in.docq.keycloak.rest.client.model.AuthenticationFlowRepresentation;
import in.docq.keycloak.rest.client.model.AuthenticatorConfigRepresentation;
import in.docq.keycloak.rest.client.model.BruteForceStrategy;
import in.docq.keycloak.rest.client.model.ClientPoliciesRepresentation;
import in.docq.keycloak.rest.client.model.ClientProfilesRepresentation;
import in.docq.keycloak.rest.client.model.ClientRepresentation;
import in.docq.keycloak.rest.client.model.ClientScopeRepresentation;
import in.docq.keycloak.rest.client.model.ClientTemplateRepresentation;
import in.docq.keycloak.rest.client.model.ComponentExportRepresentation;
import in.docq.keycloak.rest.client.model.GroupRepresentation;
import in.docq.keycloak.rest.client.model.IdentityProviderMapperRepresentation;
import in.docq.keycloak.rest.client.model.IdentityProviderRepresentation;
import in.docq.keycloak.rest.client.model.OAuthClientRepresentation;
import in.docq.keycloak.rest.client.model.OrganizationRepresentation;
import in.docq.keycloak.rest.client.model.ProtocolMapperRepresentation;
import in.docq.keycloak.rest.client.model.RequiredActionProviderRepresentation;
import in.docq.keycloak.rest.client.model.RoleRepresentation;
import in.docq.keycloak.rest.client.model.RolesRepresentation;
import in.docq.keycloak.rest.client.model.ScopeMappingRepresentation;
import in.docq.keycloak.rest.client.model.UserFederationMapperRepresentation;
import in.docq.keycloak.rest.client.model.UserFederationProviderRepresentation;
import in.docq.keycloak.rest.client.model.UserRepresentation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.util.HashSet;

import in.docq.keycloak.rest.client.JSON;

/**
 * RealmRepresentation
 */
@javax.annotation.Generated(value = "in.docq.keycloak.rest.codegen.languages.JavaClientCodegen", date = "2025-02-08T16:05:02.219423+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class RealmRepresentation {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_REALM = "realm";
  @SerializedName(SERIALIZED_NAME_REALM)
  @javax.annotation.Nullable
  private String realm;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  @javax.annotation.Nullable
  private String displayName;

  public static final String SERIALIZED_NAME_DISPLAY_NAME_HTML = "displayNameHtml";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME_HTML)
  @javax.annotation.Nullable
  private String displayNameHtml;

  public static final String SERIALIZED_NAME_NOT_BEFORE = "notBefore";
  @SerializedName(SERIALIZED_NAME_NOT_BEFORE)
  @javax.annotation.Nullable
  private Integer notBefore;

  public static final String SERIALIZED_NAME_DEFAULT_SIGNATURE_ALGORITHM = "defaultSignatureAlgorithm";
  @SerializedName(SERIALIZED_NAME_DEFAULT_SIGNATURE_ALGORITHM)
  @javax.annotation.Nullable
  private String defaultSignatureAlgorithm;

  public static final String SERIALIZED_NAME_REVOKE_REFRESH_TOKEN = "revokeRefreshToken";
  @SerializedName(SERIALIZED_NAME_REVOKE_REFRESH_TOKEN)
  @javax.annotation.Nullable
  private Boolean revokeRefreshToken;

  public static final String SERIALIZED_NAME_REFRESH_TOKEN_MAX_REUSE = "refreshTokenMaxReuse";
  @SerializedName(SERIALIZED_NAME_REFRESH_TOKEN_MAX_REUSE)
  @javax.annotation.Nullable
  private Integer refreshTokenMaxReuse;

  public static final String SERIALIZED_NAME_ACCESS_TOKEN_LIFESPAN = "accessTokenLifespan";
  @SerializedName(SERIALIZED_NAME_ACCESS_TOKEN_LIFESPAN)
  @javax.annotation.Nullable
  private Integer accessTokenLifespan;

  public static final String SERIALIZED_NAME_ACCESS_TOKEN_LIFESPAN_FOR_IMPLICIT_FLOW = "accessTokenLifespanForImplicitFlow";
  @SerializedName(SERIALIZED_NAME_ACCESS_TOKEN_LIFESPAN_FOR_IMPLICIT_FLOW)
  @javax.annotation.Nullable
  private Integer accessTokenLifespanForImplicitFlow;

  public static final String SERIALIZED_NAME_SSO_SESSION_IDLE_TIMEOUT = "ssoSessionIdleTimeout";
  @SerializedName(SERIALIZED_NAME_SSO_SESSION_IDLE_TIMEOUT)
  @javax.annotation.Nullable
  private Integer ssoSessionIdleTimeout;

  public static final String SERIALIZED_NAME_SSO_SESSION_MAX_LIFESPAN = "ssoSessionMaxLifespan";
  @SerializedName(SERIALIZED_NAME_SSO_SESSION_MAX_LIFESPAN)
  @javax.annotation.Nullable
  private Integer ssoSessionMaxLifespan;

  public static final String SERIALIZED_NAME_SSO_SESSION_IDLE_TIMEOUT_REMEMBER_ME = "ssoSessionIdleTimeoutRememberMe";
  @SerializedName(SERIALIZED_NAME_SSO_SESSION_IDLE_TIMEOUT_REMEMBER_ME)
  @javax.annotation.Nullable
  private Integer ssoSessionIdleTimeoutRememberMe;

  public static final String SERIALIZED_NAME_SSO_SESSION_MAX_LIFESPAN_REMEMBER_ME = "ssoSessionMaxLifespanRememberMe";
  @SerializedName(SERIALIZED_NAME_SSO_SESSION_MAX_LIFESPAN_REMEMBER_ME)
  @javax.annotation.Nullable
  private Integer ssoSessionMaxLifespanRememberMe;

  public static final String SERIALIZED_NAME_OFFLINE_SESSION_IDLE_TIMEOUT = "offlineSessionIdleTimeout";
  @SerializedName(SERIALIZED_NAME_OFFLINE_SESSION_IDLE_TIMEOUT)
  @javax.annotation.Nullable
  private Integer offlineSessionIdleTimeout;

  public static final String SERIALIZED_NAME_OFFLINE_SESSION_MAX_LIFESPAN_ENABLED = "offlineSessionMaxLifespanEnabled";
  @SerializedName(SERIALIZED_NAME_OFFLINE_SESSION_MAX_LIFESPAN_ENABLED)
  @javax.annotation.Nullable
  private Boolean offlineSessionMaxLifespanEnabled;

  public static final String SERIALIZED_NAME_OFFLINE_SESSION_MAX_LIFESPAN = "offlineSessionMaxLifespan";
  @SerializedName(SERIALIZED_NAME_OFFLINE_SESSION_MAX_LIFESPAN)
  @javax.annotation.Nullable
  private Integer offlineSessionMaxLifespan;

  public static final String SERIALIZED_NAME_CLIENT_SESSION_IDLE_TIMEOUT = "clientSessionIdleTimeout";
  @SerializedName(SERIALIZED_NAME_CLIENT_SESSION_IDLE_TIMEOUT)
  @javax.annotation.Nullable
  private Integer clientSessionIdleTimeout;

  public static final String SERIALIZED_NAME_CLIENT_SESSION_MAX_LIFESPAN = "clientSessionMaxLifespan";
  @SerializedName(SERIALIZED_NAME_CLIENT_SESSION_MAX_LIFESPAN)
  @javax.annotation.Nullable
  private Integer clientSessionMaxLifespan;

  public static final String SERIALIZED_NAME_CLIENT_OFFLINE_SESSION_IDLE_TIMEOUT = "clientOfflineSessionIdleTimeout";
  @SerializedName(SERIALIZED_NAME_CLIENT_OFFLINE_SESSION_IDLE_TIMEOUT)
  @javax.annotation.Nullable
  private Integer clientOfflineSessionIdleTimeout;

  public static final String SERIALIZED_NAME_CLIENT_OFFLINE_SESSION_MAX_LIFESPAN = "clientOfflineSessionMaxLifespan";
  @SerializedName(SERIALIZED_NAME_CLIENT_OFFLINE_SESSION_MAX_LIFESPAN)
  @javax.annotation.Nullable
  private Integer clientOfflineSessionMaxLifespan;

  public static final String SERIALIZED_NAME_ACCESS_CODE_LIFESPAN = "accessCodeLifespan";
  @SerializedName(SERIALIZED_NAME_ACCESS_CODE_LIFESPAN)
  @javax.annotation.Nullable
  private Integer accessCodeLifespan;

  public static final String SERIALIZED_NAME_ACCESS_CODE_LIFESPAN_USER_ACTION = "accessCodeLifespanUserAction";
  @SerializedName(SERIALIZED_NAME_ACCESS_CODE_LIFESPAN_USER_ACTION)
  @javax.annotation.Nullable
  private Integer accessCodeLifespanUserAction;

  public static final String SERIALIZED_NAME_ACCESS_CODE_LIFESPAN_LOGIN = "accessCodeLifespanLogin";
  @SerializedName(SERIALIZED_NAME_ACCESS_CODE_LIFESPAN_LOGIN)
  @javax.annotation.Nullable
  private Integer accessCodeLifespanLogin;

  public static final String SERIALIZED_NAME_ACTION_TOKEN_GENERATED_BY_ADMIN_LIFESPAN = "actionTokenGeneratedByAdminLifespan";
  @SerializedName(SERIALIZED_NAME_ACTION_TOKEN_GENERATED_BY_ADMIN_LIFESPAN)
  @javax.annotation.Nullable
  private Integer actionTokenGeneratedByAdminLifespan;

  public static final String SERIALIZED_NAME_ACTION_TOKEN_GENERATED_BY_USER_LIFESPAN = "actionTokenGeneratedByUserLifespan";
  @SerializedName(SERIALIZED_NAME_ACTION_TOKEN_GENERATED_BY_USER_LIFESPAN)
  @javax.annotation.Nullable
  private Integer actionTokenGeneratedByUserLifespan;

  public static final String SERIALIZED_NAME_OAUTH2_DEVICE_CODE_LIFESPAN = "oauth2DeviceCodeLifespan";
  @SerializedName(SERIALIZED_NAME_OAUTH2_DEVICE_CODE_LIFESPAN)
  @javax.annotation.Nullable
  private Integer oauth2DeviceCodeLifespan;

  public static final String SERIALIZED_NAME_OAUTH2_DEVICE_POLLING_INTERVAL = "oauth2DevicePollingInterval";
  @SerializedName(SERIALIZED_NAME_OAUTH2_DEVICE_POLLING_INTERVAL)
  @javax.annotation.Nullable
  private Integer oauth2DevicePollingInterval;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  @javax.annotation.Nullable
  private Boolean enabled;

  public static final String SERIALIZED_NAME_SSL_REQUIRED = "sslRequired";
  @SerializedName(SERIALIZED_NAME_SSL_REQUIRED)
  @javax.annotation.Nullable
  private String sslRequired;

  public static final String SERIALIZED_NAME_PASSWORD_CREDENTIAL_GRANT_ALLOWED = "passwordCredentialGrantAllowed";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_PASSWORD_CREDENTIAL_GRANT_ALLOWED)
  @javax.annotation.Nullable
  private Boolean passwordCredentialGrantAllowed;

  public static final String SERIALIZED_NAME_REGISTRATION_ALLOWED = "registrationAllowed";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_ALLOWED)
  @javax.annotation.Nullable
  private Boolean registrationAllowed;

  public static final String SERIALIZED_NAME_REGISTRATION_EMAIL_AS_USERNAME = "registrationEmailAsUsername";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_EMAIL_AS_USERNAME)
  @javax.annotation.Nullable
  private Boolean registrationEmailAsUsername;

  public static final String SERIALIZED_NAME_REMEMBER_ME = "rememberMe";
  @SerializedName(SERIALIZED_NAME_REMEMBER_ME)
  @javax.annotation.Nullable
  private Boolean rememberMe;

  public static final String SERIALIZED_NAME_VERIFY_EMAIL = "verifyEmail";
  @SerializedName(SERIALIZED_NAME_VERIFY_EMAIL)
  @javax.annotation.Nullable
  private Boolean verifyEmail;

  public static final String SERIALIZED_NAME_LOGIN_WITH_EMAIL_ALLOWED = "loginWithEmailAllowed";
  @SerializedName(SERIALIZED_NAME_LOGIN_WITH_EMAIL_ALLOWED)
  @javax.annotation.Nullable
  private Boolean loginWithEmailAllowed;

  public static final String SERIALIZED_NAME_DUPLICATE_EMAILS_ALLOWED = "duplicateEmailsAllowed";
  @SerializedName(SERIALIZED_NAME_DUPLICATE_EMAILS_ALLOWED)
  @javax.annotation.Nullable
  private Boolean duplicateEmailsAllowed;

  public static final String SERIALIZED_NAME_RESET_PASSWORD_ALLOWED = "resetPasswordAllowed";
  @SerializedName(SERIALIZED_NAME_RESET_PASSWORD_ALLOWED)
  @javax.annotation.Nullable
  private Boolean resetPasswordAllowed;

  public static final String SERIALIZED_NAME_EDIT_USERNAME_ALLOWED = "editUsernameAllowed";
  @SerializedName(SERIALIZED_NAME_EDIT_USERNAME_ALLOWED)
  @javax.annotation.Nullable
  private Boolean editUsernameAllowed;

  public static final String SERIALIZED_NAME_USER_CACHE_ENABLED = "userCacheEnabled";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_USER_CACHE_ENABLED)
  @javax.annotation.Nullable
  private Boolean userCacheEnabled;

  public static final String SERIALIZED_NAME_REALM_CACHE_ENABLED = "realmCacheEnabled";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_REALM_CACHE_ENABLED)
  @javax.annotation.Nullable
  private Boolean realmCacheEnabled;

  public static final String SERIALIZED_NAME_BRUTE_FORCE_PROTECTED = "bruteForceProtected";
  @SerializedName(SERIALIZED_NAME_BRUTE_FORCE_PROTECTED)
  @javax.annotation.Nullable
  private Boolean bruteForceProtected;

  public static final String SERIALIZED_NAME_PERMANENT_LOCKOUT = "permanentLockout";
  @SerializedName(SERIALIZED_NAME_PERMANENT_LOCKOUT)
  @javax.annotation.Nullable
  private Boolean permanentLockout;

  public static final String SERIALIZED_NAME_MAX_TEMPORARY_LOCKOUTS = "maxTemporaryLockouts";
  @SerializedName(SERIALIZED_NAME_MAX_TEMPORARY_LOCKOUTS)
  @javax.annotation.Nullable
  private Integer maxTemporaryLockouts;

  public static final String SERIALIZED_NAME_BRUTE_FORCE_STRATEGY = "bruteForceStrategy";
  @SerializedName(SERIALIZED_NAME_BRUTE_FORCE_STRATEGY)
  @javax.annotation.Nullable
  private BruteForceStrategy bruteForceStrategy;

  public static final String SERIALIZED_NAME_MAX_FAILURE_WAIT_SECONDS = "maxFailureWaitSeconds";
  @SerializedName(SERIALIZED_NAME_MAX_FAILURE_WAIT_SECONDS)
  @javax.annotation.Nullable
  private Integer maxFailureWaitSeconds;

  public static final String SERIALIZED_NAME_MINIMUM_QUICK_LOGIN_WAIT_SECONDS = "minimumQuickLoginWaitSeconds";
  @SerializedName(SERIALIZED_NAME_MINIMUM_QUICK_LOGIN_WAIT_SECONDS)
  @javax.annotation.Nullable
  private Integer minimumQuickLoginWaitSeconds;

  public static final String SERIALIZED_NAME_WAIT_INCREMENT_SECONDS = "waitIncrementSeconds";
  @SerializedName(SERIALIZED_NAME_WAIT_INCREMENT_SECONDS)
  @javax.annotation.Nullable
  private Integer waitIncrementSeconds;

  public static final String SERIALIZED_NAME_QUICK_LOGIN_CHECK_MILLI_SECONDS = "quickLoginCheckMilliSeconds";
  @SerializedName(SERIALIZED_NAME_QUICK_LOGIN_CHECK_MILLI_SECONDS)
  @javax.annotation.Nullable
  private Long quickLoginCheckMilliSeconds;

  public static final String SERIALIZED_NAME_MAX_DELTA_TIME_SECONDS = "maxDeltaTimeSeconds";
  @SerializedName(SERIALIZED_NAME_MAX_DELTA_TIME_SECONDS)
  @javax.annotation.Nullable
  private Integer maxDeltaTimeSeconds;

  public static final String SERIALIZED_NAME_FAILURE_FACTOR = "failureFactor";
  @SerializedName(SERIALIZED_NAME_FAILURE_FACTOR)
  @javax.annotation.Nullable
  private Integer failureFactor;

  public static final String SERIALIZED_NAME_PRIVATE_KEY = "privateKey";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_PRIVATE_KEY)
  @javax.annotation.Nullable
  private String privateKey;

  public static final String SERIALIZED_NAME_PUBLIC_KEY = "publicKey";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_PUBLIC_KEY)
  @javax.annotation.Nullable
  private String publicKey;

  public static final String SERIALIZED_NAME_CERTIFICATE = "certificate";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_CERTIFICATE)
  @javax.annotation.Nullable
  private String certificate;

  public static final String SERIALIZED_NAME_CODE_SECRET = "codeSecret";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_CODE_SECRET)
  @javax.annotation.Nullable
  private String codeSecret;

  public static final String SERIALIZED_NAME_ROLES = "roles";
  @SerializedName(SERIALIZED_NAME_ROLES)
  @javax.annotation.Nullable
  private RolesRepresentation roles;

  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  @javax.annotation.Nullable
  private List<GroupRepresentation> groups = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_ROLES = "defaultRoles";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_DEFAULT_ROLES)
  @javax.annotation.Nullable
  private List<String> defaultRoles = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_ROLE = "defaultRole";
  @SerializedName(SERIALIZED_NAME_DEFAULT_ROLE)
  @javax.annotation.Nullable
  private RoleRepresentation defaultRole;

  public static final String SERIALIZED_NAME_ADMIN_PERMISSIONS_CLIENT = "adminPermissionsClient";
  @SerializedName(SERIALIZED_NAME_ADMIN_PERMISSIONS_CLIENT)
  @javax.annotation.Nullable
  private ClientRepresentation adminPermissionsClient;

  public static final String SERIALIZED_NAME_DEFAULT_GROUPS = "defaultGroups";
  @SerializedName(SERIALIZED_NAME_DEFAULT_GROUPS)
  @javax.annotation.Nullable
  private List<String> defaultGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_REQUIRED_CREDENTIALS = "requiredCredentials";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_REQUIRED_CREDENTIALS)
  @javax.annotation.Nullable
  private Set<String> requiredCredentials = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_PASSWORD_POLICY = "passwordPolicy";
  @SerializedName(SERIALIZED_NAME_PASSWORD_POLICY)
  @javax.annotation.Nullable
  private String passwordPolicy;

  public static final String SERIALIZED_NAME_OTP_POLICY_TYPE = "otpPolicyType";
  @SerializedName(SERIALIZED_NAME_OTP_POLICY_TYPE)
  @javax.annotation.Nullable
  private String otpPolicyType;

  public static final String SERIALIZED_NAME_OTP_POLICY_ALGORITHM = "otpPolicyAlgorithm";
  @SerializedName(SERIALIZED_NAME_OTP_POLICY_ALGORITHM)
  @javax.annotation.Nullable
  private String otpPolicyAlgorithm;

  public static final String SERIALIZED_NAME_OTP_POLICY_INITIAL_COUNTER = "otpPolicyInitialCounter";
  @SerializedName(SERIALIZED_NAME_OTP_POLICY_INITIAL_COUNTER)
  @javax.annotation.Nullable
  private Integer otpPolicyInitialCounter;

  public static final String SERIALIZED_NAME_OTP_POLICY_DIGITS = "otpPolicyDigits";
  @SerializedName(SERIALIZED_NAME_OTP_POLICY_DIGITS)
  @javax.annotation.Nullable
  private Integer otpPolicyDigits;

  public static final String SERIALIZED_NAME_OTP_POLICY_LOOK_AHEAD_WINDOW = "otpPolicyLookAheadWindow";
  @SerializedName(SERIALIZED_NAME_OTP_POLICY_LOOK_AHEAD_WINDOW)
  @javax.annotation.Nullable
  private Integer otpPolicyLookAheadWindow;

  public static final String SERIALIZED_NAME_OTP_POLICY_PERIOD = "otpPolicyPeriod";
  @SerializedName(SERIALIZED_NAME_OTP_POLICY_PERIOD)
  @javax.annotation.Nullable
  private Integer otpPolicyPeriod;

  public static final String SERIALIZED_NAME_OTP_POLICY_CODE_REUSABLE = "otpPolicyCodeReusable";
  @SerializedName(SERIALIZED_NAME_OTP_POLICY_CODE_REUSABLE)
  @javax.annotation.Nullable
  private Boolean otpPolicyCodeReusable;

  public static final String SERIALIZED_NAME_OTP_SUPPORTED_APPLICATIONS = "otpSupportedApplications";
  @SerializedName(SERIALIZED_NAME_OTP_SUPPORTED_APPLICATIONS)
  @javax.annotation.Nullable
  private List<String> otpSupportedApplications = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOCALIZATION_TEXTS = "localizationTexts";
  @SerializedName(SERIALIZED_NAME_LOCALIZATION_TEXTS)
  @javax.annotation.Nullable
  private Map<String, Map<String, String>> localizationTexts = new HashMap<>();

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_RP_ENTITY_NAME = "webAuthnPolicyRpEntityName";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_RP_ENTITY_NAME)
  @javax.annotation.Nullable
  private String webAuthnPolicyRpEntityName;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_SIGNATURE_ALGORITHMS = "webAuthnPolicySignatureAlgorithms";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_SIGNATURE_ALGORITHMS)
  @javax.annotation.Nullable
  private List<String> webAuthnPolicySignatureAlgorithms = new ArrayList<>();

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_RP_ID = "webAuthnPolicyRpId";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_RP_ID)
  @javax.annotation.Nullable
  private String webAuthnPolicyRpId;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_ATTESTATION_CONVEYANCE_PREFERENCE = "webAuthnPolicyAttestationConveyancePreference";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_ATTESTATION_CONVEYANCE_PREFERENCE)
  @javax.annotation.Nullable
  private String webAuthnPolicyAttestationConveyancePreference;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_AUTHENTICATOR_ATTACHMENT = "webAuthnPolicyAuthenticatorAttachment";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_AUTHENTICATOR_ATTACHMENT)
  @javax.annotation.Nullable
  private String webAuthnPolicyAuthenticatorAttachment;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_REQUIRE_RESIDENT_KEY = "webAuthnPolicyRequireResidentKey";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_REQUIRE_RESIDENT_KEY)
  @javax.annotation.Nullable
  private String webAuthnPolicyRequireResidentKey;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_USER_VERIFICATION_REQUIREMENT = "webAuthnPolicyUserVerificationRequirement";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_USER_VERIFICATION_REQUIREMENT)
  @javax.annotation.Nullable
  private String webAuthnPolicyUserVerificationRequirement;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_CREATE_TIMEOUT = "webAuthnPolicyCreateTimeout";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_CREATE_TIMEOUT)
  @javax.annotation.Nullable
  private Integer webAuthnPolicyCreateTimeout;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_AVOID_SAME_AUTHENTICATOR_REGISTER = "webAuthnPolicyAvoidSameAuthenticatorRegister";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_AVOID_SAME_AUTHENTICATOR_REGISTER)
  @javax.annotation.Nullable
  private Boolean webAuthnPolicyAvoidSameAuthenticatorRegister;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_ACCEPTABLE_AAGUIDS = "webAuthnPolicyAcceptableAaguids";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_ACCEPTABLE_AAGUIDS)
  @javax.annotation.Nullable
  private List<String> webAuthnPolicyAcceptableAaguids = new ArrayList<>();

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_EXTRA_ORIGINS = "webAuthnPolicyExtraOrigins";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_EXTRA_ORIGINS)
  @javax.annotation.Nullable
  private List<String> webAuthnPolicyExtraOrigins = new ArrayList<>();

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ENTITY_NAME = "webAuthnPolicyPasswordlessRpEntityName";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ENTITY_NAME)
  @javax.annotation.Nullable
  private String webAuthnPolicyPasswordlessRpEntityName;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_SIGNATURE_ALGORITHMS = "webAuthnPolicyPasswordlessSignatureAlgorithms";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_SIGNATURE_ALGORITHMS)
  @javax.annotation.Nullable
  private List<String> webAuthnPolicyPasswordlessSignatureAlgorithms = new ArrayList<>();

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ID = "webAuthnPolicyPasswordlessRpId";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_RP_ID)
  @javax.annotation.Nullable
  private String webAuthnPolicyPasswordlessRpId;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_ATTESTATION_CONVEYANCE_PREFERENCE = "webAuthnPolicyPasswordlessAttestationConveyancePreference";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_ATTESTATION_CONVEYANCE_PREFERENCE)
  @javax.annotation.Nullable
  private String webAuthnPolicyPasswordlessAttestationConveyancePreference;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_AUTHENTICATOR_ATTACHMENT = "webAuthnPolicyPasswordlessAuthenticatorAttachment";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_AUTHENTICATOR_ATTACHMENT)
  @javax.annotation.Nullable
  private String webAuthnPolicyPasswordlessAuthenticatorAttachment;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_REQUIRE_RESIDENT_KEY = "webAuthnPolicyPasswordlessRequireResidentKey";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_REQUIRE_RESIDENT_KEY)
  @javax.annotation.Nullable
  private String webAuthnPolicyPasswordlessRequireResidentKey;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_USER_VERIFICATION_REQUIREMENT = "webAuthnPolicyPasswordlessUserVerificationRequirement";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_USER_VERIFICATION_REQUIREMENT)
  @javax.annotation.Nullable
  private String webAuthnPolicyPasswordlessUserVerificationRequirement;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_CREATE_TIMEOUT = "webAuthnPolicyPasswordlessCreateTimeout";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_CREATE_TIMEOUT)
  @javax.annotation.Nullable
  private Integer webAuthnPolicyPasswordlessCreateTimeout;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_AVOID_SAME_AUTHENTICATOR_REGISTER = "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_AVOID_SAME_AUTHENTICATOR_REGISTER)
  @javax.annotation.Nullable
  private Boolean webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_ACCEPTABLE_AAGUIDS = "webAuthnPolicyPasswordlessAcceptableAaguids";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_ACCEPTABLE_AAGUIDS)
  @javax.annotation.Nullable
  private List<String> webAuthnPolicyPasswordlessAcceptableAaguids = new ArrayList<>();

  public static final String SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_EXTRA_ORIGINS = "webAuthnPolicyPasswordlessExtraOrigins";
  @SerializedName(SERIALIZED_NAME_WEB_AUTHN_POLICY_PASSWORDLESS_EXTRA_ORIGINS)
  @javax.annotation.Nullable
  private List<String> webAuthnPolicyPasswordlessExtraOrigins = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENT_PROFILES = "clientProfiles";
  @SerializedName(SERIALIZED_NAME_CLIENT_PROFILES)
  @javax.annotation.Nullable
  private ClientProfilesRepresentation clientProfiles;

  public static final String SERIALIZED_NAME_CLIENT_POLICIES = "clientPolicies";
  @SerializedName(SERIALIZED_NAME_CLIENT_POLICIES)
  @javax.annotation.Nullable
  private ClientPoliciesRepresentation clientPolicies;

  public static final String SERIALIZED_NAME_USERS = "users";
  @SerializedName(SERIALIZED_NAME_USERS)
  @javax.annotation.Nullable
  private List<UserRepresentation> users = new ArrayList<>();

  public static final String SERIALIZED_NAME_FEDERATED_USERS = "federatedUsers";
  @SerializedName(SERIALIZED_NAME_FEDERATED_USERS)
  @javax.annotation.Nullable
  private List<UserRepresentation> federatedUsers = new ArrayList<>();

  public static final String SERIALIZED_NAME_SCOPE_MAPPINGS = "scopeMappings";
  @SerializedName(SERIALIZED_NAME_SCOPE_MAPPINGS)
  @javax.annotation.Nullable
  private List<ScopeMappingRepresentation> scopeMappings = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENT_SCOPE_MAPPINGS = "clientScopeMappings";
  @SerializedName(SERIALIZED_NAME_CLIENT_SCOPE_MAPPINGS)
  @javax.annotation.Nullable
  private Map<String, List<ScopeMappingRepresentation>> clientScopeMappings = new HashMap<>();

  public static final String SERIALIZED_NAME_CLIENTS = "clients";
  @SerializedName(SERIALIZED_NAME_CLIENTS)
  @javax.annotation.Nullable
  private List<ClientRepresentation> clients = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENT_SCOPES = "clientScopes";
  @SerializedName(SERIALIZED_NAME_CLIENT_SCOPES)
  @javax.annotation.Nullable
  private List<ClientScopeRepresentation> clientScopes = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_DEFAULT_CLIENT_SCOPES = "defaultDefaultClientScopes";
  @SerializedName(SERIALIZED_NAME_DEFAULT_DEFAULT_CLIENT_SCOPES)
  @javax.annotation.Nullable
  private List<String> defaultDefaultClientScopes = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFAULT_OPTIONAL_CLIENT_SCOPES = "defaultOptionalClientScopes";
  @SerializedName(SERIALIZED_NAME_DEFAULT_OPTIONAL_CLIENT_SCOPES)
  @javax.annotation.Nullable
  private List<String> defaultOptionalClientScopes = new ArrayList<>();

  public static final String SERIALIZED_NAME_BROWSER_SECURITY_HEADERS = "browserSecurityHeaders";
  @SerializedName(SERIALIZED_NAME_BROWSER_SECURITY_HEADERS)
  @javax.annotation.Nullable
  private Map<String, String> browserSecurityHeaders = new HashMap<>();

  public static final String SERIALIZED_NAME_SMTP_SERVER = "smtpServer";
  @SerializedName(SERIALIZED_NAME_SMTP_SERVER)
  @javax.annotation.Nullable
  private Map<String, String> smtpServer = new HashMap<>();

  public static final String SERIALIZED_NAME_USER_FEDERATION_PROVIDERS = "userFederationProviders";
  @SerializedName(SERIALIZED_NAME_USER_FEDERATION_PROVIDERS)
  @javax.annotation.Nullable
  private List<UserFederationProviderRepresentation> userFederationProviders = new ArrayList<>();

  public static final String SERIALIZED_NAME_USER_FEDERATION_MAPPERS = "userFederationMappers";
  @SerializedName(SERIALIZED_NAME_USER_FEDERATION_MAPPERS)
  @javax.annotation.Nullable
  private List<UserFederationMapperRepresentation> userFederationMappers = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOGIN_THEME = "loginTheme";
  @SerializedName(SERIALIZED_NAME_LOGIN_THEME)
  @javax.annotation.Nullable
  private String loginTheme;

  public static final String SERIALIZED_NAME_ACCOUNT_THEME = "accountTheme";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_THEME)
  @javax.annotation.Nullable
  private String accountTheme;

  public static final String SERIALIZED_NAME_ADMIN_THEME = "adminTheme";
  @SerializedName(SERIALIZED_NAME_ADMIN_THEME)
  @javax.annotation.Nullable
  private String adminTheme;

  public static final String SERIALIZED_NAME_EMAIL_THEME = "emailTheme";
  @SerializedName(SERIALIZED_NAME_EMAIL_THEME)
  @javax.annotation.Nullable
  private String emailTheme;

  public static final String SERIALIZED_NAME_EVENTS_ENABLED = "eventsEnabled";
  @SerializedName(SERIALIZED_NAME_EVENTS_ENABLED)
  @javax.annotation.Nullable
  private Boolean eventsEnabled;

  public static final String SERIALIZED_NAME_EVENTS_EXPIRATION = "eventsExpiration";
  @SerializedName(SERIALIZED_NAME_EVENTS_EXPIRATION)
  @javax.annotation.Nullable
  private Long eventsExpiration;

  public static final String SERIALIZED_NAME_EVENTS_LISTENERS = "eventsListeners";
  @SerializedName(SERIALIZED_NAME_EVENTS_LISTENERS)
  @javax.annotation.Nullable
  private List<String> eventsListeners = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENABLED_EVENT_TYPES = "enabledEventTypes";
  @SerializedName(SERIALIZED_NAME_ENABLED_EVENT_TYPES)
  @javax.annotation.Nullable
  private List<String> enabledEventTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_ADMIN_EVENTS_ENABLED = "adminEventsEnabled";
  @SerializedName(SERIALIZED_NAME_ADMIN_EVENTS_ENABLED)
  @javax.annotation.Nullable
  private Boolean adminEventsEnabled;

  public static final String SERIALIZED_NAME_ADMIN_EVENTS_DETAILS_ENABLED = "adminEventsDetailsEnabled";
  @SerializedName(SERIALIZED_NAME_ADMIN_EVENTS_DETAILS_ENABLED)
  @javax.annotation.Nullable
  private Boolean adminEventsDetailsEnabled;

  public static final String SERIALIZED_NAME_IDENTITY_PROVIDERS = "identityProviders";
  @SerializedName(SERIALIZED_NAME_IDENTITY_PROVIDERS)
  @javax.annotation.Nullable
  private List<IdentityProviderRepresentation> identityProviders = new ArrayList<>();

  public static final String SERIALIZED_NAME_IDENTITY_PROVIDER_MAPPERS = "identityProviderMappers";
  @SerializedName(SERIALIZED_NAME_IDENTITY_PROVIDER_MAPPERS)
  @javax.annotation.Nullable
  private List<IdentityProviderMapperRepresentation> identityProviderMappers = new ArrayList<>();

  public static final String SERIALIZED_NAME_PROTOCOL_MAPPERS = "protocolMappers";
  @SerializedName(SERIALIZED_NAME_PROTOCOL_MAPPERS)
  @javax.annotation.Nullable
  private List<ProtocolMapperRepresentation> protocolMappers = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMPONENTS = "components";
  @SerializedName(SERIALIZED_NAME_COMPONENTS)
  @javax.annotation.Nullable
  private Map<String, List<ComponentExportRepresentation>> components = new HashMap<>();

  public static final String SERIALIZED_NAME_INTERNATIONALIZATION_ENABLED = "internationalizationEnabled";
  @SerializedName(SERIALIZED_NAME_INTERNATIONALIZATION_ENABLED)
  @javax.annotation.Nullable
  private Boolean internationalizationEnabled;

  public static final String SERIALIZED_NAME_SUPPORTED_LOCALES = "supportedLocales";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_LOCALES)
  @javax.annotation.Nullable
  private Set<String> supportedLocales = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_DEFAULT_LOCALE = "defaultLocale";
  @SerializedName(SERIALIZED_NAME_DEFAULT_LOCALE)
  @javax.annotation.Nullable
  private String defaultLocale;

  public static final String SERIALIZED_NAME_AUTHENTICATION_FLOWS = "authenticationFlows";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_FLOWS)
  @javax.annotation.Nullable
  private List<AuthenticationFlowRepresentation> authenticationFlows = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTHENTICATOR_CONFIG = "authenticatorConfig";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATOR_CONFIG)
  @javax.annotation.Nullable
  private List<AuthenticatorConfigRepresentation> authenticatorConfig = new ArrayList<>();

  public static final String SERIALIZED_NAME_REQUIRED_ACTIONS = "requiredActions";
  @SerializedName(SERIALIZED_NAME_REQUIRED_ACTIONS)
  @javax.annotation.Nullable
  private List<RequiredActionProviderRepresentation> requiredActions = new ArrayList<>();

  public static final String SERIALIZED_NAME_BROWSER_FLOW = "browserFlow";
  @SerializedName(SERIALIZED_NAME_BROWSER_FLOW)
  @javax.annotation.Nullable
  private String browserFlow;

  public static final String SERIALIZED_NAME_REGISTRATION_FLOW = "registrationFlow";
  @SerializedName(SERIALIZED_NAME_REGISTRATION_FLOW)
  @javax.annotation.Nullable
  private String registrationFlow;

  public static final String SERIALIZED_NAME_DIRECT_GRANT_FLOW = "directGrantFlow";
  @SerializedName(SERIALIZED_NAME_DIRECT_GRANT_FLOW)
  @javax.annotation.Nullable
  private String directGrantFlow;

  public static final String SERIALIZED_NAME_RESET_CREDENTIALS_FLOW = "resetCredentialsFlow";
  @SerializedName(SERIALIZED_NAME_RESET_CREDENTIALS_FLOW)
  @javax.annotation.Nullable
  private String resetCredentialsFlow;

  public static final String SERIALIZED_NAME_CLIENT_AUTHENTICATION_FLOW = "clientAuthenticationFlow";
  @SerializedName(SERIALIZED_NAME_CLIENT_AUTHENTICATION_FLOW)
  @javax.annotation.Nullable
  private String clientAuthenticationFlow;

  public static final String SERIALIZED_NAME_DOCKER_AUTHENTICATION_FLOW = "dockerAuthenticationFlow";
  @SerializedName(SERIALIZED_NAME_DOCKER_AUTHENTICATION_FLOW)
  @javax.annotation.Nullable
  private String dockerAuthenticationFlow;

  public static final String SERIALIZED_NAME_FIRST_BROKER_LOGIN_FLOW = "firstBrokerLoginFlow";
  @SerializedName(SERIALIZED_NAME_FIRST_BROKER_LOGIN_FLOW)
  @javax.annotation.Nullable
  private String firstBrokerLoginFlow;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  @javax.annotation.Nullable
  private Map<String, String> attributes = new HashMap<>();

  public static final String SERIALIZED_NAME_KEYCLOAK_VERSION = "keycloakVersion";
  @SerializedName(SERIALIZED_NAME_KEYCLOAK_VERSION)
  @javax.annotation.Nullable
  private String keycloakVersion;

  public static final String SERIALIZED_NAME_USER_MANAGED_ACCESS_ALLOWED = "userManagedAccessAllowed";
  @SerializedName(SERIALIZED_NAME_USER_MANAGED_ACCESS_ALLOWED)
  @javax.annotation.Nullable
  private Boolean userManagedAccessAllowed;

  public static final String SERIALIZED_NAME_ORGANIZATIONS_ENABLED = "organizationsEnabled";
  @SerializedName(SERIALIZED_NAME_ORGANIZATIONS_ENABLED)
  @javax.annotation.Nullable
  private Boolean organizationsEnabled;

  public static final String SERIALIZED_NAME_ORGANIZATIONS = "organizations";
  @SerializedName(SERIALIZED_NAME_ORGANIZATIONS)
  @javax.annotation.Nullable
  private List<OrganizationRepresentation> organizations = new ArrayList<>();

  public static final String SERIALIZED_NAME_VERIFIABLE_CREDENTIALS_ENABLED = "verifiableCredentialsEnabled";
  @SerializedName(SERIALIZED_NAME_VERIFIABLE_CREDENTIALS_ENABLED)
  @javax.annotation.Nullable
  private Boolean verifiableCredentialsEnabled;

  public static final String SERIALIZED_NAME_ADMIN_PERMISSIONS_ENABLED = "adminPermissionsEnabled";
  @SerializedName(SERIALIZED_NAME_ADMIN_PERMISSIONS_ENABLED)
  @javax.annotation.Nullable
  private Boolean adminPermissionsEnabled;

  public static final String SERIALIZED_NAME_SOCIAL = "social";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_SOCIAL)
  @javax.annotation.Nullable
  private Boolean social;

  public static final String SERIALIZED_NAME_UPDATE_PROFILE_ON_INITIAL_SOCIAL_LOGIN = "updateProfileOnInitialSocialLogin";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_UPDATE_PROFILE_ON_INITIAL_SOCIAL_LOGIN)
  @javax.annotation.Nullable
  private Boolean updateProfileOnInitialSocialLogin;

  public static final String SERIALIZED_NAME_SOCIAL_PROVIDERS = "socialProviders";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_SOCIAL_PROVIDERS)
  @javax.annotation.Nullable
  private Map<String, String> socialProviders = new HashMap<>();

  public static final String SERIALIZED_NAME_APPLICATION_SCOPE_MAPPINGS = "applicationScopeMappings";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_APPLICATION_SCOPE_MAPPINGS)
  @javax.annotation.Nullable
  private Map<String, List<ScopeMappingRepresentation>> applicationScopeMappings = new HashMap<>();

  public static final String SERIALIZED_NAME_APPLICATIONS = "applications";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_APPLICATIONS)
  @javax.annotation.Nullable
  private List<ApplicationRepresentation> applications = new ArrayList<>();

  public static final String SERIALIZED_NAME_OAUTH_CLIENTS = "oauthClients";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_OAUTH_CLIENTS)
  @javax.annotation.Nullable
  private List<OAuthClientRepresentation> oauthClients = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENT_TEMPLATES = "clientTemplates";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_CLIENT_TEMPLATES)
  @javax.annotation.Nullable
  private List<ClientTemplateRepresentation> clientTemplates = new ArrayList<>();

  public static final String SERIALIZED_NAME_O_AUTH2_DEVICE_CODE_LIFESPAN = "oAuth2DeviceCodeLifespan";
  @SerializedName(SERIALIZED_NAME_O_AUTH2_DEVICE_CODE_LIFESPAN)
  @javax.annotation.Nullable
  private Integer oAuth2DeviceCodeLifespan;

  public static final String SERIALIZED_NAME_O_AUTH2_DEVICE_POLLING_INTERVAL = "oAuth2DevicePollingInterval";
  @SerializedName(SERIALIZED_NAME_O_AUTH2_DEVICE_POLLING_INTERVAL)
  @javax.annotation.Nullable
  private Integer oAuth2DevicePollingInterval;

  public RealmRepresentation() {
  }

  public RealmRepresentation id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public RealmRepresentation realm(@javax.annotation.Nullable String realm) {
    this.realm = realm;
    return this;
  }

  /**
   * Get realm
   * @return realm
   */
  @javax.annotation.Nullable
  public String getRealm() {
    return realm;
  }

  public void setRealm(@javax.annotation.Nullable String realm) {
    this.realm = realm;
  }


  public RealmRepresentation displayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
  }


  public RealmRepresentation displayNameHtml(@javax.annotation.Nullable String displayNameHtml) {
    this.displayNameHtml = displayNameHtml;
    return this;
  }

  /**
   * Get displayNameHtml
   * @return displayNameHtml
   */
  @javax.annotation.Nullable
  public String getDisplayNameHtml() {
    return displayNameHtml;
  }

  public void setDisplayNameHtml(@javax.annotation.Nullable String displayNameHtml) {
    this.displayNameHtml = displayNameHtml;
  }


  public RealmRepresentation notBefore(@javax.annotation.Nullable Integer notBefore) {
    this.notBefore = notBefore;
    return this;
  }

  /**
   * Get notBefore
   * @return notBefore
   */
  @javax.annotation.Nullable
  public Integer getNotBefore() {
    return notBefore;
  }

  public void setNotBefore(@javax.annotation.Nullable Integer notBefore) {
    this.notBefore = notBefore;
  }


  public RealmRepresentation defaultSignatureAlgorithm(@javax.annotation.Nullable String defaultSignatureAlgorithm) {
    this.defaultSignatureAlgorithm = defaultSignatureAlgorithm;
    return this;
  }

  /**
   * Get defaultSignatureAlgorithm
   * @return defaultSignatureAlgorithm
   */
  @javax.annotation.Nullable
  public String getDefaultSignatureAlgorithm() {
    return defaultSignatureAlgorithm;
  }

  public void setDefaultSignatureAlgorithm(@javax.annotation.Nullable String defaultSignatureAlgorithm) {
    this.defaultSignatureAlgorithm = defaultSignatureAlgorithm;
  }


  public RealmRepresentation revokeRefreshToken(@javax.annotation.Nullable Boolean revokeRefreshToken) {
    this.revokeRefreshToken = revokeRefreshToken;
    return this;
  }

  /**
   * Get revokeRefreshToken
   * @return revokeRefreshToken
   */
  @javax.annotation.Nullable
  public Boolean getRevokeRefreshToken() {
    return revokeRefreshToken;
  }

  public void setRevokeRefreshToken(@javax.annotation.Nullable Boolean revokeRefreshToken) {
    this.revokeRefreshToken = revokeRefreshToken;
  }


  public RealmRepresentation refreshTokenMaxReuse(@javax.annotation.Nullable Integer refreshTokenMaxReuse) {
    this.refreshTokenMaxReuse = refreshTokenMaxReuse;
    return this;
  }

  /**
   * Get refreshTokenMaxReuse
   * @return refreshTokenMaxReuse
   */
  @javax.annotation.Nullable
  public Integer getRefreshTokenMaxReuse() {
    return refreshTokenMaxReuse;
  }

  public void setRefreshTokenMaxReuse(@javax.annotation.Nullable Integer refreshTokenMaxReuse) {
    this.refreshTokenMaxReuse = refreshTokenMaxReuse;
  }


  public RealmRepresentation accessTokenLifespan(@javax.annotation.Nullable Integer accessTokenLifespan) {
    this.accessTokenLifespan = accessTokenLifespan;
    return this;
  }

  /**
   * Get accessTokenLifespan
   * @return accessTokenLifespan
   */
  @javax.annotation.Nullable
  public Integer getAccessTokenLifespan() {
    return accessTokenLifespan;
  }

  public void setAccessTokenLifespan(@javax.annotation.Nullable Integer accessTokenLifespan) {
    this.accessTokenLifespan = accessTokenLifespan;
  }


  public RealmRepresentation accessTokenLifespanForImplicitFlow(@javax.annotation.Nullable Integer accessTokenLifespanForImplicitFlow) {
    this.accessTokenLifespanForImplicitFlow = accessTokenLifespanForImplicitFlow;
    return this;
  }

  /**
   * Get accessTokenLifespanForImplicitFlow
   * @return accessTokenLifespanForImplicitFlow
   */
  @javax.annotation.Nullable
  public Integer getAccessTokenLifespanForImplicitFlow() {
    return accessTokenLifespanForImplicitFlow;
  }

  public void setAccessTokenLifespanForImplicitFlow(@javax.annotation.Nullable Integer accessTokenLifespanForImplicitFlow) {
    this.accessTokenLifespanForImplicitFlow = accessTokenLifespanForImplicitFlow;
  }


  public RealmRepresentation ssoSessionIdleTimeout(@javax.annotation.Nullable Integer ssoSessionIdleTimeout) {
    this.ssoSessionIdleTimeout = ssoSessionIdleTimeout;
    return this;
  }

  /**
   * Get ssoSessionIdleTimeout
   * @return ssoSessionIdleTimeout
   */
  @javax.annotation.Nullable
  public Integer getSsoSessionIdleTimeout() {
    return ssoSessionIdleTimeout;
  }

  public void setSsoSessionIdleTimeout(@javax.annotation.Nullable Integer ssoSessionIdleTimeout) {
    this.ssoSessionIdleTimeout = ssoSessionIdleTimeout;
  }


  public RealmRepresentation ssoSessionMaxLifespan(@javax.annotation.Nullable Integer ssoSessionMaxLifespan) {
    this.ssoSessionMaxLifespan = ssoSessionMaxLifespan;
    return this;
  }

  /**
   * Get ssoSessionMaxLifespan
   * @return ssoSessionMaxLifespan
   */
  @javax.annotation.Nullable
  public Integer getSsoSessionMaxLifespan() {
    return ssoSessionMaxLifespan;
  }

  public void setSsoSessionMaxLifespan(@javax.annotation.Nullable Integer ssoSessionMaxLifespan) {
    this.ssoSessionMaxLifespan = ssoSessionMaxLifespan;
  }


  public RealmRepresentation ssoSessionIdleTimeoutRememberMe(@javax.annotation.Nullable Integer ssoSessionIdleTimeoutRememberMe) {
    this.ssoSessionIdleTimeoutRememberMe = ssoSessionIdleTimeoutRememberMe;
    return this;
  }

  /**
   * Get ssoSessionIdleTimeoutRememberMe
   * @return ssoSessionIdleTimeoutRememberMe
   */
  @javax.annotation.Nullable
  public Integer getSsoSessionIdleTimeoutRememberMe() {
    return ssoSessionIdleTimeoutRememberMe;
  }

  public void setSsoSessionIdleTimeoutRememberMe(@javax.annotation.Nullable Integer ssoSessionIdleTimeoutRememberMe) {
    this.ssoSessionIdleTimeoutRememberMe = ssoSessionIdleTimeoutRememberMe;
  }


  public RealmRepresentation ssoSessionMaxLifespanRememberMe(@javax.annotation.Nullable Integer ssoSessionMaxLifespanRememberMe) {
    this.ssoSessionMaxLifespanRememberMe = ssoSessionMaxLifespanRememberMe;
    return this;
  }

  /**
   * Get ssoSessionMaxLifespanRememberMe
   * @return ssoSessionMaxLifespanRememberMe
   */
  @javax.annotation.Nullable
  public Integer getSsoSessionMaxLifespanRememberMe() {
    return ssoSessionMaxLifespanRememberMe;
  }

  public void setSsoSessionMaxLifespanRememberMe(@javax.annotation.Nullable Integer ssoSessionMaxLifespanRememberMe) {
    this.ssoSessionMaxLifespanRememberMe = ssoSessionMaxLifespanRememberMe;
  }


  public RealmRepresentation offlineSessionIdleTimeout(@javax.annotation.Nullable Integer offlineSessionIdleTimeout) {
    this.offlineSessionIdleTimeout = offlineSessionIdleTimeout;
    return this;
  }

  /**
   * Get offlineSessionIdleTimeout
   * @return offlineSessionIdleTimeout
   */
  @javax.annotation.Nullable
  public Integer getOfflineSessionIdleTimeout() {
    return offlineSessionIdleTimeout;
  }

  public void setOfflineSessionIdleTimeout(@javax.annotation.Nullable Integer offlineSessionIdleTimeout) {
    this.offlineSessionIdleTimeout = offlineSessionIdleTimeout;
  }


  public RealmRepresentation offlineSessionMaxLifespanEnabled(@javax.annotation.Nullable Boolean offlineSessionMaxLifespanEnabled) {
    this.offlineSessionMaxLifespanEnabled = offlineSessionMaxLifespanEnabled;
    return this;
  }

  /**
   * Get offlineSessionMaxLifespanEnabled
   * @return offlineSessionMaxLifespanEnabled
   */
  @javax.annotation.Nullable
  public Boolean getOfflineSessionMaxLifespanEnabled() {
    return offlineSessionMaxLifespanEnabled;
  }

  public void setOfflineSessionMaxLifespanEnabled(@javax.annotation.Nullable Boolean offlineSessionMaxLifespanEnabled) {
    this.offlineSessionMaxLifespanEnabled = offlineSessionMaxLifespanEnabled;
  }


  public RealmRepresentation offlineSessionMaxLifespan(@javax.annotation.Nullable Integer offlineSessionMaxLifespan) {
    this.offlineSessionMaxLifespan = offlineSessionMaxLifespan;
    return this;
  }

  /**
   * Get offlineSessionMaxLifespan
   * @return offlineSessionMaxLifespan
   */
  @javax.annotation.Nullable
  public Integer getOfflineSessionMaxLifespan() {
    return offlineSessionMaxLifespan;
  }

  public void setOfflineSessionMaxLifespan(@javax.annotation.Nullable Integer offlineSessionMaxLifespan) {
    this.offlineSessionMaxLifespan = offlineSessionMaxLifespan;
  }


  public RealmRepresentation clientSessionIdleTimeout(@javax.annotation.Nullable Integer clientSessionIdleTimeout) {
    this.clientSessionIdleTimeout = clientSessionIdleTimeout;
    return this;
  }

  /**
   * Get clientSessionIdleTimeout
   * @return clientSessionIdleTimeout
   */
  @javax.annotation.Nullable
  public Integer getClientSessionIdleTimeout() {
    return clientSessionIdleTimeout;
  }

  public void setClientSessionIdleTimeout(@javax.annotation.Nullable Integer clientSessionIdleTimeout) {
    this.clientSessionIdleTimeout = clientSessionIdleTimeout;
  }


  public RealmRepresentation clientSessionMaxLifespan(@javax.annotation.Nullable Integer clientSessionMaxLifespan) {
    this.clientSessionMaxLifespan = clientSessionMaxLifespan;
    return this;
  }

  /**
   * Get clientSessionMaxLifespan
   * @return clientSessionMaxLifespan
   */
  @javax.annotation.Nullable
  public Integer getClientSessionMaxLifespan() {
    return clientSessionMaxLifespan;
  }

  public void setClientSessionMaxLifespan(@javax.annotation.Nullable Integer clientSessionMaxLifespan) {
    this.clientSessionMaxLifespan = clientSessionMaxLifespan;
  }


  public RealmRepresentation clientOfflineSessionIdleTimeout(@javax.annotation.Nullable Integer clientOfflineSessionIdleTimeout) {
    this.clientOfflineSessionIdleTimeout = clientOfflineSessionIdleTimeout;
    return this;
  }

  /**
   * Get clientOfflineSessionIdleTimeout
   * @return clientOfflineSessionIdleTimeout
   */
  @javax.annotation.Nullable
  public Integer getClientOfflineSessionIdleTimeout() {
    return clientOfflineSessionIdleTimeout;
  }

  public void setClientOfflineSessionIdleTimeout(@javax.annotation.Nullable Integer clientOfflineSessionIdleTimeout) {
    this.clientOfflineSessionIdleTimeout = clientOfflineSessionIdleTimeout;
  }


  public RealmRepresentation clientOfflineSessionMaxLifespan(@javax.annotation.Nullable Integer clientOfflineSessionMaxLifespan) {
    this.clientOfflineSessionMaxLifespan = clientOfflineSessionMaxLifespan;
    return this;
  }

  /**
   * Get clientOfflineSessionMaxLifespan
   * @return clientOfflineSessionMaxLifespan
   */
  @javax.annotation.Nullable
  public Integer getClientOfflineSessionMaxLifespan() {
    return clientOfflineSessionMaxLifespan;
  }

  public void setClientOfflineSessionMaxLifespan(@javax.annotation.Nullable Integer clientOfflineSessionMaxLifespan) {
    this.clientOfflineSessionMaxLifespan = clientOfflineSessionMaxLifespan;
  }


  public RealmRepresentation accessCodeLifespan(@javax.annotation.Nullable Integer accessCodeLifespan) {
    this.accessCodeLifespan = accessCodeLifespan;
    return this;
  }

  /**
   * Get accessCodeLifespan
   * @return accessCodeLifespan
   */
  @javax.annotation.Nullable
  public Integer getAccessCodeLifespan() {
    return accessCodeLifespan;
  }

  public void setAccessCodeLifespan(@javax.annotation.Nullable Integer accessCodeLifespan) {
    this.accessCodeLifespan = accessCodeLifespan;
  }


  public RealmRepresentation accessCodeLifespanUserAction(@javax.annotation.Nullable Integer accessCodeLifespanUserAction) {
    this.accessCodeLifespanUserAction = accessCodeLifespanUserAction;
    return this;
  }

  /**
   * Get accessCodeLifespanUserAction
   * @return accessCodeLifespanUserAction
   */
  @javax.annotation.Nullable
  public Integer getAccessCodeLifespanUserAction() {
    return accessCodeLifespanUserAction;
  }

  public void setAccessCodeLifespanUserAction(@javax.annotation.Nullable Integer accessCodeLifespanUserAction) {
    this.accessCodeLifespanUserAction = accessCodeLifespanUserAction;
  }


  public RealmRepresentation accessCodeLifespanLogin(@javax.annotation.Nullable Integer accessCodeLifespanLogin) {
    this.accessCodeLifespanLogin = accessCodeLifespanLogin;
    return this;
  }

  /**
   * Get accessCodeLifespanLogin
   * @return accessCodeLifespanLogin
   */
  @javax.annotation.Nullable
  public Integer getAccessCodeLifespanLogin() {
    return accessCodeLifespanLogin;
  }

  public void setAccessCodeLifespanLogin(@javax.annotation.Nullable Integer accessCodeLifespanLogin) {
    this.accessCodeLifespanLogin = accessCodeLifespanLogin;
  }


  public RealmRepresentation actionTokenGeneratedByAdminLifespan(@javax.annotation.Nullable Integer actionTokenGeneratedByAdminLifespan) {
    this.actionTokenGeneratedByAdminLifespan = actionTokenGeneratedByAdminLifespan;
    return this;
  }

  /**
   * Get actionTokenGeneratedByAdminLifespan
   * @return actionTokenGeneratedByAdminLifespan
   */
  @javax.annotation.Nullable
  public Integer getActionTokenGeneratedByAdminLifespan() {
    return actionTokenGeneratedByAdminLifespan;
  }

  public void setActionTokenGeneratedByAdminLifespan(@javax.annotation.Nullable Integer actionTokenGeneratedByAdminLifespan) {
    this.actionTokenGeneratedByAdminLifespan = actionTokenGeneratedByAdminLifespan;
  }


  public RealmRepresentation actionTokenGeneratedByUserLifespan(@javax.annotation.Nullable Integer actionTokenGeneratedByUserLifespan) {
    this.actionTokenGeneratedByUserLifespan = actionTokenGeneratedByUserLifespan;
    return this;
  }

  /**
   * Get actionTokenGeneratedByUserLifespan
   * @return actionTokenGeneratedByUserLifespan
   */
  @javax.annotation.Nullable
  public Integer getActionTokenGeneratedByUserLifespan() {
    return actionTokenGeneratedByUserLifespan;
  }

  public void setActionTokenGeneratedByUserLifespan(@javax.annotation.Nullable Integer actionTokenGeneratedByUserLifespan) {
    this.actionTokenGeneratedByUserLifespan = actionTokenGeneratedByUserLifespan;
  }


  public RealmRepresentation oauth2DeviceCodeLifespan(@javax.annotation.Nullable Integer oauth2DeviceCodeLifespan) {
    this.oauth2DeviceCodeLifespan = oauth2DeviceCodeLifespan;
    return this;
  }

  /**
   * Get oauth2DeviceCodeLifespan
   * @return oauth2DeviceCodeLifespan
   */
  @javax.annotation.Nullable
  public Integer getOauth2DeviceCodeLifespan() {
    return oauth2DeviceCodeLifespan;
  }

  public void setOauth2DeviceCodeLifespan(@javax.annotation.Nullable Integer oauth2DeviceCodeLifespan) {
    this.oauth2DeviceCodeLifespan = oauth2DeviceCodeLifespan;
  }


  public RealmRepresentation oauth2DevicePollingInterval(@javax.annotation.Nullable Integer oauth2DevicePollingInterval) {
    this.oauth2DevicePollingInterval = oauth2DevicePollingInterval;
    return this;
  }

  /**
   * Get oauth2DevicePollingInterval
   * @return oauth2DevicePollingInterval
   */
  @javax.annotation.Nullable
  public Integer getOauth2DevicePollingInterval() {
    return oauth2DevicePollingInterval;
  }

  public void setOauth2DevicePollingInterval(@javax.annotation.Nullable Integer oauth2DevicePollingInterval) {
    this.oauth2DevicePollingInterval = oauth2DevicePollingInterval;
  }


  public RealmRepresentation enabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }


  public RealmRepresentation sslRequired(@javax.annotation.Nullable String sslRequired) {
    this.sslRequired = sslRequired;
    return this;
  }

  /**
   * Get sslRequired
   * @return sslRequired
   */
  @javax.annotation.Nullable
  public String getSslRequired() {
    return sslRequired;
  }

  public void setSslRequired(@javax.annotation.Nullable String sslRequired) {
    this.sslRequired = sslRequired;
  }


  @Deprecated
  public RealmRepresentation passwordCredentialGrantAllowed(@javax.annotation.Nullable Boolean passwordCredentialGrantAllowed) {
    this.passwordCredentialGrantAllowed = passwordCredentialGrantAllowed;
    return this;
  }

  /**
   * Get passwordCredentialGrantAllowed
   * @return passwordCredentialGrantAllowed
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getPasswordCredentialGrantAllowed() {
    return passwordCredentialGrantAllowed;
  }

  @Deprecated
  public void setPasswordCredentialGrantAllowed(@javax.annotation.Nullable Boolean passwordCredentialGrantAllowed) {
    this.passwordCredentialGrantAllowed = passwordCredentialGrantAllowed;
  }


  public RealmRepresentation registrationAllowed(@javax.annotation.Nullable Boolean registrationAllowed) {
    this.registrationAllowed = registrationAllowed;
    return this;
  }

  /**
   * Get registrationAllowed
   * @return registrationAllowed
   */
  @javax.annotation.Nullable
  public Boolean getRegistrationAllowed() {
    return registrationAllowed;
  }

  public void setRegistrationAllowed(@javax.annotation.Nullable Boolean registrationAllowed) {
    this.registrationAllowed = registrationAllowed;
  }


  public RealmRepresentation registrationEmailAsUsername(@javax.annotation.Nullable Boolean registrationEmailAsUsername) {
    this.registrationEmailAsUsername = registrationEmailAsUsername;
    return this;
  }

  /**
   * Get registrationEmailAsUsername
   * @return registrationEmailAsUsername
   */
  @javax.annotation.Nullable
  public Boolean getRegistrationEmailAsUsername() {
    return registrationEmailAsUsername;
  }

  public void setRegistrationEmailAsUsername(@javax.annotation.Nullable Boolean registrationEmailAsUsername) {
    this.registrationEmailAsUsername = registrationEmailAsUsername;
  }


  public RealmRepresentation rememberMe(@javax.annotation.Nullable Boolean rememberMe) {
    this.rememberMe = rememberMe;
    return this;
  }

  /**
   * Get rememberMe
   * @return rememberMe
   */
  @javax.annotation.Nullable
  public Boolean getRememberMe() {
    return rememberMe;
  }

  public void setRememberMe(@javax.annotation.Nullable Boolean rememberMe) {
    this.rememberMe = rememberMe;
  }


  public RealmRepresentation verifyEmail(@javax.annotation.Nullable Boolean verifyEmail) {
    this.verifyEmail = verifyEmail;
    return this;
  }

  /**
   * Get verifyEmail
   * @return verifyEmail
   */
  @javax.annotation.Nullable
  public Boolean getVerifyEmail() {
    return verifyEmail;
  }

  public void setVerifyEmail(@javax.annotation.Nullable Boolean verifyEmail) {
    this.verifyEmail = verifyEmail;
  }


  public RealmRepresentation loginWithEmailAllowed(@javax.annotation.Nullable Boolean loginWithEmailAllowed) {
    this.loginWithEmailAllowed = loginWithEmailAllowed;
    return this;
  }

  /**
   * Get loginWithEmailAllowed
   * @return loginWithEmailAllowed
   */
  @javax.annotation.Nullable
  public Boolean getLoginWithEmailAllowed() {
    return loginWithEmailAllowed;
  }

  public void setLoginWithEmailAllowed(@javax.annotation.Nullable Boolean loginWithEmailAllowed) {
    this.loginWithEmailAllowed = loginWithEmailAllowed;
  }


  public RealmRepresentation duplicateEmailsAllowed(@javax.annotation.Nullable Boolean duplicateEmailsAllowed) {
    this.duplicateEmailsAllowed = duplicateEmailsAllowed;
    return this;
  }

  /**
   * Get duplicateEmailsAllowed
   * @return duplicateEmailsAllowed
   */
  @javax.annotation.Nullable
  public Boolean getDuplicateEmailsAllowed() {
    return duplicateEmailsAllowed;
  }

  public void setDuplicateEmailsAllowed(@javax.annotation.Nullable Boolean duplicateEmailsAllowed) {
    this.duplicateEmailsAllowed = duplicateEmailsAllowed;
  }


  public RealmRepresentation resetPasswordAllowed(@javax.annotation.Nullable Boolean resetPasswordAllowed) {
    this.resetPasswordAllowed = resetPasswordAllowed;
    return this;
  }

  /**
   * Get resetPasswordAllowed
   * @return resetPasswordAllowed
   */
  @javax.annotation.Nullable
  public Boolean getResetPasswordAllowed() {
    return resetPasswordAllowed;
  }

  public void setResetPasswordAllowed(@javax.annotation.Nullable Boolean resetPasswordAllowed) {
    this.resetPasswordAllowed = resetPasswordAllowed;
  }


  public RealmRepresentation editUsernameAllowed(@javax.annotation.Nullable Boolean editUsernameAllowed) {
    this.editUsernameAllowed = editUsernameAllowed;
    return this;
  }

  /**
   * Get editUsernameAllowed
   * @return editUsernameAllowed
   */
  @javax.annotation.Nullable
  public Boolean getEditUsernameAllowed() {
    return editUsernameAllowed;
  }

  public void setEditUsernameAllowed(@javax.annotation.Nullable Boolean editUsernameAllowed) {
    this.editUsernameAllowed = editUsernameAllowed;
  }


  @Deprecated
  public RealmRepresentation userCacheEnabled(@javax.annotation.Nullable Boolean userCacheEnabled) {
    this.userCacheEnabled = userCacheEnabled;
    return this;
  }

  /**
   * Get userCacheEnabled
   * @return userCacheEnabled
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getUserCacheEnabled() {
    return userCacheEnabled;
  }

  @Deprecated
  public void setUserCacheEnabled(@javax.annotation.Nullable Boolean userCacheEnabled) {
    this.userCacheEnabled = userCacheEnabled;
  }


  @Deprecated
  public RealmRepresentation realmCacheEnabled(@javax.annotation.Nullable Boolean realmCacheEnabled) {
    this.realmCacheEnabled = realmCacheEnabled;
    return this;
  }

  /**
   * Get realmCacheEnabled
   * @return realmCacheEnabled
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getRealmCacheEnabled() {
    return realmCacheEnabled;
  }

  @Deprecated
  public void setRealmCacheEnabled(@javax.annotation.Nullable Boolean realmCacheEnabled) {
    this.realmCacheEnabled = realmCacheEnabled;
  }


  public RealmRepresentation bruteForceProtected(@javax.annotation.Nullable Boolean bruteForceProtected) {
    this.bruteForceProtected = bruteForceProtected;
    return this;
  }

  /**
   * Get bruteForceProtected
   * @return bruteForceProtected
   */
  @javax.annotation.Nullable
  public Boolean getBruteForceProtected() {
    return bruteForceProtected;
  }

  public void setBruteForceProtected(@javax.annotation.Nullable Boolean bruteForceProtected) {
    this.bruteForceProtected = bruteForceProtected;
  }


  public RealmRepresentation permanentLockout(@javax.annotation.Nullable Boolean permanentLockout) {
    this.permanentLockout = permanentLockout;
    return this;
  }

  /**
   * Get permanentLockout
   * @return permanentLockout
   */
  @javax.annotation.Nullable
  public Boolean getPermanentLockout() {
    return permanentLockout;
  }

  public void setPermanentLockout(@javax.annotation.Nullable Boolean permanentLockout) {
    this.permanentLockout = permanentLockout;
  }


  public RealmRepresentation maxTemporaryLockouts(@javax.annotation.Nullable Integer maxTemporaryLockouts) {
    this.maxTemporaryLockouts = maxTemporaryLockouts;
    return this;
  }

  /**
   * Get maxTemporaryLockouts
   * @return maxTemporaryLockouts
   */
  @javax.annotation.Nullable
  public Integer getMaxTemporaryLockouts() {
    return maxTemporaryLockouts;
  }

  public void setMaxTemporaryLockouts(@javax.annotation.Nullable Integer maxTemporaryLockouts) {
    this.maxTemporaryLockouts = maxTemporaryLockouts;
  }


  public RealmRepresentation bruteForceStrategy(@javax.annotation.Nullable BruteForceStrategy bruteForceStrategy) {
    this.bruteForceStrategy = bruteForceStrategy;
    return this;
  }

  /**
   * Get bruteForceStrategy
   * @return bruteForceStrategy
   */
  @javax.annotation.Nullable
  public BruteForceStrategy getBruteForceStrategy() {
    return bruteForceStrategy;
  }

  public void setBruteForceStrategy(@javax.annotation.Nullable BruteForceStrategy bruteForceStrategy) {
    this.bruteForceStrategy = bruteForceStrategy;
  }


  public RealmRepresentation maxFailureWaitSeconds(@javax.annotation.Nullable Integer maxFailureWaitSeconds) {
    this.maxFailureWaitSeconds = maxFailureWaitSeconds;
    return this;
  }

  /**
   * Get maxFailureWaitSeconds
   * @return maxFailureWaitSeconds
   */
  @javax.annotation.Nullable
  public Integer getMaxFailureWaitSeconds() {
    return maxFailureWaitSeconds;
  }

  public void setMaxFailureWaitSeconds(@javax.annotation.Nullable Integer maxFailureWaitSeconds) {
    this.maxFailureWaitSeconds = maxFailureWaitSeconds;
  }


  public RealmRepresentation minimumQuickLoginWaitSeconds(@javax.annotation.Nullable Integer minimumQuickLoginWaitSeconds) {
    this.minimumQuickLoginWaitSeconds = minimumQuickLoginWaitSeconds;
    return this;
  }

  /**
   * Get minimumQuickLoginWaitSeconds
   * @return minimumQuickLoginWaitSeconds
   */
  @javax.annotation.Nullable
  public Integer getMinimumQuickLoginWaitSeconds() {
    return minimumQuickLoginWaitSeconds;
  }

  public void setMinimumQuickLoginWaitSeconds(@javax.annotation.Nullable Integer minimumQuickLoginWaitSeconds) {
    this.minimumQuickLoginWaitSeconds = minimumQuickLoginWaitSeconds;
  }


  public RealmRepresentation waitIncrementSeconds(@javax.annotation.Nullable Integer waitIncrementSeconds) {
    this.waitIncrementSeconds = waitIncrementSeconds;
    return this;
  }

  /**
   * Get waitIncrementSeconds
   * @return waitIncrementSeconds
   */
  @javax.annotation.Nullable
  public Integer getWaitIncrementSeconds() {
    return waitIncrementSeconds;
  }

  public void setWaitIncrementSeconds(@javax.annotation.Nullable Integer waitIncrementSeconds) {
    this.waitIncrementSeconds = waitIncrementSeconds;
  }


  public RealmRepresentation quickLoginCheckMilliSeconds(@javax.annotation.Nullable Long quickLoginCheckMilliSeconds) {
    this.quickLoginCheckMilliSeconds = quickLoginCheckMilliSeconds;
    return this;
  }

  /**
   * Get quickLoginCheckMilliSeconds
   * @return quickLoginCheckMilliSeconds
   */
  @javax.annotation.Nullable
  public Long getQuickLoginCheckMilliSeconds() {
    return quickLoginCheckMilliSeconds;
  }

  public void setQuickLoginCheckMilliSeconds(@javax.annotation.Nullable Long quickLoginCheckMilliSeconds) {
    this.quickLoginCheckMilliSeconds = quickLoginCheckMilliSeconds;
  }


  public RealmRepresentation maxDeltaTimeSeconds(@javax.annotation.Nullable Integer maxDeltaTimeSeconds) {
    this.maxDeltaTimeSeconds = maxDeltaTimeSeconds;
    return this;
  }

  /**
   * Get maxDeltaTimeSeconds
   * @return maxDeltaTimeSeconds
   */
  @javax.annotation.Nullable
  public Integer getMaxDeltaTimeSeconds() {
    return maxDeltaTimeSeconds;
  }

  public void setMaxDeltaTimeSeconds(@javax.annotation.Nullable Integer maxDeltaTimeSeconds) {
    this.maxDeltaTimeSeconds = maxDeltaTimeSeconds;
  }


  public RealmRepresentation failureFactor(@javax.annotation.Nullable Integer failureFactor) {
    this.failureFactor = failureFactor;
    return this;
  }

  /**
   * Get failureFactor
   * @return failureFactor
   */
  @javax.annotation.Nullable
  public Integer getFailureFactor() {
    return failureFactor;
  }

  public void setFailureFactor(@javax.annotation.Nullable Integer failureFactor) {
    this.failureFactor = failureFactor;
  }


  @Deprecated
  public RealmRepresentation privateKey(@javax.annotation.Nullable String privateKey) {
    this.privateKey = privateKey;
    return this;
  }

  /**
   * Get privateKey
   * @return privateKey
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getPrivateKey() {
    return privateKey;
  }

  @Deprecated
  public void setPrivateKey(@javax.annotation.Nullable String privateKey) {
    this.privateKey = privateKey;
  }


  @Deprecated
  public RealmRepresentation publicKey(@javax.annotation.Nullable String publicKey) {
    this.publicKey = publicKey;
    return this;
  }

  /**
   * Get publicKey
   * @return publicKey
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getPublicKey() {
    return publicKey;
  }

  @Deprecated
  public void setPublicKey(@javax.annotation.Nullable String publicKey) {
    this.publicKey = publicKey;
  }


  @Deprecated
  public RealmRepresentation certificate(@javax.annotation.Nullable String certificate) {
    this.certificate = certificate;
    return this;
  }

  /**
   * Get certificate
   * @return certificate
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getCertificate() {
    return certificate;
  }

  @Deprecated
  public void setCertificate(@javax.annotation.Nullable String certificate) {
    this.certificate = certificate;
  }


  @Deprecated
  public RealmRepresentation codeSecret(@javax.annotation.Nullable String codeSecret) {
    this.codeSecret = codeSecret;
    return this;
  }

  /**
   * Get codeSecret
   * @return codeSecret
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getCodeSecret() {
    return codeSecret;
  }

  @Deprecated
  public void setCodeSecret(@javax.annotation.Nullable String codeSecret) {
    this.codeSecret = codeSecret;
  }


  public RealmRepresentation roles(@javax.annotation.Nullable RolesRepresentation roles) {
    this.roles = roles;
    return this;
  }

  /**
   * Get roles
   * @return roles
   */
  @javax.annotation.Nullable
  public RolesRepresentation getRoles() {
    return roles;
  }

  public void setRoles(@javax.annotation.Nullable RolesRepresentation roles) {
    this.roles = roles;
  }


  public RealmRepresentation groups(@javax.annotation.Nullable List<GroupRepresentation> groups) {
    this.groups = groups;
    return this;
  }

  public RealmRepresentation addGroupsItem(GroupRepresentation groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nullable
  public List<GroupRepresentation> getGroups() {
    return groups;
  }

  public void setGroups(@javax.annotation.Nullable List<GroupRepresentation> groups) {
    this.groups = groups;
  }


  @Deprecated
  public RealmRepresentation defaultRoles(@javax.annotation.Nullable List<String> defaultRoles) {
    this.defaultRoles = defaultRoles;
    return this;
  }

  public RealmRepresentation addDefaultRolesItem(String defaultRolesItem) {
    if (this.defaultRoles == null) {
      this.defaultRoles = new ArrayList<>();
    }
    this.defaultRoles.add(defaultRolesItem);
    return this;
  }

  /**
   * Get defaultRoles
   * @return defaultRoles
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<String> getDefaultRoles() {
    return defaultRoles;
  }

  @Deprecated
  public void setDefaultRoles(@javax.annotation.Nullable List<String> defaultRoles) {
    this.defaultRoles = defaultRoles;
  }


  public RealmRepresentation defaultRole(@javax.annotation.Nullable RoleRepresentation defaultRole) {
    this.defaultRole = defaultRole;
    return this;
  }

  /**
   * Get defaultRole
   * @return defaultRole
   */
  @javax.annotation.Nullable
  public RoleRepresentation getDefaultRole() {
    return defaultRole;
  }

  public void setDefaultRole(@javax.annotation.Nullable RoleRepresentation defaultRole) {
    this.defaultRole = defaultRole;
  }


  public RealmRepresentation adminPermissionsClient(@javax.annotation.Nullable ClientRepresentation adminPermissionsClient) {
    this.adminPermissionsClient = adminPermissionsClient;
    return this;
  }

  /**
   * Get adminPermissionsClient
   * @return adminPermissionsClient
   */
  @javax.annotation.Nullable
  public ClientRepresentation getAdminPermissionsClient() {
    return adminPermissionsClient;
  }

  public void setAdminPermissionsClient(@javax.annotation.Nullable ClientRepresentation adminPermissionsClient) {
    this.adminPermissionsClient = adminPermissionsClient;
  }


  public RealmRepresentation defaultGroups(@javax.annotation.Nullable List<String> defaultGroups) {
    this.defaultGroups = defaultGroups;
    return this;
  }

  public RealmRepresentation addDefaultGroupsItem(String defaultGroupsItem) {
    if (this.defaultGroups == null) {
      this.defaultGroups = new ArrayList<>();
    }
    this.defaultGroups.add(defaultGroupsItem);
    return this;
  }

  /**
   * Get defaultGroups
   * @return defaultGroups
   */
  @javax.annotation.Nullable
  public List<String> getDefaultGroups() {
    return defaultGroups;
  }

  public void setDefaultGroups(@javax.annotation.Nullable List<String> defaultGroups) {
    this.defaultGroups = defaultGroups;
  }


  @Deprecated
  public RealmRepresentation requiredCredentials(@javax.annotation.Nullable Set<String> requiredCredentials) {
    this.requiredCredentials = requiredCredentials;
    return this;
  }

  public RealmRepresentation addRequiredCredentialsItem(String requiredCredentialsItem) {
    if (this.requiredCredentials == null) {
      this.requiredCredentials = new LinkedHashSet<>();
    }
    this.requiredCredentials.add(requiredCredentialsItem);
    return this;
  }

  /**
   * Get requiredCredentials
   * @return requiredCredentials
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Set<String> getRequiredCredentials() {
    return requiredCredentials;
  }

  @Deprecated
  public void setRequiredCredentials(@javax.annotation.Nullable Set<String> requiredCredentials) {
    this.requiredCredentials = requiredCredentials;
  }


  public RealmRepresentation passwordPolicy(@javax.annotation.Nullable String passwordPolicy) {
    this.passwordPolicy = passwordPolicy;
    return this;
  }

  /**
   * Get passwordPolicy
   * @return passwordPolicy
   */
  @javax.annotation.Nullable
  public String getPasswordPolicy() {
    return passwordPolicy;
  }

  public void setPasswordPolicy(@javax.annotation.Nullable String passwordPolicy) {
    this.passwordPolicy = passwordPolicy;
  }


  public RealmRepresentation otpPolicyType(@javax.annotation.Nullable String otpPolicyType) {
    this.otpPolicyType = otpPolicyType;
    return this;
  }

  /**
   * Get otpPolicyType
   * @return otpPolicyType
   */
  @javax.annotation.Nullable
  public String getOtpPolicyType() {
    return otpPolicyType;
  }

  public void setOtpPolicyType(@javax.annotation.Nullable String otpPolicyType) {
    this.otpPolicyType = otpPolicyType;
  }


  public RealmRepresentation otpPolicyAlgorithm(@javax.annotation.Nullable String otpPolicyAlgorithm) {
    this.otpPolicyAlgorithm = otpPolicyAlgorithm;
    return this;
  }

  /**
   * Get otpPolicyAlgorithm
   * @return otpPolicyAlgorithm
   */
  @javax.annotation.Nullable
  public String getOtpPolicyAlgorithm() {
    return otpPolicyAlgorithm;
  }

  public void setOtpPolicyAlgorithm(@javax.annotation.Nullable String otpPolicyAlgorithm) {
    this.otpPolicyAlgorithm = otpPolicyAlgorithm;
  }


  public RealmRepresentation otpPolicyInitialCounter(@javax.annotation.Nullable Integer otpPolicyInitialCounter) {
    this.otpPolicyInitialCounter = otpPolicyInitialCounter;
    return this;
  }

  /**
   * Get otpPolicyInitialCounter
   * @return otpPolicyInitialCounter
   */
  @javax.annotation.Nullable
  public Integer getOtpPolicyInitialCounter() {
    return otpPolicyInitialCounter;
  }

  public void setOtpPolicyInitialCounter(@javax.annotation.Nullable Integer otpPolicyInitialCounter) {
    this.otpPolicyInitialCounter = otpPolicyInitialCounter;
  }


  public RealmRepresentation otpPolicyDigits(@javax.annotation.Nullable Integer otpPolicyDigits) {
    this.otpPolicyDigits = otpPolicyDigits;
    return this;
  }

  /**
   * Get otpPolicyDigits
   * @return otpPolicyDigits
   */
  @javax.annotation.Nullable
  public Integer getOtpPolicyDigits() {
    return otpPolicyDigits;
  }

  public void setOtpPolicyDigits(@javax.annotation.Nullable Integer otpPolicyDigits) {
    this.otpPolicyDigits = otpPolicyDigits;
  }


  public RealmRepresentation otpPolicyLookAheadWindow(@javax.annotation.Nullable Integer otpPolicyLookAheadWindow) {
    this.otpPolicyLookAheadWindow = otpPolicyLookAheadWindow;
    return this;
  }

  /**
   * Get otpPolicyLookAheadWindow
   * @return otpPolicyLookAheadWindow
   */
  @javax.annotation.Nullable
  public Integer getOtpPolicyLookAheadWindow() {
    return otpPolicyLookAheadWindow;
  }

  public void setOtpPolicyLookAheadWindow(@javax.annotation.Nullable Integer otpPolicyLookAheadWindow) {
    this.otpPolicyLookAheadWindow = otpPolicyLookAheadWindow;
  }


  public RealmRepresentation otpPolicyPeriod(@javax.annotation.Nullable Integer otpPolicyPeriod) {
    this.otpPolicyPeriod = otpPolicyPeriod;
    return this;
  }

  /**
   * Get otpPolicyPeriod
   * @return otpPolicyPeriod
   */
  @javax.annotation.Nullable
  public Integer getOtpPolicyPeriod() {
    return otpPolicyPeriod;
  }

  public void setOtpPolicyPeriod(@javax.annotation.Nullable Integer otpPolicyPeriod) {
    this.otpPolicyPeriod = otpPolicyPeriod;
  }


  public RealmRepresentation otpPolicyCodeReusable(@javax.annotation.Nullable Boolean otpPolicyCodeReusable) {
    this.otpPolicyCodeReusable = otpPolicyCodeReusable;
    return this;
  }

  /**
   * Get otpPolicyCodeReusable
   * @return otpPolicyCodeReusable
   */
  @javax.annotation.Nullable
  public Boolean getOtpPolicyCodeReusable() {
    return otpPolicyCodeReusable;
  }

  public void setOtpPolicyCodeReusable(@javax.annotation.Nullable Boolean otpPolicyCodeReusable) {
    this.otpPolicyCodeReusable = otpPolicyCodeReusable;
  }


  public RealmRepresentation otpSupportedApplications(@javax.annotation.Nullable List<String> otpSupportedApplications) {
    this.otpSupportedApplications = otpSupportedApplications;
    return this;
  }

  public RealmRepresentation addOtpSupportedApplicationsItem(String otpSupportedApplicationsItem) {
    if (this.otpSupportedApplications == null) {
      this.otpSupportedApplications = new ArrayList<>();
    }
    this.otpSupportedApplications.add(otpSupportedApplicationsItem);
    return this;
  }

  /**
   * Get otpSupportedApplications
   * @return otpSupportedApplications
   */
  @javax.annotation.Nullable
  public List<String> getOtpSupportedApplications() {
    return otpSupportedApplications;
  }

  public void setOtpSupportedApplications(@javax.annotation.Nullable List<String> otpSupportedApplications) {
    this.otpSupportedApplications = otpSupportedApplications;
  }


  public RealmRepresentation localizationTexts(@javax.annotation.Nullable Map<String, Map<String, String>> localizationTexts) {
    this.localizationTexts = localizationTexts;
    return this;
  }

  public RealmRepresentation putLocalizationTextsItem(String key, Map<String, String> localizationTextsItem) {
    if (this.localizationTexts == null) {
      this.localizationTexts = new HashMap<>();
    }
    this.localizationTexts.put(key, localizationTextsItem);
    return this;
  }

  /**
   * Get localizationTexts
   * @return localizationTexts
   */
  @javax.annotation.Nullable
  public Map<String, Map<String, String>> getLocalizationTexts() {
    return localizationTexts;
  }

  public void setLocalizationTexts(@javax.annotation.Nullable Map<String, Map<String, String>> localizationTexts) {
    this.localizationTexts = localizationTexts;
  }


  public RealmRepresentation webAuthnPolicyRpEntityName(@javax.annotation.Nullable String webAuthnPolicyRpEntityName) {
    this.webAuthnPolicyRpEntityName = webAuthnPolicyRpEntityName;
    return this;
  }

  /**
   * Get webAuthnPolicyRpEntityName
   * @return webAuthnPolicyRpEntityName
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyRpEntityName() {
    return webAuthnPolicyRpEntityName;
  }

  public void setWebAuthnPolicyRpEntityName(@javax.annotation.Nullable String webAuthnPolicyRpEntityName) {
    this.webAuthnPolicyRpEntityName = webAuthnPolicyRpEntityName;
  }


  public RealmRepresentation webAuthnPolicySignatureAlgorithms(@javax.annotation.Nullable List<String> webAuthnPolicySignatureAlgorithms) {
    this.webAuthnPolicySignatureAlgorithms = webAuthnPolicySignatureAlgorithms;
    return this;
  }

  public RealmRepresentation addWebAuthnPolicySignatureAlgorithmsItem(String webAuthnPolicySignatureAlgorithmsItem) {
    if (this.webAuthnPolicySignatureAlgorithms == null) {
      this.webAuthnPolicySignatureAlgorithms = new ArrayList<>();
    }
    this.webAuthnPolicySignatureAlgorithms.add(webAuthnPolicySignatureAlgorithmsItem);
    return this;
  }

  /**
   * Get webAuthnPolicySignatureAlgorithms
   * @return webAuthnPolicySignatureAlgorithms
   */
  @javax.annotation.Nullable
  public List<String> getWebAuthnPolicySignatureAlgorithms() {
    return webAuthnPolicySignatureAlgorithms;
  }

  public void setWebAuthnPolicySignatureAlgorithms(@javax.annotation.Nullable List<String> webAuthnPolicySignatureAlgorithms) {
    this.webAuthnPolicySignatureAlgorithms = webAuthnPolicySignatureAlgorithms;
  }


  public RealmRepresentation webAuthnPolicyRpId(@javax.annotation.Nullable String webAuthnPolicyRpId) {
    this.webAuthnPolicyRpId = webAuthnPolicyRpId;
    return this;
  }

  /**
   * Get webAuthnPolicyRpId
   * @return webAuthnPolicyRpId
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyRpId() {
    return webAuthnPolicyRpId;
  }

  public void setWebAuthnPolicyRpId(@javax.annotation.Nullable String webAuthnPolicyRpId) {
    this.webAuthnPolicyRpId = webAuthnPolicyRpId;
  }


  public RealmRepresentation webAuthnPolicyAttestationConveyancePreference(@javax.annotation.Nullable String webAuthnPolicyAttestationConveyancePreference) {
    this.webAuthnPolicyAttestationConveyancePreference = webAuthnPolicyAttestationConveyancePreference;
    return this;
  }

  /**
   * Get webAuthnPolicyAttestationConveyancePreference
   * @return webAuthnPolicyAttestationConveyancePreference
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyAttestationConveyancePreference() {
    return webAuthnPolicyAttestationConveyancePreference;
  }

  public void setWebAuthnPolicyAttestationConveyancePreference(@javax.annotation.Nullable String webAuthnPolicyAttestationConveyancePreference) {
    this.webAuthnPolicyAttestationConveyancePreference = webAuthnPolicyAttestationConveyancePreference;
  }


  public RealmRepresentation webAuthnPolicyAuthenticatorAttachment(@javax.annotation.Nullable String webAuthnPolicyAuthenticatorAttachment) {
    this.webAuthnPolicyAuthenticatorAttachment = webAuthnPolicyAuthenticatorAttachment;
    return this;
  }

  /**
   * Get webAuthnPolicyAuthenticatorAttachment
   * @return webAuthnPolicyAuthenticatorAttachment
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyAuthenticatorAttachment() {
    return webAuthnPolicyAuthenticatorAttachment;
  }

  public void setWebAuthnPolicyAuthenticatorAttachment(@javax.annotation.Nullable String webAuthnPolicyAuthenticatorAttachment) {
    this.webAuthnPolicyAuthenticatorAttachment = webAuthnPolicyAuthenticatorAttachment;
  }


  public RealmRepresentation webAuthnPolicyRequireResidentKey(@javax.annotation.Nullable String webAuthnPolicyRequireResidentKey) {
    this.webAuthnPolicyRequireResidentKey = webAuthnPolicyRequireResidentKey;
    return this;
  }

  /**
   * Get webAuthnPolicyRequireResidentKey
   * @return webAuthnPolicyRequireResidentKey
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyRequireResidentKey() {
    return webAuthnPolicyRequireResidentKey;
  }

  public void setWebAuthnPolicyRequireResidentKey(@javax.annotation.Nullable String webAuthnPolicyRequireResidentKey) {
    this.webAuthnPolicyRequireResidentKey = webAuthnPolicyRequireResidentKey;
  }


  public RealmRepresentation webAuthnPolicyUserVerificationRequirement(@javax.annotation.Nullable String webAuthnPolicyUserVerificationRequirement) {
    this.webAuthnPolicyUserVerificationRequirement = webAuthnPolicyUserVerificationRequirement;
    return this;
  }

  /**
   * Get webAuthnPolicyUserVerificationRequirement
   * @return webAuthnPolicyUserVerificationRequirement
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyUserVerificationRequirement() {
    return webAuthnPolicyUserVerificationRequirement;
  }

  public void setWebAuthnPolicyUserVerificationRequirement(@javax.annotation.Nullable String webAuthnPolicyUserVerificationRequirement) {
    this.webAuthnPolicyUserVerificationRequirement = webAuthnPolicyUserVerificationRequirement;
  }


  public RealmRepresentation webAuthnPolicyCreateTimeout(@javax.annotation.Nullable Integer webAuthnPolicyCreateTimeout) {
    this.webAuthnPolicyCreateTimeout = webAuthnPolicyCreateTimeout;
    return this;
  }

  /**
   * Get webAuthnPolicyCreateTimeout
   * @return webAuthnPolicyCreateTimeout
   */
  @javax.annotation.Nullable
  public Integer getWebAuthnPolicyCreateTimeout() {
    return webAuthnPolicyCreateTimeout;
  }

  public void setWebAuthnPolicyCreateTimeout(@javax.annotation.Nullable Integer webAuthnPolicyCreateTimeout) {
    this.webAuthnPolicyCreateTimeout = webAuthnPolicyCreateTimeout;
  }


  public RealmRepresentation webAuthnPolicyAvoidSameAuthenticatorRegister(@javax.annotation.Nullable Boolean webAuthnPolicyAvoidSameAuthenticatorRegister) {
    this.webAuthnPolicyAvoidSameAuthenticatorRegister = webAuthnPolicyAvoidSameAuthenticatorRegister;
    return this;
  }

  /**
   * Get webAuthnPolicyAvoidSameAuthenticatorRegister
   * @return webAuthnPolicyAvoidSameAuthenticatorRegister
   */
  @javax.annotation.Nullable
  public Boolean getWebAuthnPolicyAvoidSameAuthenticatorRegister() {
    return webAuthnPolicyAvoidSameAuthenticatorRegister;
  }

  public void setWebAuthnPolicyAvoidSameAuthenticatorRegister(@javax.annotation.Nullable Boolean webAuthnPolicyAvoidSameAuthenticatorRegister) {
    this.webAuthnPolicyAvoidSameAuthenticatorRegister = webAuthnPolicyAvoidSameAuthenticatorRegister;
  }


  public RealmRepresentation webAuthnPolicyAcceptableAaguids(@javax.annotation.Nullable List<String> webAuthnPolicyAcceptableAaguids) {
    this.webAuthnPolicyAcceptableAaguids = webAuthnPolicyAcceptableAaguids;
    return this;
  }

  public RealmRepresentation addWebAuthnPolicyAcceptableAaguidsItem(String webAuthnPolicyAcceptableAaguidsItem) {
    if (this.webAuthnPolicyAcceptableAaguids == null) {
      this.webAuthnPolicyAcceptableAaguids = new ArrayList<>();
    }
    this.webAuthnPolicyAcceptableAaguids.add(webAuthnPolicyAcceptableAaguidsItem);
    return this;
  }

  /**
   * Get webAuthnPolicyAcceptableAaguids
   * @return webAuthnPolicyAcceptableAaguids
   */
  @javax.annotation.Nullable
  public List<String> getWebAuthnPolicyAcceptableAaguids() {
    return webAuthnPolicyAcceptableAaguids;
  }

  public void setWebAuthnPolicyAcceptableAaguids(@javax.annotation.Nullable List<String> webAuthnPolicyAcceptableAaguids) {
    this.webAuthnPolicyAcceptableAaguids = webAuthnPolicyAcceptableAaguids;
  }


  public RealmRepresentation webAuthnPolicyExtraOrigins(@javax.annotation.Nullable List<String> webAuthnPolicyExtraOrigins) {
    this.webAuthnPolicyExtraOrigins = webAuthnPolicyExtraOrigins;
    return this;
  }

  public RealmRepresentation addWebAuthnPolicyExtraOriginsItem(String webAuthnPolicyExtraOriginsItem) {
    if (this.webAuthnPolicyExtraOrigins == null) {
      this.webAuthnPolicyExtraOrigins = new ArrayList<>();
    }
    this.webAuthnPolicyExtraOrigins.add(webAuthnPolicyExtraOriginsItem);
    return this;
  }

  /**
   * Get webAuthnPolicyExtraOrigins
   * @return webAuthnPolicyExtraOrigins
   */
  @javax.annotation.Nullable
  public List<String> getWebAuthnPolicyExtraOrigins() {
    return webAuthnPolicyExtraOrigins;
  }

  public void setWebAuthnPolicyExtraOrigins(@javax.annotation.Nullable List<String> webAuthnPolicyExtraOrigins) {
    this.webAuthnPolicyExtraOrigins = webAuthnPolicyExtraOrigins;
  }


  public RealmRepresentation webAuthnPolicyPasswordlessRpEntityName(@javax.annotation.Nullable String webAuthnPolicyPasswordlessRpEntityName) {
    this.webAuthnPolicyPasswordlessRpEntityName = webAuthnPolicyPasswordlessRpEntityName;
    return this;
  }

  /**
   * Get webAuthnPolicyPasswordlessRpEntityName
   * @return webAuthnPolicyPasswordlessRpEntityName
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyPasswordlessRpEntityName() {
    return webAuthnPolicyPasswordlessRpEntityName;
  }

  public void setWebAuthnPolicyPasswordlessRpEntityName(@javax.annotation.Nullable String webAuthnPolicyPasswordlessRpEntityName) {
    this.webAuthnPolicyPasswordlessRpEntityName = webAuthnPolicyPasswordlessRpEntityName;
  }


  public RealmRepresentation webAuthnPolicyPasswordlessSignatureAlgorithms(@javax.annotation.Nullable List<String> webAuthnPolicyPasswordlessSignatureAlgorithms) {
    this.webAuthnPolicyPasswordlessSignatureAlgorithms = webAuthnPolicyPasswordlessSignatureAlgorithms;
    return this;
  }

  public RealmRepresentation addWebAuthnPolicyPasswordlessSignatureAlgorithmsItem(String webAuthnPolicyPasswordlessSignatureAlgorithmsItem) {
    if (this.webAuthnPolicyPasswordlessSignatureAlgorithms == null) {
      this.webAuthnPolicyPasswordlessSignatureAlgorithms = new ArrayList<>();
    }
    this.webAuthnPolicyPasswordlessSignatureAlgorithms.add(webAuthnPolicyPasswordlessSignatureAlgorithmsItem);
    return this;
  }

  /**
   * Get webAuthnPolicyPasswordlessSignatureAlgorithms
   * @return webAuthnPolicyPasswordlessSignatureAlgorithms
   */
  @javax.annotation.Nullable
  public List<String> getWebAuthnPolicyPasswordlessSignatureAlgorithms() {
    return webAuthnPolicyPasswordlessSignatureAlgorithms;
  }

  public void setWebAuthnPolicyPasswordlessSignatureAlgorithms(@javax.annotation.Nullable List<String> webAuthnPolicyPasswordlessSignatureAlgorithms) {
    this.webAuthnPolicyPasswordlessSignatureAlgorithms = webAuthnPolicyPasswordlessSignatureAlgorithms;
  }


  public RealmRepresentation webAuthnPolicyPasswordlessRpId(@javax.annotation.Nullable String webAuthnPolicyPasswordlessRpId) {
    this.webAuthnPolicyPasswordlessRpId = webAuthnPolicyPasswordlessRpId;
    return this;
  }

  /**
   * Get webAuthnPolicyPasswordlessRpId
   * @return webAuthnPolicyPasswordlessRpId
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyPasswordlessRpId() {
    return webAuthnPolicyPasswordlessRpId;
  }

  public void setWebAuthnPolicyPasswordlessRpId(@javax.annotation.Nullable String webAuthnPolicyPasswordlessRpId) {
    this.webAuthnPolicyPasswordlessRpId = webAuthnPolicyPasswordlessRpId;
  }


  public RealmRepresentation webAuthnPolicyPasswordlessAttestationConveyancePreference(@javax.annotation.Nullable String webAuthnPolicyPasswordlessAttestationConveyancePreference) {
    this.webAuthnPolicyPasswordlessAttestationConveyancePreference = webAuthnPolicyPasswordlessAttestationConveyancePreference;
    return this;
  }

  /**
   * Get webAuthnPolicyPasswordlessAttestationConveyancePreference
   * @return webAuthnPolicyPasswordlessAttestationConveyancePreference
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyPasswordlessAttestationConveyancePreference() {
    return webAuthnPolicyPasswordlessAttestationConveyancePreference;
  }

  public void setWebAuthnPolicyPasswordlessAttestationConveyancePreference(@javax.annotation.Nullable String webAuthnPolicyPasswordlessAttestationConveyancePreference) {
    this.webAuthnPolicyPasswordlessAttestationConveyancePreference = webAuthnPolicyPasswordlessAttestationConveyancePreference;
  }


  public RealmRepresentation webAuthnPolicyPasswordlessAuthenticatorAttachment(@javax.annotation.Nullable String webAuthnPolicyPasswordlessAuthenticatorAttachment) {
    this.webAuthnPolicyPasswordlessAuthenticatorAttachment = webAuthnPolicyPasswordlessAuthenticatorAttachment;
    return this;
  }

  /**
   * Get webAuthnPolicyPasswordlessAuthenticatorAttachment
   * @return webAuthnPolicyPasswordlessAuthenticatorAttachment
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyPasswordlessAuthenticatorAttachment() {
    return webAuthnPolicyPasswordlessAuthenticatorAttachment;
  }

  public void setWebAuthnPolicyPasswordlessAuthenticatorAttachment(@javax.annotation.Nullable String webAuthnPolicyPasswordlessAuthenticatorAttachment) {
    this.webAuthnPolicyPasswordlessAuthenticatorAttachment = webAuthnPolicyPasswordlessAuthenticatorAttachment;
  }


  public RealmRepresentation webAuthnPolicyPasswordlessRequireResidentKey(@javax.annotation.Nullable String webAuthnPolicyPasswordlessRequireResidentKey) {
    this.webAuthnPolicyPasswordlessRequireResidentKey = webAuthnPolicyPasswordlessRequireResidentKey;
    return this;
  }

  /**
   * Get webAuthnPolicyPasswordlessRequireResidentKey
   * @return webAuthnPolicyPasswordlessRequireResidentKey
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyPasswordlessRequireResidentKey() {
    return webAuthnPolicyPasswordlessRequireResidentKey;
  }

  public void setWebAuthnPolicyPasswordlessRequireResidentKey(@javax.annotation.Nullable String webAuthnPolicyPasswordlessRequireResidentKey) {
    this.webAuthnPolicyPasswordlessRequireResidentKey = webAuthnPolicyPasswordlessRequireResidentKey;
  }


  public RealmRepresentation webAuthnPolicyPasswordlessUserVerificationRequirement(@javax.annotation.Nullable String webAuthnPolicyPasswordlessUserVerificationRequirement) {
    this.webAuthnPolicyPasswordlessUserVerificationRequirement = webAuthnPolicyPasswordlessUserVerificationRequirement;
    return this;
  }

  /**
   * Get webAuthnPolicyPasswordlessUserVerificationRequirement
   * @return webAuthnPolicyPasswordlessUserVerificationRequirement
   */
  @javax.annotation.Nullable
  public String getWebAuthnPolicyPasswordlessUserVerificationRequirement() {
    return webAuthnPolicyPasswordlessUserVerificationRequirement;
  }

  public void setWebAuthnPolicyPasswordlessUserVerificationRequirement(@javax.annotation.Nullable String webAuthnPolicyPasswordlessUserVerificationRequirement) {
    this.webAuthnPolicyPasswordlessUserVerificationRequirement = webAuthnPolicyPasswordlessUserVerificationRequirement;
  }


  public RealmRepresentation webAuthnPolicyPasswordlessCreateTimeout(@javax.annotation.Nullable Integer webAuthnPolicyPasswordlessCreateTimeout) {
    this.webAuthnPolicyPasswordlessCreateTimeout = webAuthnPolicyPasswordlessCreateTimeout;
    return this;
  }

  /**
   * Get webAuthnPolicyPasswordlessCreateTimeout
   * @return webAuthnPolicyPasswordlessCreateTimeout
   */
  @javax.annotation.Nullable
  public Integer getWebAuthnPolicyPasswordlessCreateTimeout() {
    return webAuthnPolicyPasswordlessCreateTimeout;
  }

  public void setWebAuthnPolicyPasswordlessCreateTimeout(@javax.annotation.Nullable Integer webAuthnPolicyPasswordlessCreateTimeout) {
    this.webAuthnPolicyPasswordlessCreateTimeout = webAuthnPolicyPasswordlessCreateTimeout;
  }


  public RealmRepresentation webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister(@javax.annotation.Nullable Boolean webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister) {
    this.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister = webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;
    return this;
  }

  /**
   * Get webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
   * @return webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
   */
  @javax.annotation.Nullable
  public Boolean getWebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister() {
    return webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;
  }

  public void setWebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister(@javax.annotation.Nullable Boolean webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister) {
    this.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister = webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;
  }


  public RealmRepresentation webAuthnPolicyPasswordlessAcceptableAaguids(@javax.annotation.Nullable List<String> webAuthnPolicyPasswordlessAcceptableAaguids) {
    this.webAuthnPolicyPasswordlessAcceptableAaguids = webAuthnPolicyPasswordlessAcceptableAaguids;
    return this;
  }

  public RealmRepresentation addWebAuthnPolicyPasswordlessAcceptableAaguidsItem(String webAuthnPolicyPasswordlessAcceptableAaguidsItem) {
    if (this.webAuthnPolicyPasswordlessAcceptableAaguids == null) {
      this.webAuthnPolicyPasswordlessAcceptableAaguids = new ArrayList<>();
    }
    this.webAuthnPolicyPasswordlessAcceptableAaguids.add(webAuthnPolicyPasswordlessAcceptableAaguidsItem);
    return this;
  }

  /**
   * Get webAuthnPolicyPasswordlessAcceptableAaguids
   * @return webAuthnPolicyPasswordlessAcceptableAaguids
   */
  @javax.annotation.Nullable
  public List<String> getWebAuthnPolicyPasswordlessAcceptableAaguids() {
    return webAuthnPolicyPasswordlessAcceptableAaguids;
  }

  public void setWebAuthnPolicyPasswordlessAcceptableAaguids(@javax.annotation.Nullable List<String> webAuthnPolicyPasswordlessAcceptableAaguids) {
    this.webAuthnPolicyPasswordlessAcceptableAaguids = webAuthnPolicyPasswordlessAcceptableAaguids;
  }


  public RealmRepresentation webAuthnPolicyPasswordlessExtraOrigins(@javax.annotation.Nullable List<String> webAuthnPolicyPasswordlessExtraOrigins) {
    this.webAuthnPolicyPasswordlessExtraOrigins = webAuthnPolicyPasswordlessExtraOrigins;
    return this;
  }

  public RealmRepresentation addWebAuthnPolicyPasswordlessExtraOriginsItem(String webAuthnPolicyPasswordlessExtraOriginsItem) {
    if (this.webAuthnPolicyPasswordlessExtraOrigins == null) {
      this.webAuthnPolicyPasswordlessExtraOrigins = new ArrayList<>();
    }
    this.webAuthnPolicyPasswordlessExtraOrigins.add(webAuthnPolicyPasswordlessExtraOriginsItem);
    return this;
  }

  /**
   * Get webAuthnPolicyPasswordlessExtraOrigins
   * @return webAuthnPolicyPasswordlessExtraOrigins
   */
  @javax.annotation.Nullable
  public List<String> getWebAuthnPolicyPasswordlessExtraOrigins() {
    return webAuthnPolicyPasswordlessExtraOrigins;
  }

  public void setWebAuthnPolicyPasswordlessExtraOrigins(@javax.annotation.Nullable List<String> webAuthnPolicyPasswordlessExtraOrigins) {
    this.webAuthnPolicyPasswordlessExtraOrigins = webAuthnPolicyPasswordlessExtraOrigins;
  }


  public RealmRepresentation clientProfiles(@javax.annotation.Nullable ClientProfilesRepresentation clientProfiles) {
    this.clientProfiles = clientProfiles;
    return this;
  }

  /**
   * Get clientProfiles
   * @return clientProfiles
   */
  @javax.annotation.Nullable
  public ClientProfilesRepresentation getClientProfiles() {
    return clientProfiles;
  }

  public void setClientProfiles(@javax.annotation.Nullable ClientProfilesRepresentation clientProfiles) {
    this.clientProfiles = clientProfiles;
  }


  public RealmRepresentation clientPolicies(@javax.annotation.Nullable ClientPoliciesRepresentation clientPolicies) {
    this.clientPolicies = clientPolicies;
    return this;
  }

  /**
   * Get clientPolicies
   * @return clientPolicies
   */
  @javax.annotation.Nullable
  public ClientPoliciesRepresentation getClientPolicies() {
    return clientPolicies;
  }

  public void setClientPolicies(@javax.annotation.Nullable ClientPoliciesRepresentation clientPolicies) {
    this.clientPolicies = clientPolicies;
  }


  public RealmRepresentation users(@javax.annotation.Nullable List<UserRepresentation> users) {
    this.users = users;
    return this;
  }

  public RealmRepresentation addUsersItem(UserRepresentation usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

  /**
   * Get users
   * @return users
   */
  @javax.annotation.Nullable
  public List<UserRepresentation> getUsers() {
    return users;
  }

  public void setUsers(@javax.annotation.Nullable List<UserRepresentation> users) {
    this.users = users;
  }


  public RealmRepresentation federatedUsers(@javax.annotation.Nullable List<UserRepresentation> federatedUsers) {
    this.federatedUsers = federatedUsers;
    return this;
  }

  public RealmRepresentation addFederatedUsersItem(UserRepresentation federatedUsersItem) {
    if (this.federatedUsers == null) {
      this.federatedUsers = new ArrayList<>();
    }
    this.federatedUsers.add(federatedUsersItem);
    return this;
  }

  /**
   * Get federatedUsers
   * @return federatedUsers
   */
  @javax.annotation.Nullable
  public List<UserRepresentation> getFederatedUsers() {
    return federatedUsers;
  }

  public void setFederatedUsers(@javax.annotation.Nullable List<UserRepresentation> federatedUsers) {
    this.federatedUsers = federatedUsers;
  }


  public RealmRepresentation scopeMappings(@javax.annotation.Nullable List<ScopeMappingRepresentation> scopeMappings) {
    this.scopeMappings = scopeMappings;
    return this;
  }

  public RealmRepresentation addScopeMappingsItem(ScopeMappingRepresentation scopeMappingsItem) {
    if (this.scopeMappings == null) {
      this.scopeMappings = new ArrayList<>();
    }
    this.scopeMappings.add(scopeMappingsItem);
    return this;
  }

  /**
   * Get scopeMappings
   * @return scopeMappings
   */
  @javax.annotation.Nullable
  public List<ScopeMappingRepresentation> getScopeMappings() {
    return scopeMappings;
  }

  public void setScopeMappings(@javax.annotation.Nullable List<ScopeMappingRepresentation> scopeMappings) {
    this.scopeMappings = scopeMappings;
  }


  public RealmRepresentation clientScopeMappings(@javax.annotation.Nullable Map<String, List<ScopeMappingRepresentation>> clientScopeMappings) {
    this.clientScopeMappings = clientScopeMappings;
    return this;
  }

  public RealmRepresentation putClientScopeMappingsItem(String key, List<ScopeMappingRepresentation> clientScopeMappingsItem) {
    if (this.clientScopeMappings == null) {
      this.clientScopeMappings = new HashMap<>();
    }
    this.clientScopeMappings.put(key, clientScopeMappingsItem);
    return this;
  }

  /**
   * Get clientScopeMappings
   * @return clientScopeMappings
   */
  @javax.annotation.Nullable
  public Map<String, List<ScopeMappingRepresentation>> getClientScopeMappings() {
    return clientScopeMappings;
  }

  public void setClientScopeMappings(@javax.annotation.Nullable Map<String, List<ScopeMappingRepresentation>> clientScopeMappings) {
    this.clientScopeMappings = clientScopeMappings;
  }


  public RealmRepresentation clients(@javax.annotation.Nullable List<ClientRepresentation> clients) {
    this.clients = clients;
    return this;
  }

  public RealmRepresentation addClientsItem(ClientRepresentation clientsItem) {
    if (this.clients == null) {
      this.clients = new ArrayList<>();
    }
    this.clients.add(clientsItem);
    return this;
  }

  /**
   * Get clients
   * @return clients
   */
  @javax.annotation.Nullable
  public List<ClientRepresentation> getClients() {
    return clients;
  }

  public void setClients(@javax.annotation.Nullable List<ClientRepresentation> clients) {
    this.clients = clients;
  }


  public RealmRepresentation clientScopes(@javax.annotation.Nullable List<ClientScopeRepresentation> clientScopes) {
    this.clientScopes = clientScopes;
    return this;
  }

  public RealmRepresentation addClientScopesItem(ClientScopeRepresentation clientScopesItem) {
    if (this.clientScopes == null) {
      this.clientScopes = new ArrayList<>();
    }
    this.clientScopes.add(clientScopesItem);
    return this;
  }

  /**
   * Get clientScopes
   * @return clientScopes
   */
  @javax.annotation.Nullable
  public List<ClientScopeRepresentation> getClientScopes() {
    return clientScopes;
  }

  public void setClientScopes(@javax.annotation.Nullable List<ClientScopeRepresentation> clientScopes) {
    this.clientScopes = clientScopes;
  }


  public RealmRepresentation defaultDefaultClientScopes(@javax.annotation.Nullable List<String> defaultDefaultClientScopes) {
    this.defaultDefaultClientScopes = defaultDefaultClientScopes;
    return this;
  }

  public RealmRepresentation addDefaultDefaultClientScopesItem(String defaultDefaultClientScopesItem) {
    if (this.defaultDefaultClientScopes == null) {
      this.defaultDefaultClientScopes = new ArrayList<>();
    }
    this.defaultDefaultClientScopes.add(defaultDefaultClientScopesItem);
    return this;
  }

  /**
   * Get defaultDefaultClientScopes
   * @return defaultDefaultClientScopes
   */
  @javax.annotation.Nullable
  public List<String> getDefaultDefaultClientScopes() {
    return defaultDefaultClientScopes;
  }

  public void setDefaultDefaultClientScopes(@javax.annotation.Nullable List<String> defaultDefaultClientScopes) {
    this.defaultDefaultClientScopes = defaultDefaultClientScopes;
  }


  public RealmRepresentation defaultOptionalClientScopes(@javax.annotation.Nullable List<String> defaultOptionalClientScopes) {
    this.defaultOptionalClientScopes = defaultOptionalClientScopes;
    return this;
  }

  public RealmRepresentation addDefaultOptionalClientScopesItem(String defaultOptionalClientScopesItem) {
    if (this.defaultOptionalClientScopes == null) {
      this.defaultOptionalClientScopes = new ArrayList<>();
    }
    this.defaultOptionalClientScopes.add(defaultOptionalClientScopesItem);
    return this;
  }

  /**
   * Get defaultOptionalClientScopes
   * @return defaultOptionalClientScopes
   */
  @javax.annotation.Nullable
  public List<String> getDefaultOptionalClientScopes() {
    return defaultOptionalClientScopes;
  }

  public void setDefaultOptionalClientScopes(@javax.annotation.Nullable List<String> defaultOptionalClientScopes) {
    this.defaultOptionalClientScopes = defaultOptionalClientScopes;
  }


  public RealmRepresentation browserSecurityHeaders(@javax.annotation.Nullable Map<String, String> browserSecurityHeaders) {
    this.browserSecurityHeaders = browserSecurityHeaders;
    return this;
  }

  public RealmRepresentation putBrowserSecurityHeadersItem(String key, String browserSecurityHeadersItem) {
    if (this.browserSecurityHeaders == null) {
      this.browserSecurityHeaders = new HashMap<>();
    }
    this.browserSecurityHeaders.put(key, browserSecurityHeadersItem);
    return this;
  }

  /**
   * Get browserSecurityHeaders
   * @return browserSecurityHeaders
   */
  @javax.annotation.Nullable
  public Map<String, String> getBrowserSecurityHeaders() {
    return browserSecurityHeaders;
  }

  public void setBrowserSecurityHeaders(@javax.annotation.Nullable Map<String, String> browserSecurityHeaders) {
    this.browserSecurityHeaders = browserSecurityHeaders;
  }


  public RealmRepresentation smtpServer(@javax.annotation.Nullable Map<String, String> smtpServer) {
    this.smtpServer = smtpServer;
    return this;
  }

  public RealmRepresentation putSmtpServerItem(String key, String smtpServerItem) {
    if (this.smtpServer == null) {
      this.smtpServer = new HashMap<>();
    }
    this.smtpServer.put(key, smtpServerItem);
    return this;
  }

  /**
   * Get smtpServer
   * @return smtpServer
   */
  @javax.annotation.Nullable
  public Map<String, String> getSmtpServer() {
    return smtpServer;
  }

  public void setSmtpServer(@javax.annotation.Nullable Map<String, String> smtpServer) {
    this.smtpServer = smtpServer;
  }


  public RealmRepresentation userFederationProviders(@javax.annotation.Nullable List<UserFederationProviderRepresentation> userFederationProviders) {
    this.userFederationProviders = userFederationProviders;
    return this;
  }

  public RealmRepresentation addUserFederationProvidersItem(UserFederationProviderRepresentation userFederationProvidersItem) {
    if (this.userFederationProviders == null) {
      this.userFederationProviders = new ArrayList<>();
    }
    this.userFederationProviders.add(userFederationProvidersItem);
    return this;
  }

  /**
   * Get userFederationProviders
   * @return userFederationProviders
   */
  @javax.annotation.Nullable
  public List<UserFederationProviderRepresentation> getUserFederationProviders() {
    return userFederationProviders;
  }

  public void setUserFederationProviders(@javax.annotation.Nullable List<UserFederationProviderRepresentation> userFederationProviders) {
    this.userFederationProviders = userFederationProviders;
  }


  public RealmRepresentation userFederationMappers(@javax.annotation.Nullable List<UserFederationMapperRepresentation> userFederationMappers) {
    this.userFederationMappers = userFederationMappers;
    return this;
  }

  public RealmRepresentation addUserFederationMappersItem(UserFederationMapperRepresentation userFederationMappersItem) {
    if (this.userFederationMappers == null) {
      this.userFederationMappers = new ArrayList<>();
    }
    this.userFederationMappers.add(userFederationMappersItem);
    return this;
  }

  /**
   * Get userFederationMappers
   * @return userFederationMappers
   */
  @javax.annotation.Nullable
  public List<UserFederationMapperRepresentation> getUserFederationMappers() {
    return userFederationMappers;
  }

  public void setUserFederationMappers(@javax.annotation.Nullable List<UserFederationMapperRepresentation> userFederationMappers) {
    this.userFederationMappers = userFederationMappers;
  }


  public RealmRepresentation loginTheme(@javax.annotation.Nullable String loginTheme) {
    this.loginTheme = loginTheme;
    return this;
  }

  /**
   * Get loginTheme
   * @return loginTheme
   */
  @javax.annotation.Nullable
  public String getLoginTheme() {
    return loginTheme;
  }

  public void setLoginTheme(@javax.annotation.Nullable String loginTheme) {
    this.loginTheme = loginTheme;
  }


  public RealmRepresentation accountTheme(@javax.annotation.Nullable String accountTheme) {
    this.accountTheme = accountTheme;
    return this;
  }

  /**
   * Get accountTheme
   * @return accountTheme
   */
  @javax.annotation.Nullable
  public String getAccountTheme() {
    return accountTheme;
  }

  public void setAccountTheme(@javax.annotation.Nullable String accountTheme) {
    this.accountTheme = accountTheme;
  }


  public RealmRepresentation adminTheme(@javax.annotation.Nullable String adminTheme) {
    this.adminTheme = adminTheme;
    return this;
  }

  /**
   * Get adminTheme
   * @return adminTheme
   */
  @javax.annotation.Nullable
  public String getAdminTheme() {
    return adminTheme;
  }

  public void setAdminTheme(@javax.annotation.Nullable String adminTheme) {
    this.adminTheme = adminTheme;
  }


  public RealmRepresentation emailTheme(@javax.annotation.Nullable String emailTheme) {
    this.emailTheme = emailTheme;
    return this;
  }

  /**
   * Get emailTheme
   * @return emailTheme
   */
  @javax.annotation.Nullable
  public String getEmailTheme() {
    return emailTheme;
  }

  public void setEmailTheme(@javax.annotation.Nullable String emailTheme) {
    this.emailTheme = emailTheme;
  }


  public RealmRepresentation eventsEnabled(@javax.annotation.Nullable Boolean eventsEnabled) {
    this.eventsEnabled = eventsEnabled;
    return this;
  }

  /**
   * Get eventsEnabled
   * @return eventsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getEventsEnabled() {
    return eventsEnabled;
  }

  public void setEventsEnabled(@javax.annotation.Nullable Boolean eventsEnabled) {
    this.eventsEnabled = eventsEnabled;
  }


  public RealmRepresentation eventsExpiration(@javax.annotation.Nullable Long eventsExpiration) {
    this.eventsExpiration = eventsExpiration;
    return this;
  }

  /**
   * Get eventsExpiration
   * @return eventsExpiration
   */
  @javax.annotation.Nullable
  public Long getEventsExpiration() {
    return eventsExpiration;
  }

  public void setEventsExpiration(@javax.annotation.Nullable Long eventsExpiration) {
    this.eventsExpiration = eventsExpiration;
  }


  public RealmRepresentation eventsListeners(@javax.annotation.Nullable List<String> eventsListeners) {
    this.eventsListeners = eventsListeners;
    return this;
  }

  public RealmRepresentation addEventsListenersItem(String eventsListenersItem) {
    if (this.eventsListeners == null) {
      this.eventsListeners = new ArrayList<>();
    }
    this.eventsListeners.add(eventsListenersItem);
    return this;
  }

  /**
   * Get eventsListeners
   * @return eventsListeners
   */
  @javax.annotation.Nullable
  public List<String> getEventsListeners() {
    return eventsListeners;
  }

  public void setEventsListeners(@javax.annotation.Nullable List<String> eventsListeners) {
    this.eventsListeners = eventsListeners;
  }


  public RealmRepresentation enabledEventTypes(@javax.annotation.Nullable List<String> enabledEventTypes) {
    this.enabledEventTypes = enabledEventTypes;
    return this;
  }

  public RealmRepresentation addEnabledEventTypesItem(String enabledEventTypesItem) {
    if (this.enabledEventTypes == null) {
      this.enabledEventTypes = new ArrayList<>();
    }
    this.enabledEventTypes.add(enabledEventTypesItem);
    return this;
  }

  /**
   * Get enabledEventTypes
   * @return enabledEventTypes
   */
  @javax.annotation.Nullable
  public List<String> getEnabledEventTypes() {
    return enabledEventTypes;
  }

  public void setEnabledEventTypes(@javax.annotation.Nullable List<String> enabledEventTypes) {
    this.enabledEventTypes = enabledEventTypes;
  }


  public RealmRepresentation adminEventsEnabled(@javax.annotation.Nullable Boolean adminEventsEnabled) {
    this.adminEventsEnabled = adminEventsEnabled;
    return this;
  }

  /**
   * Get adminEventsEnabled
   * @return adminEventsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAdminEventsEnabled() {
    return adminEventsEnabled;
  }

  public void setAdminEventsEnabled(@javax.annotation.Nullable Boolean adminEventsEnabled) {
    this.adminEventsEnabled = adminEventsEnabled;
  }


  public RealmRepresentation adminEventsDetailsEnabled(@javax.annotation.Nullable Boolean adminEventsDetailsEnabled) {
    this.adminEventsDetailsEnabled = adminEventsDetailsEnabled;
    return this;
  }

  /**
   * Get adminEventsDetailsEnabled
   * @return adminEventsDetailsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAdminEventsDetailsEnabled() {
    return adminEventsDetailsEnabled;
  }

  public void setAdminEventsDetailsEnabled(@javax.annotation.Nullable Boolean adminEventsDetailsEnabled) {
    this.adminEventsDetailsEnabled = adminEventsDetailsEnabled;
  }


  public RealmRepresentation identityProviders(@javax.annotation.Nullable List<IdentityProviderRepresentation> identityProviders) {
    this.identityProviders = identityProviders;
    return this;
  }

  public RealmRepresentation addIdentityProvidersItem(IdentityProviderRepresentation identityProvidersItem) {
    if (this.identityProviders == null) {
      this.identityProviders = new ArrayList<>();
    }
    this.identityProviders.add(identityProvidersItem);
    return this;
  }

  /**
   * Get identityProviders
   * @return identityProviders
   */
  @javax.annotation.Nullable
  public List<IdentityProviderRepresentation> getIdentityProviders() {
    return identityProviders;
  }

  public void setIdentityProviders(@javax.annotation.Nullable List<IdentityProviderRepresentation> identityProviders) {
    this.identityProviders = identityProviders;
  }


  public RealmRepresentation identityProviderMappers(@javax.annotation.Nullable List<IdentityProviderMapperRepresentation> identityProviderMappers) {
    this.identityProviderMappers = identityProviderMappers;
    return this;
  }

  public RealmRepresentation addIdentityProviderMappersItem(IdentityProviderMapperRepresentation identityProviderMappersItem) {
    if (this.identityProviderMappers == null) {
      this.identityProviderMappers = new ArrayList<>();
    }
    this.identityProviderMappers.add(identityProviderMappersItem);
    return this;
  }

  /**
   * Get identityProviderMappers
   * @return identityProviderMappers
   */
  @javax.annotation.Nullable
  public List<IdentityProviderMapperRepresentation> getIdentityProviderMappers() {
    return identityProviderMappers;
  }

  public void setIdentityProviderMappers(@javax.annotation.Nullable List<IdentityProviderMapperRepresentation> identityProviderMappers) {
    this.identityProviderMappers = identityProviderMappers;
  }


  public RealmRepresentation protocolMappers(@javax.annotation.Nullable List<ProtocolMapperRepresentation> protocolMappers) {
    this.protocolMappers = protocolMappers;
    return this;
  }

  public RealmRepresentation addProtocolMappersItem(ProtocolMapperRepresentation protocolMappersItem) {
    if (this.protocolMappers == null) {
      this.protocolMappers = new ArrayList<>();
    }
    this.protocolMappers.add(protocolMappersItem);
    return this;
  }

  /**
   * Get protocolMappers
   * @return protocolMappers
   */
  @javax.annotation.Nullable
  public List<ProtocolMapperRepresentation> getProtocolMappers() {
    return protocolMappers;
  }

  public void setProtocolMappers(@javax.annotation.Nullable List<ProtocolMapperRepresentation> protocolMappers) {
    this.protocolMappers = protocolMappers;
  }


  public RealmRepresentation components(@javax.annotation.Nullable Map<String, List<ComponentExportRepresentation>> components) {
    this.components = components;
    return this;
  }

  public RealmRepresentation putComponentsItem(String key, List<ComponentExportRepresentation> componentsItem) {
    if (this.components == null) {
      this.components = new HashMap<>();
    }
    this.components.put(key, componentsItem);
    return this;
  }

  /**
   * Get components
   * @return components
   */
  @javax.annotation.Nullable
  public Map<String, List<ComponentExportRepresentation>> getComponents() {
    return components;
  }

  public void setComponents(@javax.annotation.Nullable Map<String, List<ComponentExportRepresentation>> components) {
    this.components = components;
  }


  public RealmRepresentation internationalizationEnabled(@javax.annotation.Nullable Boolean internationalizationEnabled) {
    this.internationalizationEnabled = internationalizationEnabled;
    return this;
  }

  /**
   * Get internationalizationEnabled
   * @return internationalizationEnabled
   */
  @javax.annotation.Nullable
  public Boolean getInternationalizationEnabled() {
    return internationalizationEnabled;
  }

  public void setInternationalizationEnabled(@javax.annotation.Nullable Boolean internationalizationEnabled) {
    this.internationalizationEnabled = internationalizationEnabled;
  }


  public RealmRepresentation supportedLocales(@javax.annotation.Nullable Set<String> supportedLocales) {
    this.supportedLocales = supportedLocales;
    return this;
  }

  public RealmRepresentation addSupportedLocalesItem(String supportedLocalesItem) {
    if (this.supportedLocales == null) {
      this.supportedLocales = new LinkedHashSet<>();
    }
    this.supportedLocales.add(supportedLocalesItem);
    return this;
  }

  /**
   * Get supportedLocales
   * @return supportedLocales
   */
  @javax.annotation.Nullable
  public Set<String> getSupportedLocales() {
    return supportedLocales;
  }

  public void setSupportedLocales(@javax.annotation.Nullable Set<String> supportedLocales) {
    this.supportedLocales = supportedLocales;
  }


  public RealmRepresentation defaultLocale(@javax.annotation.Nullable String defaultLocale) {
    this.defaultLocale = defaultLocale;
    return this;
  }

  /**
   * Get defaultLocale
   * @return defaultLocale
   */
  @javax.annotation.Nullable
  public String getDefaultLocale() {
    return defaultLocale;
  }

  public void setDefaultLocale(@javax.annotation.Nullable String defaultLocale) {
    this.defaultLocale = defaultLocale;
  }


  public RealmRepresentation authenticationFlows(@javax.annotation.Nullable List<AuthenticationFlowRepresentation> authenticationFlows) {
    this.authenticationFlows = authenticationFlows;
    return this;
  }

  public RealmRepresentation addAuthenticationFlowsItem(AuthenticationFlowRepresentation authenticationFlowsItem) {
    if (this.authenticationFlows == null) {
      this.authenticationFlows = new ArrayList<>();
    }
    this.authenticationFlows.add(authenticationFlowsItem);
    return this;
  }

  /**
   * Get authenticationFlows
   * @return authenticationFlows
   */
  @javax.annotation.Nullable
  public List<AuthenticationFlowRepresentation> getAuthenticationFlows() {
    return authenticationFlows;
  }

  public void setAuthenticationFlows(@javax.annotation.Nullable List<AuthenticationFlowRepresentation> authenticationFlows) {
    this.authenticationFlows = authenticationFlows;
  }


  public RealmRepresentation authenticatorConfig(@javax.annotation.Nullable List<AuthenticatorConfigRepresentation> authenticatorConfig) {
    this.authenticatorConfig = authenticatorConfig;
    return this;
  }

  public RealmRepresentation addAuthenticatorConfigItem(AuthenticatorConfigRepresentation authenticatorConfigItem) {
    if (this.authenticatorConfig == null) {
      this.authenticatorConfig = new ArrayList<>();
    }
    this.authenticatorConfig.add(authenticatorConfigItem);
    return this;
  }

  /**
   * Get authenticatorConfig
   * @return authenticatorConfig
   */
  @javax.annotation.Nullable
  public List<AuthenticatorConfigRepresentation> getAuthenticatorConfig() {
    return authenticatorConfig;
  }

  public void setAuthenticatorConfig(@javax.annotation.Nullable List<AuthenticatorConfigRepresentation> authenticatorConfig) {
    this.authenticatorConfig = authenticatorConfig;
  }


  public RealmRepresentation requiredActions(@javax.annotation.Nullable List<RequiredActionProviderRepresentation> requiredActions) {
    this.requiredActions = requiredActions;
    return this;
  }

  public RealmRepresentation addRequiredActionsItem(RequiredActionProviderRepresentation requiredActionsItem) {
    if (this.requiredActions == null) {
      this.requiredActions = new ArrayList<>();
    }
    this.requiredActions.add(requiredActionsItem);
    return this;
  }

  /**
   * Get requiredActions
   * @return requiredActions
   */
  @javax.annotation.Nullable
  public List<RequiredActionProviderRepresentation> getRequiredActions() {
    return requiredActions;
  }

  public void setRequiredActions(@javax.annotation.Nullable List<RequiredActionProviderRepresentation> requiredActions) {
    this.requiredActions = requiredActions;
  }


  public RealmRepresentation browserFlow(@javax.annotation.Nullable String browserFlow) {
    this.browserFlow = browserFlow;
    return this;
  }

  /**
   * Get browserFlow
   * @return browserFlow
   */
  @javax.annotation.Nullable
  public String getBrowserFlow() {
    return browserFlow;
  }

  public void setBrowserFlow(@javax.annotation.Nullable String browserFlow) {
    this.browserFlow = browserFlow;
  }


  public RealmRepresentation registrationFlow(@javax.annotation.Nullable String registrationFlow) {
    this.registrationFlow = registrationFlow;
    return this;
  }

  /**
   * Get registrationFlow
   * @return registrationFlow
   */
  @javax.annotation.Nullable
  public String getRegistrationFlow() {
    return registrationFlow;
  }

  public void setRegistrationFlow(@javax.annotation.Nullable String registrationFlow) {
    this.registrationFlow = registrationFlow;
  }


  public RealmRepresentation directGrantFlow(@javax.annotation.Nullable String directGrantFlow) {
    this.directGrantFlow = directGrantFlow;
    return this;
  }

  /**
   * Get directGrantFlow
   * @return directGrantFlow
   */
  @javax.annotation.Nullable
  public String getDirectGrantFlow() {
    return directGrantFlow;
  }

  public void setDirectGrantFlow(@javax.annotation.Nullable String directGrantFlow) {
    this.directGrantFlow = directGrantFlow;
  }


  public RealmRepresentation resetCredentialsFlow(@javax.annotation.Nullable String resetCredentialsFlow) {
    this.resetCredentialsFlow = resetCredentialsFlow;
    return this;
  }

  /**
   * Get resetCredentialsFlow
   * @return resetCredentialsFlow
   */
  @javax.annotation.Nullable
  public String getResetCredentialsFlow() {
    return resetCredentialsFlow;
  }

  public void setResetCredentialsFlow(@javax.annotation.Nullable String resetCredentialsFlow) {
    this.resetCredentialsFlow = resetCredentialsFlow;
  }


  public RealmRepresentation clientAuthenticationFlow(@javax.annotation.Nullable String clientAuthenticationFlow) {
    this.clientAuthenticationFlow = clientAuthenticationFlow;
    return this;
  }

  /**
   * Get clientAuthenticationFlow
   * @return clientAuthenticationFlow
   */
  @javax.annotation.Nullable
  public String getClientAuthenticationFlow() {
    return clientAuthenticationFlow;
  }

  public void setClientAuthenticationFlow(@javax.annotation.Nullable String clientAuthenticationFlow) {
    this.clientAuthenticationFlow = clientAuthenticationFlow;
  }


  public RealmRepresentation dockerAuthenticationFlow(@javax.annotation.Nullable String dockerAuthenticationFlow) {
    this.dockerAuthenticationFlow = dockerAuthenticationFlow;
    return this;
  }

  /**
   * Get dockerAuthenticationFlow
   * @return dockerAuthenticationFlow
   */
  @javax.annotation.Nullable
  public String getDockerAuthenticationFlow() {
    return dockerAuthenticationFlow;
  }

  public void setDockerAuthenticationFlow(@javax.annotation.Nullable String dockerAuthenticationFlow) {
    this.dockerAuthenticationFlow = dockerAuthenticationFlow;
  }


  public RealmRepresentation firstBrokerLoginFlow(@javax.annotation.Nullable String firstBrokerLoginFlow) {
    this.firstBrokerLoginFlow = firstBrokerLoginFlow;
    return this;
  }

  /**
   * Get firstBrokerLoginFlow
   * @return firstBrokerLoginFlow
   */
  @javax.annotation.Nullable
  public String getFirstBrokerLoginFlow() {
    return firstBrokerLoginFlow;
  }

  public void setFirstBrokerLoginFlow(@javax.annotation.Nullable String firstBrokerLoginFlow) {
    this.firstBrokerLoginFlow = firstBrokerLoginFlow;
  }


  public RealmRepresentation attributes(@javax.annotation.Nullable Map<String, String> attributes) {
    this.attributes = attributes;
    return this;
  }

  public RealmRepresentation putAttributesItem(String key, String attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map<String, String> getAttributes() {
    return attributes;
  }

  public void setAttributes(@javax.annotation.Nullable Map<String, String> attributes) {
    this.attributes = attributes;
  }


  public RealmRepresentation keycloakVersion(@javax.annotation.Nullable String keycloakVersion) {
    this.keycloakVersion = keycloakVersion;
    return this;
  }

  /**
   * Get keycloakVersion
   * @return keycloakVersion
   */
  @javax.annotation.Nullable
  public String getKeycloakVersion() {
    return keycloakVersion;
  }

  public void setKeycloakVersion(@javax.annotation.Nullable String keycloakVersion) {
    this.keycloakVersion = keycloakVersion;
  }


  public RealmRepresentation userManagedAccessAllowed(@javax.annotation.Nullable Boolean userManagedAccessAllowed) {
    this.userManagedAccessAllowed = userManagedAccessAllowed;
    return this;
  }

  /**
   * Get userManagedAccessAllowed
   * @return userManagedAccessAllowed
   */
  @javax.annotation.Nullable
  public Boolean getUserManagedAccessAllowed() {
    return userManagedAccessAllowed;
  }

  public void setUserManagedAccessAllowed(@javax.annotation.Nullable Boolean userManagedAccessAllowed) {
    this.userManagedAccessAllowed = userManagedAccessAllowed;
  }


  public RealmRepresentation organizationsEnabled(@javax.annotation.Nullable Boolean organizationsEnabled) {
    this.organizationsEnabled = organizationsEnabled;
    return this;
  }

  /**
   * Get organizationsEnabled
   * @return organizationsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getOrganizationsEnabled() {
    return organizationsEnabled;
  }

  public void setOrganizationsEnabled(@javax.annotation.Nullable Boolean organizationsEnabled) {
    this.organizationsEnabled = organizationsEnabled;
  }


  public RealmRepresentation organizations(@javax.annotation.Nullable List<OrganizationRepresentation> organizations) {
    this.organizations = organizations;
    return this;
  }

  public RealmRepresentation addOrganizationsItem(OrganizationRepresentation organizationsItem) {
    if (this.organizations == null) {
      this.organizations = new ArrayList<>();
    }
    this.organizations.add(organizationsItem);
    return this;
  }

  /**
   * Get organizations
   * @return organizations
   */
  @javax.annotation.Nullable
  public List<OrganizationRepresentation> getOrganizations() {
    return organizations;
  }

  public void setOrganizations(@javax.annotation.Nullable List<OrganizationRepresentation> organizations) {
    this.organizations = organizations;
  }


  public RealmRepresentation verifiableCredentialsEnabled(@javax.annotation.Nullable Boolean verifiableCredentialsEnabled) {
    this.verifiableCredentialsEnabled = verifiableCredentialsEnabled;
    return this;
  }

  /**
   * Get verifiableCredentialsEnabled
   * @return verifiableCredentialsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getVerifiableCredentialsEnabled() {
    return verifiableCredentialsEnabled;
  }

  public void setVerifiableCredentialsEnabled(@javax.annotation.Nullable Boolean verifiableCredentialsEnabled) {
    this.verifiableCredentialsEnabled = verifiableCredentialsEnabled;
  }


  public RealmRepresentation adminPermissionsEnabled(@javax.annotation.Nullable Boolean adminPermissionsEnabled) {
    this.adminPermissionsEnabled = adminPermissionsEnabled;
    return this;
  }

  /**
   * Get adminPermissionsEnabled
   * @return adminPermissionsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getAdminPermissionsEnabled() {
    return adminPermissionsEnabled;
  }

  public void setAdminPermissionsEnabled(@javax.annotation.Nullable Boolean adminPermissionsEnabled) {
    this.adminPermissionsEnabled = adminPermissionsEnabled;
  }


  @Deprecated
  public RealmRepresentation social(@javax.annotation.Nullable Boolean social) {
    this.social = social;
    return this;
  }

  /**
   * Get social
   * @return social
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getSocial() {
    return social;
  }

  @Deprecated
  public void setSocial(@javax.annotation.Nullable Boolean social) {
    this.social = social;
  }


  @Deprecated
  public RealmRepresentation updateProfileOnInitialSocialLogin(@javax.annotation.Nullable Boolean updateProfileOnInitialSocialLogin) {
    this.updateProfileOnInitialSocialLogin = updateProfileOnInitialSocialLogin;
    return this;
  }

  /**
   * Get updateProfileOnInitialSocialLogin
   * @return updateProfileOnInitialSocialLogin
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getUpdateProfileOnInitialSocialLogin() {
    return updateProfileOnInitialSocialLogin;
  }

  @Deprecated
  public void setUpdateProfileOnInitialSocialLogin(@javax.annotation.Nullable Boolean updateProfileOnInitialSocialLogin) {
    this.updateProfileOnInitialSocialLogin = updateProfileOnInitialSocialLogin;
  }


  @Deprecated
  public RealmRepresentation socialProviders(@javax.annotation.Nullable Map<String, String> socialProviders) {
    this.socialProviders = socialProviders;
    return this;
  }

  public RealmRepresentation putSocialProvidersItem(String key, String socialProvidersItem) {
    if (this.socialProviders == null) {
      this.socialProviders = new HashMap<>();
    }
    this.socialProviders.put(key, socialProvidersItem);
    return this;
  }

  /**
   * Get socialProviders
   * @return socialProviders
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Map<String, String> getSocialProviders() {
    return socialProviders;
  }

  @Deprecated
  public void setSocialProviders(@javax.annotation.Nullable Map<String, String> socialProviders) {
    this.socialProviders = socialProviders;
  }


  @Deprecated
  public RealmRepresentation applicationScopeMappings(@javax.annotation.Nullable Map<String, List<ScopeMappingRepresentation>> applicationScopeMappings) {
    this.applicationScopeMappings = applicationScopeMappings;
    return this;
  }

  public RealmRepresentation putApplicationScopeMappingsItem(String key, List<ScopeMappingRepresentation> applicationScopeMappingsItem) {
    if (this.applicationScopeMappings == null) {
      this.applicationScopeMappings = new HashMap<>();
    }
    this.applicationScopeMappings.put(key, applicationScopeMappingsItem);
    return this;
  }

  /**
   * Get applicationScopeMappings
   * @return applicationScopeMappings
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Map<String, List<ScopeMappingRepresentation>> getApplicationScopeMappings() {
    return applicationScopeMappings;
  }

  @Deprecated
  public void setApplicationScopeMappings(@javax.annotation.Nullable Map<String, List<ScopeMappingRepresentation>> applicationScopeMappings) {
    this.applicationScopeMappings = applicationScopeMappings;
  }


  @Deprecated
  public RealmRepresentation applications(@javax.annotation.Nullable List<ApplicationRepresentation> applications) {
    this.applications = applications;
    return this;
  }

  public RealmRepresentation addApplicationsItem(ApplicationRepresentation applicationsItem) {
    if (this.applications == null) {
      this.applications = new ArrayList<>();
    }
    this.applications.add(applicationsItem);
    return this;
  }

  /**
   * Get applications
   * @return applications
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<ApplicationRepresentation> getApplications() {
    return applications;
  }

  @Deprecated
  public void setApplications(@javax.annotation.Nullable List<ApplicationRepresentation> applications) {
    this.applications = applications;
  }


  @Deprecated
  public RealmRepresentation oauthClients(@javax.annotation.Nullable List<OAuthClientRepresentation> oauthClients) {
    this.oauthClients = oauthClients;
    return this;
  }

  public RealmRepresentation addOauthClientsItem(OAuthClientRepresentation oauthClientsItem) {
    if (this.oauthClients == null) {
      this.oauthClients = new ArrayList<>();
    }
    this.oauthClients.add(oauthClientsItem);
    return this;
  }

  /**
   * Get oauthClients
   * @return oauthClients
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<OAuthClientRepresentation> getOauthClients() {
    return oauthClients;
  }

  @Deprecated
  public void setOauthClients(@javax.annotation.Nullable List<OAuthClientRepresentation> oauthClients) {
    this.oauthClients = oauthClients;
  }


  @Deprecated
  public RealmRepresentation clientTemplates(@javax.annotation.Nullable List<ClientTemplateRepresentation> clientTemplates) {
    this.clientTemplates = clientTemplates;
    return this;
  }

  public RealmRepresentation addClientTemplatesItem(ClientTemplateRepresentation clientTemplatesItem) {
    if (this.clientTemplates == null) {
      this.clientTemplates = new ArrayList<>();
    }
    this.clientTemplates.add(clientTemplatesItem);
    return this;
  }

  /**
   * Get clientTemplates
   * @return clientTemplates
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<ClientTemplateRepresentation> getClientTemplates() {
    return clientTemplates;
  }

  @Deprecated
  public void setClientTemplates(@javax.annotation.Nullable List<ClientTemplateRepresentation> clientTemplates) {
    this.clientTemplates = clientTemplates;
  }


  public RealmRepresentation oAuth2DeviceCodeLifespan(@javax.annotation.Nullable Integer oAuth2DeviceCodeLifespan) {
    this.oAuth2DeviceCodeLifespan = oAuth2DeviceCodeLifespan;
    return this;
  }

  /**
   * Get oAuth2DeviceCodeLifespan
   * @return oAuth2DeviceCodeLifespan
   */
  @javax.annotation.Nullable
  public Integer getoAuth2DeviceCodeLifespan() {
    return oAuth2DeviceCodeLifespan;
  }

  public void setoAuth2DeviceCodeLifespan(@javax.annotation.Nullable Integer oAuth2DeviceCodeLifespan) {
    this.oAuth2DeviceCodeLifespan = oAuth2DeviceCodeLifespan;
  }


  public RealmRepresentation oAuth2DevicePollingInterval(@javax.annotation.Nullable Integer oAuth2DevicePollingInterval) {
    this.oAuth2DevicePollingInterval = oAuth2DevicePollingInterval;
    return this;
  }

  /**
   * Get oAuth2DevicePollingInterval
   * @return oAuth2DevicePollingInterval
   */
  @javax.annotation.Nullable
  public Integer getoAuth2DevicePollingInterval() {
    return oAuth2DevicePollingInterval;
  }

  public void setoAuth2DevicePollingInterval(@javax.annotation.Nullable Integer oAuth2DevicePollingInterval) {
    this.oAuth2DevicePollingInterval = oAuth2DevicePollingInterval;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RealmRepresentation realmRepresentation = (RealmRepresentation) o;
    return Objects.equals(this.id, realmRepresentation.id) &&
        Objects.equals(this.realm, realmRepresentation.realm) &&
        Objects.equals(this.displayName, realmRepresentation.displayName) &&
        Objects.equals(this.displayNameHtml, realmRepresentation.displayNameHtml) &&
        Objects.equals(this.notBefore, realmRepresentation.notBefore) &&
        Objects.equals(this.defaultSignatureAlgorithm, realmRepresentation.defaultSignatureAlgorithm) &&
        Objects.equals(this.revokeRefreshToken, realmRepresentation.revokeRefreshToken) &&
        Objects.equals(this.refreshTokenMaxReuse, realmRepresentation.refreshTokenMaxReuse) &&
        Objects.equals(this.accessTokenLifespan, realmRepresentation.accessTokenLifespan) &&
        Objects.equals(this.accessTokenLifespanForImplicitFlow, realmRepresentation.accessTokenLifespanForImplicitFlow) &&
        Objects.equals(this.ssoSessionIdleTimeout, realmRepresentation.ssoSessionIdleTimeout) &&
        Objects.equals(this.ssoSessionMaxLifespan, realmRepresentation.ssoSessionMaxLifespan) &&
        Objects.equals(this.ssoSessionIdleTimeoutRememberMe, realmRepresentation.ssoSessionIdleTimeoutRememberMe) &&
        Objects.equals(this.ssoSessionMaxLifespanRememberMe, realmRepresentation.ssoSessionMaxLifespanRememberMe) &&
        Objects.equals(this.offlineSessionIdleTimeout, realmRepresentation.offlineSessionIdleTimeout) &&
        Objects.equals(this.offlineSessionMaxLifespanEnabled, realmRepresentation.offlineSessionMaxLifespanEnabled) &&
        Objects.equals(this.offlineSessionMaxLifespan, realmRepresentation.offlineSessionMaxLifespan) &&
        Objects.equals(this.clientSessionIdleTimeout, realmRepresentation.clientSessionIdleTimeout) &&
        Objects.equals(this.clientSessionMaxLifespan, realmRepresentation.clientSessionMaxLifespan) &&
        Objects.equals(this.clientOfflineSessionIdleTimeout, realmRepresentation.clientOfflineSessionIdleTimeout) &&
        Objects.equals(this.clientOfflineSessionMaxLifespan, realmRepresentation.clientOfflineSessionMaxLifespan) &&
        Objects.equals(this.accessCodeLifespan, realmRepresentation.accessCodeLifespan) &&
        Objects.equals(this.accessCodeLifespanUserAction, realmRepresentation.accessCodeLifespanUserAction) &&
        Objects.equals(this.accessCodeLifespanLogin, realmRepresentation.accessCodeLifespanLogin) &&
        Objects.equals(this.actionTokenGeneratedByAdminLifespan, realmRepresentation.actionTokenGeneratedByAdminLifespan) &&
        Objects.equals(this.actionTokenGeneratedByUserLifespan, realmRepresentation.actionTokenGeneratedByUserLifespan) &&
        Objects.equals(this.oauth2DeviceCodeLifespan, realmRepresentation.oauth2DeviceCodeLifespan) &&
        Objects.equals(this.oauth2DevicePollingInterval, realmRepresentation.oauth2DevicePollingInterval) &&
        Objects.equals(this.enabled, realmRepresentation.enabled) &&
        Objects.equals(this.sslRequired, realmRepresentation.sslRequired) &&
        Objects.equals(this.passwordCredentialGrantAllowed, realmRepresentation.passwordCredentialGrantAllowed) &&
        Objects.equals(this.registrationAllowed, realmRepresentation.registrationAllowed) &&
        Objects.equals(this.registrationEmailAsUsername, realmRepresentation.registrationEmailAsUsername) &&
        Objects.equals(this.rememberMe, realmRepresentation.rememberMe) &&
        Objects.equals(this.verifyEmail, realmRepresentation.verifyEmail) &&
        Objects.equals(this.loginWithEmailAllowed, realmRepresentation.loginWithEmailAllowed) &&
        Objects.equals(this.duplicateEmailsAllowed, realmRepresentation.duplicateEmailsAllowed) &&
        Objects.equals(this.resetPasswordAllowed, realmRepresentation.resetPasswordAllowed) &&
        Objects.equals(this.editUsernameAllowed, realmRepresentation.editUsernameAllowed) &&
        Objects.equals(this.userCacheEnabled, realmRepresentation.userCacheEnabled) &&
        Objects.equals(this.realmCacheEnabled, realmRepresentation.realmCacheEnabled) &&
        Objects.equals(this.bruteForceProtected, realmRepresentation.bruteForceProtected) &&
        Objects.equals(this.permanentLockout, realmRepresentation.permanentLockout) &&
        Objects.equals(this.maxTemporaryLockouts, realmRepresentation.maxTemporaryLockouts) &&
        Objects.equals(this.bruteForceStrategy, realmRepresentation.bruteForceStrategy) &&
        Objects.equals(this.maxFailureWaitSeconds, realmRepresentation.maxFailureWaitSeconds) &&
        Objects.equals(this.minimumQuickLoginWaitSeconds, realmRepresentation.minimumQuickLoginWaitSeconds) &&
        Objects.equals(this.waitIncrementSeconds, realmRepresentation.waitIncrementSeconds) &&
        Objects.equals(this.quickLoginCheckMilliSeconds, realmRepresentation.quickLoginCheckMilliSeconds) &&
        Objects.equals(this.maxDeltaTimeSeconds, realmRepresentation.maxDeltaTimeSeconds) &&
        Objects.equals(this.failureFactor, realmRepresentation.failureFactor) &&
        Objects.equals(this.privateKey, realmRepresentation.privateKey) &&
        Objects.equals(this.publicKey, realmRepresentation.publicKey) &&
        Objects.equals(this.certificate, realmRepresentation.certificate) &&
        Objects.equals(this.codeSecret, realmRepresentation.codeSecret) &&
        Objects.equals(this.roles, realmRepresentation.roles) &&
        Objects.equals(this.groups, realmRepresentation.groups) &&
        Objects.equals(this.defaultRoles, realmRepresentation.defaultRoles) &&
        Objects.equals(this.defaultRole, realmRepresentation.defaultRole) &&
        Objects.equals(this.adminPermissionsClient, realmRepresentation.adminPermissionsClient) &&
        Objects.equals(this.defaultGroups, realmRepresentation.defaultGroups) &&
        Objects.equals(this.requiredCredentials, realmRepresentation.requiredCredentials) &&
        Objects.equals(this.passwordPolicy, realmRepresentation.passwordPolicy) &&
        Objects.equals(this.otpPolicyType, realmRepresentation.otpPolicyType) &&
        Objects.equals(this.otpPolicyAlgorithm, realmRepresentation.otpPolicyAlgorithm) &&
        Objects.equals(this.otpPolicyInitialCounter, realmRepresentation.otpPolicyInitialCounter) &&
        Objects.equals(this.otpPolicyDigits, realmRepresentation.otpPolicyDigits) &&
        Objects.equals(this.otpPolicyLookAheadWindow, realmRepresentation.otpPolicyLookAheadWindow) &&
        Objects.equals(this.otpPolicyPeriod, realmRepresentation.otpPolicyPeriod) &&
        Objects.equals(this.otpPolicyCodeReusable, realmRepresentation.otpPolicyCodeReusable) &&
        Objects.equals(this.otpSupportedApplications, realmRepresentation.otpSupportedApplications) &&
        Objects.equals(this.localizationTexts, realmRepresentation.localizationTexts) &&
        Objects.equals(this.webAuthnPolicyRpEntityName, realmRepresentation.webAuthnPolicyRpEntityName) &&
        Objects.equals(this.webAuthnPolicySignatureAlgorithms, realmRepresentation.webAuthnPolicySignatureAlgorithms) &&
        Objects.equals(this.webAuthnPolicyRpId, realmRepresentation.webAuthnPolicyRpId) &&
        Objects.equals(this.webAuthnPolicyAttestationConveyancePreference, realmRepresentation.webAuthnPolicyAttestationConveyancePreference) &&
        Objects.equals(this.webAuthnPolicyAuthenticatorAttachment, realmRepresentation.webAuthnPolicyAuthenticatorAttachment) &&
        Objects.equals(this.webAuthnPolicyRequireResidentKey, realmRepresentation.webAuthnPolicyRequireResidentKey) &&
        Objects.equals(this.webAuthnPolicyUserVerificationRequirement, realmRepresentation.webAuthnPolicyUserVerificationRequirement) &&
        Objects.equals(this.webAuthnPolicyCreateTimeout, realmRepresentation.webAuthnPolicyCreateTimeout) &&
        Objects.equals(this.webAuthnPolicyAvoidSameAuthenticatorRegister, realmRepresentation.webAuthnPolicyAvoidSameAuthenticatorRegister) &&
        Objects.equals(this.webAuthnPolicyAcceptableAaguids, realmRepresentation.webAuthnPolicyAcceptableAaguids) &&
        Objects.equals(this.webAuthnPolicyExtraOrigins, realmRepresentation.webAuthnPolicyExtraOrigins) &&
        Objects.equals(this.webAuthnPolicyPasswordlessRpEntityName, realmRepresentation.webAuthnPolicyPasswordlessRpEntityName) &&
        Objects.equals(this.webAuthnPolicyPasswordlessSignatureAlgorithms, realmRepresentation.webAuthnPolicyPasswordlessSignatureAlgorithms) &&
        Objects.equals(this.webAuthnPolicyPasswordlessRpId, realmRepresentation.webAuthnPolicyPasswordlessRpId) &&
        Objects.equals(this.webAuthnPolicyPasswordlessAttestationConveyancePreference, realmRepresentation.webAuthnPolicyPasswordlessAttestationConveyancePreference) &&
        Objects.equals(this.webAuthnPolicyPasswordlessAuthenticatorAttachment, realmRepresentation.webAuthnPolicyPasswordlessAuthenticatorAttachment) &&
        Objects.equals(this.webAuthnPolicyPasswordlessRequireResidentKey, realmRepresentation.webAuthnPolicyPasswordlessRequireResidentKey) &&
        Objects.equals(this.webAuthnPolicyPasswordlessUserVerificationRequirement, realmRepresentation.webAuthnPolicyPasswordlessUserVerificationRequirement) &&
        Objects.equals(this.webAuthnPolicyPasswordlessCreateTimeout, realmRepresentation.webAuthnPolicyPasswordlessCreateTimeout) &&
        Objects.equals(this.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister, realmRepresentation.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister) &&
        Objects.equals(this.webAuthnPolicyPasswordlessAcceptableAaguids, realmRepresentation.webAuthnPolicyPasswordlessAcceptableAaguids) &&
        Objects.equals(this.webAuthnPolicyPasswordlessExtraOrigins, realmRepresentation.webAuthnPolicyPasswordlessExtraOrigins) &&
        Objects.equals(this.clientProfiles, realmRepresentation.clientProfiles) &&
        Objects.equals(this.clientPolicies, realmRepresentation.clientPolicies) &&
        Objects.equals(this.users, realmRepresentation.users) &&
        Objects.equals(this.federatedUsers, realmRepresentation.federatedUsers) &&
        Objects.equals(this.scopeMappings, realmRepresentation.scopeMappings) &&
        Objects.equals(this.clientScopeMappings, realmRepresentation.clientScopeMappings) &&
        Objects.equals(this.clients, realmRepresentation.clients) &&
        Objects.equals(this.clientScopes, realmRepresentation.clientScopes) &&
        Objects.equals(this.defaultDefaultClientScopes, realmRepresentation.defaultDefaultClientScopes) &&
        Objects.equals(this.defaultOptionalClientScopes, realmRepresentation.defaultOptionalClientScopes) &&
        Objects.equals(this.browserSecurityHeaders, realmRepresentation.browserSecurityHeaders) &&
        Objects.equals(this.smtpServer, realmRepresentation.smtpServer) &&
        Objects.equals(this.userFederationProviders, realmRepresentation.userFederationProviders) &&
        Objects.equals(this.userFederationMappers, realmRepresentation.userFederationMappers) &&
        Objects.equals(this.loginTheme, realmRepresentation.loginTheme) &&
        Objects.equals(this.accountTheme, realmRepresentation.accountTheme) &&
        Objects.equals(this.adminTheme, realmRepresentation.adminTheme) &&
        Objects.equals(this.emailTheme, realmRepresentation.emailTheme) &&
        Objects.equals(this.eventsEnabled, realmRepresentation.eventsEnabled) &&
        Objects.equals(this.eventsExpiration, realmRepresentation.eventsExpiration) &&
        Objects.equals(this.eventsListeners, realmRepresentation.eventsListeners) &&
        Objects.equals(this.enabledEventTypes, realmRepresentation.enabledEventTypes) &&
        Objects.equals(this.adminEventsEnabled, realmRepresentation.adminEventsEnabled) &&
        Objects.equals(this.adminEventsDetailsEnabled, realmRepresentation.adminEventsDetailsEnabled) &&
        Objects.equals(this.identityProviders, realmRepresentation.identityProviders) &&
        Objects.equals(this.identityProviderMappers, realmRepresentation.identityProviderMappers) &&
        Objects.equals(this.protocolMappers, realmRepresentation.protocolMappers) &&
        Objects.equals(this.components, realmRepresentation.components) &&
        Objects.equals(this.internationalizationEnabled, realmRepresentation.internationalizationEnabled) &&
        Objects.equals(this.supportedLocales, realmRepresentation.supportedLocales) &&
        Objects.equals(this.defaultLocale, realmRepresentation.defaultLocale) &&
        Objects.equals(this.authenticationFlows, realmRepresentation.authenticationFlows) &&
        Objects.equals(this.authenticatorConfig, realmRepresentation.authenticatorConfig) &&
        Objects.equals(this.requiredActions, realmRepresentation.requiredActions) &&
        Objects.equals(this.browserFlow, realmRepresentation.browserFlow) &&
        Objects.equals(this.registrationFlow, realmRepresentation.registrationFlow) &&
        Objects.equals(this.directGrantFlow, realmRepresentation.directGrantFlow) &&
        Objects.equals(this.resetCredentialsFlow, realmRepresentation.resetCredentialsFlow) &&
        Objects.equals(this.clientAuthenticationFlow, realmRepresentation.clientAuthenticationFlow) &&
        Objects.equals(this.dockerAuthenticationFlow, realmRepresentation.dockerAuthenticationFlow) &&
        Objects.equals(this.firstBrokerLoginFlow, realmRepresentation.firstBrokerLoginFlow) &&
        Objects.equals(this.attributes, realmRepresentation.attributes) &&
        Objects.equals(this.keycloakVersion, realmRepresentation.keycloakVersion) &&
        Objects.equals(this.userManagedAccessAllowed, realmRepresentation.userManagedAccessAllowed) &&
        Objects.equals(this.organizationsEnabled, realmRepresentation.organizationsEnabled) &&
        Objects.equals(this.organizations, realmRepresentation.organizations) &&
        Objects.equals(this.verifiableCredentialsEnabled, realmRepresentation.verifiableCredentialsEnabled) &&
        Objects.equals(this.adminPermissionsEnabled, realmRepresentation.adminPermissionsEnabled) &&
        Objects.equals(this.social, realmRepresentation.social) &&
        Objects.equals(this.updateProfileOnInitialSocialLogin, realmRepresentation.updateProfileOnInitialSocialLogin) &&
        Objects.equals(this.socialProviders, realmRepresentation.socialProviders) &&
        Objects.equals(this.applicationScopeMappings, realmRepresentation.applicationScopeMappings) &&
        Objects.equals(this.applications, realmRepresentation.applications) &&
        Objects.equals(this.oauthClients, realmRepresentation.oauthClients) &&
        Objects.equals(this.clientTemplates, realmRepresentation.clientTemplates) &&
        Objects.equals(this.oAuth2DeviceCodeLifespan, realmRepresentation.oAuth2DeviceCodeLifespan) &&
        Objects.equals(this.oAuth2DevicePollingInterval, realmRepresentation.oAuth2DevicePollingInterval);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, realm, displayName, displayNameHtml, notBefore, defaultSignatureAlgorithm, revokeRefreshToken, refreshTokenMaxReuse, accessTokenLifespan, accessTokenLifespanForImplicitFlow, ssoSessionIdleTimeout, ssoSessionMaxLifespan, ssoSessionIdleTimeoutRememberMe, ssoSessionMaxLifespanRememberMe, offlineSessionIdleTimeout, offlineSessionMaxLifespanEnabled, offlineSessionMaxLifespan, clientSessionIdleTimeout, clientSessionMaxLifespan, clientOfflineSessionIdleTimeout, clientOfflineSessionMaxLifespan, accessCodeLifespan, accessCodeLifespanUserAction, accessCodeLifespanLogin, actionTokenGeneratedByAdminLifespan, actionTokenGeneratedByUserLifespan, oauth2DeviceCodeLifespan, oauth2DevicePollingInterval, enabled, sslRequired, passwordCredentialGrantAllowed, registrationAllowed, registrationEmailAsUsername, rememberMe, verifyEmail, loginWithEmailAllowed, duplicateEmailsAllowed, resetPasswordAllowed, editUsernameAllowed, userCacheEnabled, realmCacheEnabled, bruteForceProtected, permanentLockout, maxTemporaryLockouts, bruteForceStrategy, maxFailureWaitSeconds, minimumQuickLoginWaitSeconds, waitIncrementSeconds, quickLoginCheckMilliSeconds, maxDeltaTimeSeconds, failureFactor, privateKey, publicKey, certificate, codeSecret, roles, groups, defaultRoles, defaultRole, adminPermissionsClient, defaultGroups, requiredCredentials, passwordPolicy, otpPolicyType, otpPolicyAlgorithm, otpPolicyInitialCounter, otpPolicyDigits, otpPolicyLookAheadWindow, otpPolicyPeriod, otpPolicyCodeReusable, otpSupportedApplications, localizationTexts, webAuthnPolicyRpEntityName, webAuthnPolicySignatureAlgorithms, webAuthnPolicyRpId, webAuthnPolicyAttestationConveyancePreference, webAuthnPolicyAuthenticatorAttachment, webAuthnPolicyRequireResidentKey, webAuthnPolicyUserVerificationRequirement, webAuthnPolicyCreateTimeout, webAuthnPolicyAvoidSameAuthenticatorRegister, webAuthnPolicyAcceptableAaguids, webAuthnPolicyExtraOrigins, webAuthnPolicyPasswordlessRpEntityName, webAuthnPolicyPasswordlessSignatureAlgorithms, webAuthnPolicyPasswordlessRpId, webAuthnPolicyPasswordlessAttestationConveyancePreference, webAuthnPolicyPasswordlessAuthenticatorAttachment, webAuthnPolicyPasswordlessRequireResidentKey, webAuthnPolicyPasswordlessUserVerificationRequirement, webAuthnPolicyPasswordlessCreateTimeout, webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister, webAuthnPolicyPasswordlessAcceptableAaguids, webAuthnPolicyPasswordlessExtraOrigins, clientProfiles, clientPolicies, users, federatedUsers, scopeMappings, clientScopeMappings, clients, clientScopes, defaultDefaultClientScopes, defaultOptionalClientScopes, browserSecurityHeaders, smtpServer, userFederationProviders, userFederationMappers, loginTheme, accountTheme, adminTheme, emailTheme, eventsEnabled, eventsExpiration, eventsListeners, enabledEventTypes, adminEventsEnabled, adminEventsDetailsEnabled, identityProviders, identityProviderMappers, protocolMappers, components, internationalizationEnabled, supportedLocales, defaultLocale, authenticationFlows, authenticatorConfig, requiredActions, browserFlow, registrationFlow, directGrantFlow, resetCredentialsFlow, clientAuthenticationFlow, dockerAuthenticationFlow, firstBrokerLoginFlow, attributes, keycloakVersion, userManagedAccessAllowed, organizationsEnabled, organizations, verifiableCredentialsEnabled, adminPermissionsEnabled, social, updateProfileOnInitialSocialLogin, socialProviders, applicationScopeMappings, applications, oauthClients, clientTemplates, oAuth2DeviceCodeLifespan, oAuth2DevicePollingInterval);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RealmRepresentation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    realm: ").append(toIndentedString(realm)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    displayNameHtml: ").append(toIndentedString(displayNameHtml)).append("\n");
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    defaultSignatureAlgorithm: ").append(toIndentedString(defaultSignatureAlgorithm)).append("\n");
    sb.append("    revokeRefreshToken: ").append(toIndentedString(revokeRefreshToken)).append("\n");
    sb.append("    refreshTokenMaxReuse: ").append(toIndentedString(refreshTokenMaxReuse)).append("\n");
    sb.append("    accessTokenLifespan: ").append(toIndentedString(accessTokenLifespan)).append("\n");
    sb.append("    accessTokenLifespanForImplicitFlow: ").append(toIndentedString(accessTokenLifespanForImplicitFlow)).append("\n");
    sb.append("    ssoSessionIdleTimeout: ").append(toIndentedString(ssoSessionIdleTimeout)).append("\n");
    sb.append("    ssoSessionMaxLifespan: ").append(toIndentedString(ssoSessionMaxLifespan)).append("\n");
    sb.append("    ssoSessionIdleTimeoutRememberMe: ").append(toIndentedString(ssoSessionIdleTimeoutRememberMe)).append("\n");
    sb.append("    ssoSessionMaxLifespanRememberMe: ").append(toIndentedString(ssoSessionMaxLifespanRememberMe)).append("\n");
    sb.append("    offlineSessionIdleTimeout: ").append(toIndentedString(offlineSessionIdleTimeout)).append("\n");
    sb.append("    offlineSessionMaxLifespanEnabled: ").append(toIndentedString(offlineSessionMaxLifespanEnabled)).append("\n");
    sb.append("    offlineSessionMaxLifespan: ").append(toIndentedString(offlineSessionMaxLifespan)).append("\n");
    sb.append("    clientSessionIdleTimeout: ").append(toIndentedString(clientSessionIdleTimeout)).append("\n");
    sb.append("    clientSessionMaxLifespan: ").append(toIndentedString(clientSessionMaxLifespan)).append("\n");
    sb.append("    clientOfflineSessionIdleTimeout: ").append(toIndentedString(clientOfflineSessionIdleTimeout)).append("\n");
    sb.append("    clientOfflineSessionMaxLifespan: ").append(toIndentedString(clientOfflineSessionMaxLifespan)).append("\n");
    sb.append("    accessCodeLifespan: ").append(toIndentedString(accessCodeLifespan)).append("\n");
    sb.append("    accessCodeLifespanUserAction: ").append(toIndentedString(accessCodeLifespanUserAction)).append("\n");
    sb.append("    accessCodeLifespanLogin: ").append(toIndentedString(accessCodeLifespanLogin)).append("\n");
    sb.append("    actionTokenGeneratedByAdminLifespan: ").append(toIndentedString(actionTokenGeneratedByAdminLifespan)).append("\n");
    sb.append("    actionTokenGeneratedByUserLifespan: ").append(toIndentedString(actionTokenGeneratedByUserLifespan)).append("\n");
    sb.append("    oauth2DeviceCodeLifespan: ").append(toIndentedString(oauth2DeviceCodeLifespan)).append("\n");
    sb.append("    oauth2DevicePollingInterval: ").append(toIndentedString(oauth2DevicePollingInterval)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    sslRequired: ").append(toIndentedString(sslRequired)).append("\n");
    sb.append("    passwordCredentialGrantAllowed: ").append(toIndentedString(passwordCredentialGrantAllowed)).append("\n");
    sb.append("    registrationAllowed: ").append(toIndentedString(registrationAllowed)).append("\n");
    sb.append("    registrationEmailAsUsername: ").append(toIndentedString(registrationEmailAsUsername)).append("\n");
    sb.append("    rememberMe: ").append(toIndentedString(rememberMe)).append("\n");
    sb.append("    verifyEmail: ").append(toIndentedString(verifyEmail)).append("\n");
    sb.append("    loginWithEmailAllowed: ").append(toIndentedString(loginWithEmailAllowed)).append("\n");
    sb.append("    duplicateEmailsAllowed: ").append(toIndentedString(duplicateEmailsAllowed)).append("\n");
    sb.append("    resetPasswordAllowed: ").append(toIndentedString(resetPasswordAllowed)).append("\n");
    sb.append("    editUsernameAllowed: ").append(toIndentedString(editUsernameAllowed)).append("\n");
    sb.append("    userCacheEnabled: ").append(toIndentedString(userCacheEnabled)).append("\n");
    sb.append("    realmCacheEnabled: ").append(toIndentedString(realmCacheEnabled)).append("\n");
    sb.append("    bruteForceProtected: ").append(toIndentedString(bruteForceProtected)).append("\n");
    sb.append("    permanentLockout: ").append(toIndentedString(permanentLockout)).append("\n");
    sb.append("    maxTemporaryLockouts: ").append(toIndentedString(maxTemporaryLockouts)).append("\n");
    sb.append("    bruteForceStrategy: ").append(toIndentedString(bruteForceStrategy)).append("\n");
    sb.append("    maxFailureWaitSeconds: ").append(toIndentedString(maxFailureWaitSeconds)).append("\n");
    sb.append("    minimumQuickLoginWaitSeconds: ").append(toIndentedString(minimumQuickLoginWaitSeconds)).append("\n");
    sb.append("    waitIncrementSeconds: ").append(toIndentedString(waitIncrementSeconds)).append("\n");
    sb.append("    quickLoginCheckMilliSeconds: ").append(toIndentedString(quickLoginCheckMilliSeconds)).append("\n");
    sb.append("    maxDeltaTimeSeconds: ").append(toIndentedString(maxDeltaTimeSeconds)).append("\n");
    sb.append("    failureFactor: ").append(toIndentedString(failureFactor)).append("\n");
    sb.append("    privateKey: ").append(toIndentedString(privateKey)).append("\n");
    sb.append("    publicKey: ").append(toIndentedString(publicKey)).append("\n");
    sb.append("    certificate: ").append(toIndentedString(certificate)).append("\n");
    sb.append("    codeSecret: ").append(toIndentedString(codeSecret)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    defaultRoles: ").append(toIndentedString(defaultRoles)).append("\n");
    sb.append("    defaultRole: ").append(toIndentedString(defaultRole)).append("\n");
    sb.append("    adminPermissionsClient: ").append(toIndentedString(adminPermissionsClient)).append("\n");
    sb.append("    defaultGroups: ").append(toIndentedString(defaultGroups)).append("\n");
    sb.append("    requiredCredentials: ").append(toIndentedString(requiredCredentials)).append("\n");
    sb.append("    passwordPolicy: ").append(toIndentedString(passwordPolicy)).append("\n");
    sb.append("    otpPolicyType: ").append(toIndentedString(otpPolicyType)).append("\n");
    sb.append("    otpPolicyAlgorithm: ").append(toIndentedString(otpPolicyAlgorithm)).append("\n");
    sb.append("    otpPolicyInitialCounter: ").append(toIndentedString(otpPolicyInitialCounter)).append("\n");
    sb.append("    otpPolicyDigits: ").append(toIndentedString(otpPolicyDigits)).append("\n");
    sb.append("    otpPolicyLookAheadWindow: ").append(toIndentedString(otpPolicyLookAheadWindow)).append("\n");
    sb.append("    otpPolicyPeriod: ").append(toIndentedString(otpPolicyPeriod)).append("\n");
    sb.append("    otpPolicyCodeReusable: ").append(toIndentedString(otpPolicyCodeReusable)).append("\n");
    sb.append("    otpSupportedApplications: ").append(toIndentedString(otpSupportedApplications)).append("\n");
    sb.append("    localizationTexts: ").append(toIndentedString(localizationTexts)).append("\n");
    sb.append("    webAuthnPolicyRpEntityName: ").append(toIndentedString(webAuthnPolicyRpEntityName)).append("\n");
    sb.append("    webAuthnPolicySignatureAlgorithms: ").append(toIndentedString(webAuthnPolicySignatureAlgorithms)).append("\n");
    sb.append("    webAuthnPolicyRpId: ").append(toIndentedString(webAuthnPolicyRpId)).append("\n");
    sb.append("    webAuthnPolicyAttestationConveyancePreference: ").append(toIndentedString(webAuthnPolicyAttestationConveyancePreference)).append("\n");
    sb.append("    webAuthnPolicyAuthenticatorAttachment: ").append(toIndentedString(webAuthnPolicyAuthenticatorAttachment)).append("\n");
    sb.append("    webAuthnPolicyRequireResidentKey: ").append(toIndentedString(webAuthnPolicyRequireResidentKey)).append("\n");
    sb.append("    webAuthnPolicyUserVerificationRequirement: ").append(toIndentedString(webAuthnPolicyUserVerificationRequirement)).append("\n");
    sb.append("    webAuthnPolicyCreateTimeout: ").append(toIndentedString(webAuthnPolicyCreateTimeout)).append("\n");
    sb.append("    webAuthnPolicyAvoidSameAuthenticatorRegister: ").append(toIndentedString(webAuthnPolicyAvoidSameAuthenticatorRegister)).append("\n");
    sb.append("    webAuthnPolicyAcceptableAaguids: ").append(toIndentedString(webAuthnPolicyAcceptableAaguids)).append("\n");
    sb.append("    webAuthnPolicyExtraOrigins: ").append(toIndentedString(webAuthnPolicyExtraOrigins)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessRpEntityName: ").append(toIndentedString(webAuthnPolicyPasswordlessRpEntityName)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessSignatureAlgorithms: ").append(toIndentedString(webAuthnPolicyPasswordlessSignatureAlgorithms)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessRpId: ").append(toIndentedString(webAuthnPolicyPasswordlessRpId)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessAttestationConveyancePreference: ").append(toIndentedString(webAuthnPolicyPasswordlessAttestationConveyancePreference)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessAuthenticatorAttachment: ").append(toIndentedString(webAuthnPolicyPasswordlessAuthenticatorAttachment)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessRequireResidentKey: ").append(toIndentedString(webAuthnPolicyPasswordlessRequireResidentKey)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessUserVerificationRequirement: ").append(toIndentedString(webAuthnPolicyPasswordlessUserVerificationRequirement)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessCreateTimeout: ").append(toIndentedString(webAuthnPolicyPasswordlessCreateTimeout)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: ").append(toIndentedString(webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessAcceptableAaguids: ").append(toIndentedString(webAuthnPolicyPasswordlessAcceptableAaguids)).append("\n");
    sb.append("    webAuthnPolicyPasswordlessExtraOrigins: ").append(toIndentedString(webAuthnPolicyPasswordlessExtraOrigins)).append("\n");
    sb.append("    clientProfiles: ").append(toIndentedString(clientProfiles)).append("\n");
    sb.append("    clientPolicies: ").append(toIndentedString(clientPolicies)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    federatedUsers: ").append(toIndentedString(federatedUsers)).append("\n");
    sb.append("    scopeMappings: ").append(toIndentedString(scopeMappings)).append("\n");
    sb.append("    clientScopeMappings: ").append(toIndentedString(clientScopeMappings)).append("\n");
    sb.append("    clients: ").append(toIndentedString(clients)).append("\n");
    sb.append("    clientScopes: ").append(toIndentedString(clientScopes)).append("\n");
    sb.append("    defaultDefaultClientScopes: ").append(toIndentedString(defaultDefaultClientScopes)).append("\n");
    sb.append("    defaultOptionalClientScopes: ").append(toIndentedString(defaultOptionalClientScopes)).append("\n");
    sb.append("    browserSecurityHeaders: ").append(toIndentedString(browserSecurityHeaders)).append("\n");
    sb.append("    smtpServer: ").append(toIndentedString(smtpServer)).append("\n");
    sb.append("    userFederationProviders: ").append(toIndentedString(userFederationProviders)).append("\n");
    sb.append("    userFederationMappers: ").append(toIndentedString(userFederationMappers)).append("\n");
    sb.append("    loginTheme: ").append(toIndentedString(loginTheme)).append("\n");
    sb.append("    accountTheme: ").append(toIndentedString(accountTheme)).append("\n");
    sb.append("    adminTheme: ").append(toIndentedString(adminTheme)).append("\n");
    sb.append("    emailTheme: ").append(toIndentedString(emailTheme)).append("\n");
    sb.append("    eventsEnabled: ").append(toIndentedString(eventsEnabled)).append("\n");
    sb.append("    eventsExpiration: ").append(toIndentedString(eventsExpiration)).append("\n");
    sb.append("    eventsListeners: ").append(toIndentedString(eventsListeners)).append("\n");
    sb.append("    enabledEventTypes: ").append(toIndentedString(enabledEventTypes)).append("\n");
    sb.append("    adminEventsEnabled: ").append(toIndentedString(adminEventsEnabled)).append("\n");
    sb.append("    adminEventsDetailsEnabled: ").append(toIndentedString(adminEventsDetailsEnabled)).append("\n");
    sb.append("    identityProviders: ").append(toIndentedString(identityProviders)).append("\n");
    sb.append("    identityProviderMappers: ").append(toIndentedString(identityProviderMappers)).append("\n");
    sb.append("    protocolMappers: ").append(toIndentedString(protocolMappers)).append("\n");
    sb.append("    components: ").append(toIndentedString(components)).append("\n");
    sb.append("    internationalizationEnabled: ").append(toIndentedString(internationalizationEnabled)).append("\n");
    sb.append("    supportedLocales: ").append(toIndentedString(supportedLocales)).append("\n");
    sb.append("    defaultLocale: ").append(toIndentedString(defaultLocale)).append("\n");
    sb.append("    authenticationFlows: ").append(toIndentedString(authenticationFlows)).append("\n");
    sb.append("    authenticatorConfig: ").append(toIndentedString(authenticatorConfig)).append("\n");
    sb.append("    requiredActions: ").append(toIndentedString(requiredActions)).append("\n");
    sb.append("    browserFlow: ").append(toIndentedString(browserFlow)).append("\n");
    sb.append("    registrationFlow: ").append(toIndentedString(registrationFlow)).append("\n");
    sb.append("    directGrantFlow: ").append(toIndentedString(directGrantFlow)).append("\n");
    sb.append("    resetCredentialsFlow: ").append(toIndentedString(resetCredentialsFlow)).append("\n");
    sb.append("    clientAuthenticationFlow: ").append(toIndentedString(clientAuthenticationFlow)).append("\n");
    sb.append("    dockerAuthenticationFlow: ").append(toIndentedString(dockerAuthenticationFlow)).append("\n");
    sb.append("    firstBrokerLoginFlow: ").append(toIndentedString(firstBrokerLoginFlow)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    keycloakVersion: ").append(toIndentedString(keycloakVersion)).append("\n");
    sb.append("    userManagedAccessAllowed: ").append(toIndentedString(userManagedAccessAllowed)).append("\n");
    sb.append("    organizationsEnabled: ").append(toIndentedString(organizationsEnabled)).append("\n");
    sb.append("    organizations: ").append(toIndentedString(organizations)).append("\n");
    sb.append("    verifiableCredentialsEnabled: ").append(toIndentedString(verifiableCredentialsEnabled)).append("\n");
    sb.append("    adminPermissionsEnabled: ").append(toIndentedString(adminPermissionsEnabled)).append("\n");
    sb.append("    social: ").append(toIndentedString(social)).append("\n");
    sb.append("    updateProfileOnInitialSocialLogin: ").append(toIndentedString(updateProfileOnInitialSocialLogin)).append("\n");
    sb.append("    socialProviders: ").append(toIndentedString(socialProviders)).append("\n");
    sb.append("    applicationScopeMappings: ").append(toIndentedString(applicationScopeMappings)).append("\n");
    sb.append("    applications: ").append(toIndentedString(applications)).append("\n");
    sb.append("    oauthClients: ").append(toIndentedString(oauthClients)).append("\n");
    sb.append("    clientTemplates: ").append(toIndentedString(clientTemplates)).append("\n");
    sb.append("    oAuth2DeviceCodeLifespan: ").append(toIndentedString(oAuth2DeviceCodeLifespan)).append("\n");
    sb.append("    oAuth2DevicePollingInterval: ").append(toIndentedString(oAuth2DevicePollingInterval)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("realm");
    openapiFields.add("displayName");
    openapiFields.add("displayNameHtml");
    openapiFields.add("notBefore");
    openapiFields.add("defaultSignatureAlgorithm");
    openapiFields.add("revokeRefreshToken");
    openapiFields.add("refreshTokenMaxReuse");
    openapiFields.add("accessTokenLifespan");
    openapiFields.add("accessTokenLifespanForImplicitFlow");
    openapiFields.add("ssoSessionIdleTimeout");
    openapiFields.add("ssoSessionMaxLifespan");
    openapiFields.add("ssoSessionIdleTimeoutRememberMe");
    openapiFields.add("ssoSessionMaxLifespanRememberMe");
    openapiFields.add("offlineSessionIdleTimeout");
    openapiFields.add("offlineSessionMaxLifespanEnabled");
    openapiFields.add("offlineSessionMaxLifespan");
    openapiFields.add("clientSessionIdleTimeout");
    openapiFields.add("clientSessionMaxLifespan");
    openapiFields.add("clientOfflineSessionIdleTimeout");
    openapiFields.add("clientOfflineSessionMaxLifespan");
    openapiFields.add("accessCodeLifespan");
    openapiFields.add("accessCodeLifespanUserAction");
    openapiFields.add("accessCodeLifespanLogin");
    openapiFields.add("actionTokenGeneratedByAdminLifespan");
    openapiFields.add("actionTokenGeneratedByUserLifespan");
    openapiFields.add("oauth2DeviceCodeLifespan");
    openapiFields.add("oauth2DevicePollingInterval");
    openapiFields.add("enabled");
    openapiFields.add("sslRequired");
    openapiFields.add("passwordCredentialGrantAllowed");
    openapiFields.add("registrationAllowed");
    openapiFields.add("registrationEmailAsUsername");
    openapiFields.add("rememberMe");
    openapiFields.add("verifyEmail");
    openapiFields.add("loginWithEmailAllowed");
    openapiFields.add("duplicateEmailsAllowed");
    openapiFields.add("resetPasswordAllowed");
    openapiFields.add("editUsernameAllowed");
    openapiFields.add("userCacheEnabled");
    openapiFields.add("realmCacheEnabled");
    openapiFields.add("bruteForceProtected");
    openapiFields.add("permanentLockout");
    openapiFields.add("maxTemporaryLockouts");
    openapiFields.add("bruteForceStrategy");
    openapiFields.add("maxFailureWaitSeconds");
    openapiFields.add("minimumQuickLoginWaitSeconds");
    openapiFields.add("waitIncrementSeconds");
    openapiFields.add("quickLoginCheckMilliSeconds");
    openapiFields.add("maxDeltaTimeSeconds");
    openapiFields.add("failureFactor");
    openapiFields.add("privateKey");
    openapiFields.add("publicKey");
    openapiFields.add("certificate");
    openapiFields.add("codeSecret");
    openapiFields.add("roles");
    openapiFields.add("groups");
    openapiFields.add("defaultRoles");
    openapiFields.add("defaultRole");
    openapiFields.add("adminPermissionsClient");
    openapiFields.add("defaultGroups");
    openapiFields.add("requiredCredentials");
    openapiFields.add("passwordPolicy");
    openapiFields.add("otpPolicyType");
    openapiFields.add("otpPolicyAlgorithm");
    openapiFields.add("otpPolicyInitialCounter");
    openapiFields.add("otpPolicyDigits");
    openapiFields.add("otpPolicyLookAheadWindow");
    openapiFields.add("otpPolicyPeriod");
    openapiFields.add("otpPolicyCodeReusable");
    openapiFields.add("otpSupportedApplications");
    openapiFields.add("localizationTexts");
    openapiFields.add("webAuthnPolicyRpEntityName");
    openapiFields.add("webAuthnPolicySignatureAlgorithms");
    openapiFields.add("webAuthnPolicyRpId");
    openapiFields.add("webAuthnPolicyAttestationConveyancePreference");
    openapiFields.add("webAuthnPolicyAuthenticatorAttachment");
    openapiFields.add("webAuthnPolicyRequireResidentKey");
    openapiFields.add("webAuthnPolicyUserVerificationRequirement");
    openapiFields.add("webAuthnPolicyCreateTimeout");
    openapiFields.add("webAuthnPolicyAvoidSameAuthenticatorRegister");
    openapiFields.add("webAuthnPolicyAcceptableAaguids");
    openapiFields.add("webAuthnPolicyExtraOrigins");
    openapiFields.add("webAuthnPolicyPasswordlessRpEntityName");
    openapiFields.add("webAuthnPolicyPasswordlessSignatureAlgorithms");
    openapiFields.add("webAuthnPolicyPasswordlessRpId");
    openapiFields.add("webAuthnPolicyPasswordlessAttestationConveyancePreference");
    openapiFields.add("webAuthnPolicyPasswordlessAuthenticatorAttachment");
    openapiFields.add("webAuthnPolicyPasswordlessRequireResidentKey");
    openapiFields.add("webAuthnPolicyPasswordlessUserVerificationRequirement");
    openapiFields.add("webAuthnPolicyPasswordlessCreateTimeout");
    openapiFields.add("webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister");
    openapiFields.add("webAuthnPolicyPasswordlessAcceptableAaguids");
    openapiFields.add("webAuthnPolicyPasswordlessExtraOrigins");
    openapiFields.add("clientProfiles");
    openapiFields.add("clientPolicies");
    openapiFields.add("users");
    openapiFields.add("federatedUsers");
    openapiFields.add("scopeMappings");
    openapiFields.add("clientScopeMappings");
    openapiFields.add("clients");
    openapiFields.add("clientScopes");
    openapiFields.add("defaultDefaultClientScopes");
    openapiFields.add("defaultOptionalClientScopes");
    openapiFields.add("browserSecurityHeaders");
    openapiFields.add("smtpServer");
    openapiFields.add("userFederationProviders");
    openapiFields.add("userFederationMappers");
    openapiFields.add("loginTheme");
    openapiFields.add("accountTheme");
    openapiFields.add("adminTheme");
    openapiFields.add("emailTheme");
    openapiFields.add("eventsEnabled");
    openapiFields.add("eventsExpiration");
    openapiFields.add("eventsListeners");
    openapiFields.add("enabledEventTypes");
    openapiFields.add("adminEventsEnabled");
    openapiFields.add("adminEventsDetailsEnabled");
    openapiFields.add("identityProviders");
    openapiFields.add("identityProviderMappers");
    openapiFields.add("protocolMappers");
    openapiFields.add("components");
    openapiFields.add("internationalizationEnabled");
    openapiFields.add("supportedLocales");
    openapiFields.add("defaultLocale");
    openapiFields.add("authenticationFlows");
    openapiFields.add("authenticatorConfig");
    openapiFields.add("requiredActions");
    openapiFields.add("browserFlow");
    openapiFields.add("registrationFlow");
    openapiFields.add("directGrantFlow");
    openapiFields.add("resetCredentialsFlow");
    openapiFields.add("clientAuthenticationFlow");
    openapiFields.add("dockerAuthenticationFlow");
    openapiFields.add("firstBrokerLoginFlow");
    openapiFields.add("attributes");
    openapiFields.add("keycloakVersion");
    openapiFields.add("userManagedAccessAllowed");
    openapiFields.add("organizationsEnabled");
    openapiFields.add("organizations");
    openapiFields.add("verifiableCredentialsEnabled");
    openapiFields.add("adminPermissionsEnabled");
    openapiFields.add("social");
    openapiFields.add("updateProfileOnInitialSocialLogin");
    openapiFields.add("socialProviders");
    openapiFields.add("applicationScopeMappings");
    openapiFields.add("applications");
    openapiFields.add("oauthClients");
    openapiFields.add("clientTemplates");
    openapiFields.add("oAuth2DeviceCodeLifespan");
    openapiFields.add("oAuth2DevicePollingInterval");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RealmRepresentation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RealmRepresentation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RealmRepresentation is not found in the empty JSON string", RealmRepresentation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RealmRepresentation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RealmRepresentation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("realm") != null && !jsonObj.get("realm").isJsonNull()) && !jsonObj.get("realm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `realm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("realm").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("displayNameHtml") != null && !jsonObj.get("displayNameHtml").isJsonNull()) && !jsonObj.get("displayNameHtml").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayNameHtml` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayNameHtml").toString()));
      }
      if ((jsonObj.get("defaultSignatureAlgorithm") != null && !jsonObj.get("defaultSignatureAlgorithm").isJsonNull()) && !jsonObj.get("defaultSignatureAlgorithm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultSignatureAlgorithm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultSignatureAlgorithm").toString()));
      }
      if ((jsonObj.get("sslRequired") != null && !jsonObj.get("sslRequired").isJsonNull()) && !jsonObj.get("sslRequired").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sslRequired` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sslRequired").toString()));
      }
      // validate the optional field `bruteForceStrategy`
      if (jsonObj.get("bruteForceStrategy") != null && !jsonObj.get("bruteForceStrategy").isJsonNull()) {
        BruteForceStrategy.validateJsonElement(jsonObj.get("bruteForceStrategy"));
      }
      if ((jsonObj.get("privateKey") != null && !jsonObj.get("privateKey").isJsonNull()) && !jsonObj.get("privateKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privateKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privateKey").toString()));
      }
      if ((jsonObj.get("publicKey") != null && !jsonObj.get("publicKey").isJsonNull()) && !jsonObj.get("publicKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `publicKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("publicKey").toString()));
      }
      if ((jsonObj.get("certificate") != null && !jsonObj.get("certificate").isJsonNull()) && !jsonObj.get("certificate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificate").toString()));
      }
      if ((jsonObj.get("codeSecret") != null && !jsonObj.get("codeSecret").isJsonNull()) && !jsonObj.get("codeSecret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `codeSecret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("codeSecret").toString()));
      }
      // validate the optional field `roles`
      if (jsonObj.get("roles") != null && !jsonObj.get("roles").isJsonNull()) {
        RolesRepresentation.validateJsonElement(jsonObj.get("roles"));
      }
      if (jsonObj.get("groups") != null && !jsonObj.get("groups").isJsonNull()) {
        JsonArray jsonArraygroups = jsonObj.getAsJsonArray("groups");
        if (jsonArraygroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("groups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `groups` to be an array in the JSON string but got `%s`", jsonObj.get("groups").toString()));
          }

          // validate the optional field `groups` (array)
          for (int i = 0; i < jsonArraygroups.size(); i++) {
            GroupRepresentation.validateJsonElement(jsonArraygroups.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("defaultRoles") != null && !jsonObj.get("defaultRoles").isJsonNull() && !jsonObj.get("defaultRoles").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultRoles` to be an array in the JSON string but got `%s`", jsonObj.get("defaultRoles").toString()));
      }
      // validate the optional field `defaultRole`
      if (jsonObj.get("defaultRole") != null && !jsonObj.get("defaultRole").isJsonNull()) {
        RoleRepresentation.validateJsonElement(jsonObj.get("defaultRole"));
      }
      // validate the optional field `adminPermissionsClient`
      if (jsonObj.get("adminPermissionsClient") != null && !jsonObj.get("adminPermissionsClient").isJsonNull()) {
        ClientRepresentation.validateJsonElement(jsonObj.get("adminPermissionsClient"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("defaultGroups") != null && !jsonObj.get("defaultGroups").isJsonNull() && !jsonObj.get("defaultGroups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultGroups` to be an array in the JSON string but got `%s`", jsonObj.get("defaultGroups").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("requiredCredentials") != null && !jsonObj.get("requiredCredentials").isJsonNull() && !jsonObj.get("requiredCredentials").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `requiredCredentials` to be an array in the JSON string but got `%s`", jsonObj.get("requiredCredentials").toString()));
      }
      if ((jsonObj.get("passwordPolicy") != null && !jsonObj.get("passwordPolicy").isJsonNull()) && !jsonObj.get("passwordPolicy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `passwordPolicy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("passwordPolicy").toString()));
      }
      if ((jsonObj.get("otpPolicyType") != null && !jsonObj.get("otpPolicyType").isJsonNull()) && !jsonObj.get("otpPolicyType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otpPolicyType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otpPolicyType").toString()));
      }
      if ((jsonObj.get("otpPolicyAlgorithm") != null && !jsonObj.get("otpPolicyAlgorithm").isJsonNull()) && !jsonObj.get("otpPolicyAlgorithm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otpPolicyAlgorithm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otpPolicyAlgorithm").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("otpSupportedApplications") != null && !jsonObj.get("otpSupportedApplications").isJsonNull() && !jsonObj.get("otpSupportedApplications").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `otpSupportedApplications` to be an array in the JSON string but got `%s`", jsonObj.get("otpSupportedApplications").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyRpEntityName") != null && !jsonObj.get("webAuthnPolicyRpEntityName").isJsonNull()) && !jsonObj.get("webAuthnPolicyRpEntityName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyRpEntityName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyRpEntityName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("webAuthnPolicySignatureAlgorithms") != null && !jsonObj.get("webAuthnPolicySignatureAlgorithms").isJsonNull() && !jsonObj.get("webAuthnPolicySignatureAlgorithms").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicySignatureAlgorithms` to be an array in the JSON string but got `%s`", jsonObj.get("webAuthnPolicySignatureAlgorithms").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyRpId") != null && !jsonObj.get("webAuthnPolicyRpId").isJsonNull()) && !jsonObj.get("webAuthnPolicyRpId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyRpId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyRpId").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyAttestationConveyancePreference") != null && !jsonObj.get("webAuthnPolicyAttestationConveyancePreference").isJsonNull()) && !jsonObj.get("webAuthnPolicyAttestationConveyancePreference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyAttestationConveyancePreference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyAttestationConveyancePreference").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyAuthenticatorAttachment") != null && !jsonObj.get("webAuthnPolicyAuthenticatorAttachment").isJsonNull()) && !jsonObj.get("webAuthnPolicyAuthenticatorAttachment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyAuthenticatorAttachment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyAuthenticatorAttachment").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyRequireResidentKey") != null && !jsonObj.get("webAuthnPolicyRequireResidentKey").isJsonNull()) && !jsonObj.get("webAuthnPolicyRequireResidentKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyRequireResidentKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyRequireResidentKey").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyUserVerificationRequirement") != null && !jsonObj.get("webAuthnPolicyUserVerificationRequirement").isJsonNull()) && !jsonObj.get("webAuthnPolicyUserVerificationRequirement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyUserVerificationRequirement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyUserVerificationRequirement").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("webAuthnPolicyAcceptableAaguids") != null && !jsonObj.get("webAuthnPolicyAcceptableAaguids").isJsonNull() && !jsonObj.get("webAuthnPolicyAcceptableAaguids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyAcceptableAaguids` to be an array in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyAcceptableAaguids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("webAuthnPolicyExtraOrigins") != null && !jsonObj.get("webAuthnPolicyExtraOrigins").isJsonNull() && !jsonObj.get("webAuthnPolicyExtraOrigins").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyExtraOrigins` to be an array in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyExtraOrigins").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyPasswordlessRpEntityName") != null && !jsonObj.get("webAuthnPolicyPasswordlessRpEntityName").isJsonNull()) && !jsonObj.get("webAuthnPolicyPasswordlessRpEntityName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyPasswordlessRpEntityName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyPasswordlessRpEntityName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("webAuthnPolicyPasswordlessSignatureAlgorithms") != null && !jsonObj.get("webAuthnPolicyPasswordlessSignatureAlgorithms").isJsonNull() && !jsonObj.get("webAuthnPolicyPasswordlessSignatureAlgorithms").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyPasswordlessSignatureAlgorithms` to be an array in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyPasswordlessSignatureAlgorithms").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyPasswordlessRpId") != null && !jsonObj.get("webAuthnPolicyPasswordlessRpId").isJsonNull()) && !jsonObj.get("webAuthnPolicyPasswordlessRpId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyPasswordlessRpId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyPasswordlessRpId").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyPasswordlessAttestationConveyancePreference") != null && !jsonObj.get("webAuthnPolicyPasswordlessAttestationConveyancePreference").isJsonNull()) && !jsonObj.get("webAuthnPolicyPasswordlessAttestationConveyancePreference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyPasswordlessAttestationConveyancePreference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyPasswordlessAttestationConveyancePreference").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyPasswordlessAuthenticatorAttachment") != null && !jsonObj.get("webAuthnPolicyPasswordlessAuthenticatorAttachment").isJsonNull()) && !jsonObj.get("webAuthnPolicyPasswordlessAuthenticatorAttachment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyPasswordlessAuthenticatorAttachment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyPasswordlessAuthenticatorAttachment").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyPasswordlessRequireResidentKey") != null && !jsonObj.get("webAuthnPolicyPasswordlessRequireResidentKey").isJsonNull()) && !jsonObj.get("webAuthnPolicyPasswordlessRequireResidentKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyPasswordlessRequireResidentKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyPasswordlessRequireResidentKey").toString()));
      }
      if ((jsonObj.get("webAuthnPolicyPasswordlessUserVerificationRequirement") != null && !jsonObj.get("webAuthnPolicyPasswordlessUserVerificationRequirement").isJsonNull()) && !jsonObj.get("webAuthnPolicyPasswordlessUserVerificationRequirement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyPasswordlessUserVerificationRequirement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyPasswordlessUserVerificationRequirement").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("webAuthnPolicyPasswordlessAcceptableAaguids") != null && !jsonObj.get("webAuthnPolicyPasswordlessAcceptableAaguids").isJsonNull() && !jsonObj.get("webAuthnPolicyPasswordlessAcceptableAaguids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyPasswordlessAcceptableAaguids` to be an array in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyPasswordlessAcceptableAaguids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("webAuthnPolicyPasswordlessExtraOrigins") != null && !jsonObj.get("webAuthnPolicyPasswordlessExtraOrigins").isJsonNull() && !jsonObj.get("webAuthnPolicyPasswordlessExtraOrigins").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `webAuthnPolicyPasswordlessExtraOrigins` to be an array in the JSON string but got `%s`", jsonObj.get("webAuthnPolicyPasswordlessExtraOrigins").toString()));
      }
      // validate the optional field `clientProfiles`
      if (jsonObj.get("clientProfiles") != null && !jsonObj.get("clientProfiles").isJsonNull()) {
        ClientProfilesRepresentation.validateJsonElement(jsonObj.get("clientProfiles"));
      }
      // validate the optional field `clientPolicies`
      if (jsonObj.get("clientPolicies") != null && !jsonObj.get("clientPolicies").isJsonNull()) {
        ClientPoliciesRepresentation.validateJsonElement(jsonObj.get("clientPolicies"));
      }
      if (jsonObj.get("users") != null && !jsonObj.get("users").isJsonNull()) {
        JsonArray jsonArrayusers = jsonObj.getAsJsonArray("users");
        if (jsonArrayusers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("users").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `users` to be an array in the JSON string but got `%s`", jsonObj.get("users").toString()));
          }

          // validate the optional field `users` (array)
          for (int i = 0; i < jsonArrayusers.size(); i++) {
            UserRepresentation.validateJsonElement(jsonArrayusers.get(i));
          };
        }
      }
      if (jsonObj.get("federatedUsers") != null && !jsonObj.get("federatedUsers").isJsonNull()) {
        JsonArray jsonArrayfederatedUsers = jsonObj.getAsJsonArray("federatedUsers");
        if (jsonArrayfederatedUsers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("federatedUsers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `federatedUsers` to be an array in the JSON string but got `%s`", jsonObj.get("federatedUsers").toString()));
          }

          // validate the optional field `federatedUsers` (array)
          for (int i = 0; i < jsonArrayfederatedUsers.size(); i++) {
            UserRepresentation.validateJsonElement(jsonArrayfederatedUsers.get(i));
          };
        }
      }
      if (jsonObj.get("scopeMappings") != null && !jsonObj.get("scopeMappings").isJsonNull()) {
        JsonArray jsonArrayscopeMappings = jsonObj.getAsJsonArray("scopeMappings");
        if (jsonArrayscopeMappings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("scopeMappings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `scopeMappings` to be an array in the JSON string but got `%s`", jsonObj.get("scopeMappings").toString()));
          }

          // validate the optional field `scopeMappings` (array)
          for (int i = 0; i < jsonArrayscopeMappings.size(); i++) {
            ScopeMappingRepresentation.validateJsonElement(jsonArrayscopeMappings.get(i));
          };
        }
      }
      if (jsonObj.get("clients") != null && !jsonObj.get("clients").isJsonNull()) {
        JsonArray jsonArrayclients = jsonObj.getAsJsonArray("clients");
        if (jsonArrayclients != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clients").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clients` to be an array in the JSON string but got `%s`", jsonObj.get("clients").toString()));
          }

          // validate the optional field `clients` (array)
          for (int i = 0; i < jsonArrayclients.size(); i++) {
            ClientRepresentation.validateJsonElement(jsonArrayclients.get(i));
          };
        }
      }
      if (jsonObj.get("clientScopes") != null && !jsonObj.get("clientScopes").isJsonNull()) {
        JsonArray jsonArrayclientScopes = jsonObj.getAsJsonArray("clientScopes");
        if (jsonArrayclientScopes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clientScopes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clientScopes` to be an array in the JSON string but got `%s`", jsonObj.get("clientScopes").toString()));
          }

          // validate the optional field `clientScopes` (array)
          for (int i = 0; i < jsonArrayclientScopes.size(); i++) {
            ClientScopeRepresentation.validateJsonElement(jsonArrayclientScopes.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("defaultDefaultClientScopes") != null && !jsonObj.get("defaultDefaultClientScopes").isJsonNull() && !jsonObj.get("defaultDefaultClientScopes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultDefaultClientScopes` to be an array in the JSON string but got `%s`", jsonObj.get("defaultDefaultClientScopes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("defaultOptionalClientScopes") != null && !jsonObj.get("defaultOptionalClientScopes").isJsonNull() && !jsonObj.get("defaultOptionalClientScopes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultOptionalClientScopes` to be an array in the JSON string but got `%s`", jsonObj.get("defaultOptionalClientScopes").toString()));
      }
      if (jsonObj.get("userFederationProviders") != null && !jsonObj.get("userFederationProviders").isJsonNull()) {
        JsonArray jsonArrayuserFederationProviders = jsonObj.getAsJsonArray("userFederationProviders");
        if (jsonArrayuserFederationProviders != null) {
          // ensure the json data is an array
          if (!jsonObj.get("userFederationProviders").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `userFederationProviders` to be an array in the JSON string but got `%s`", jsonObj.get("userFederationProviders").toString()));
          }

          // validate the optional field `userFederationProviders` (array)
          for (int i = 0; i < jsonArrayuserFederationProviders.size(); i++) {
            UserFederationProviderRepresentation.validateJsonElement(jsonArrayuserFederationProviders.get(i));
          };
        }
      }
      if (jsonObj.get("userFederationMappers") != null && !jsonObj.get("userFederationMappers").isJsonNull()) {
        JsonArray jsonArrayuserFederationMappers = jsonObj.getAsJsonArray("userFederationMappers");
        if (jsonArrayuserFederationMappers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("userFederationMappers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `userFederationMappers` to be an array in the JSON string but got `%s`", jsonObj.get("userFederationMappers").toString()));
          }

          // validate the optional field `userFederationMappers` (array)
          for (int i = 0; i < jsonArrayuserFederationMappers.size(); i++) {
            UserFederationMapperRepresentation.validateJsonElement(jsonArrayuserFederationMappers.get(i));
          };
        }
      }
      if ((jsonObj.get("loginTheme") != null && !jsonObj.get("loginTheme").isJsonNull()) && !jsonObj.get("loginTheme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `loginTheme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("loginTheme").toString()));
      }
      if ((jsonObj.get("accountTheme") != null && !jsonObj.get("accountTheme").isJsonNull()) && !jsonObj.get("accountTheme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountTheme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountTheme").toString()));
      }
      if ((jsonObj.get("adminTheme") != null && !jsonObj.get("adminTheme").isJsonNull()) && !jsonObj.get("adminTheme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `adminTheme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("adminTheme").toString()));
      }
      if ((jsonObj.get("emailTheme") != null && !jsonObj.get("emailTheme").isJsonNull()) && !jsonObj.get("emailTheme").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailTheme` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailTheme").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("eventsListeners") != null && !jsonObj.get("eventsListeners").isJsonNull() && !jsonObj.get("eventsListeners").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventsListeners` to be an array in the JSON string but got `%s`", jsonObj.get("eventsListeners").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("enabledEventTypes") != null && !jsonObj.get("enabledEventTypes").isJsonNull() && !jsonObj.get("enabledEventTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `enabledEventTypes` to be an array in the JSON string but got `%s`", jsonObj.get("enabledEventTypes").toString()));
      }
      if (jsonObj.get("identityProviders") != null && !jsonObj.get("identityProviders").isJsonNull()) {
        JsonArray jsonArrayidentityProviders = jsonObj.getAsJsonArray("identityProviders");
        if (jsonArrayidentityProviders != null) {
          // ensure the json data is an array
          if (!jsonObj.get("identityProviders").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `identityProviders` to be an array in the JSON string but got `%s`", jsonObj.get("identityProviders").toString()));
          }

          // validate the optional field `identityProviders` (array)
          for (int i = 0; i < jsonArrayidentityProviders.size(); i++) {
            IdentityProviderRepresentation.validateJsonElement(jsonArrayidentityProviders.get(i));
          };
        }
      }
      if (jsonObj.get("identityProviderMappers") != null && !jsonObj.get("identityProviderMappers").isJsonNull()) {
        JsonArray jsonArrayidentityProviderMappers = jsonObj.getAsJsonArray("identityProviderMappers");
        if (jsonArrayidentityProviderMappers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("identityProviderMappers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `identityProviderMappers` to be an array in the JSON string but got `%s`", jsonObj.get("identityProviderMappers").toString()));
          }

          // validate the optional field `identityProviderMappers` (array)
          for (int i = 0; i < jsonArrayidentityProviderMappers.size(); i++) {
            IdentityProviderMapperRepresentation.validateJsonElement(jsonArrayidentityProviderMappers.get(i));
          };
        }
      }
      if (jsonObj.get("protocolMappers") != null && !jsonObj.get("protocolMappers").isJsonNull()) {
        JsonArray jsonArrayprotocolMappers = jsonObj.getAsJsonArray("protocolMappers");
        if (jsonArrayprotocolMappers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("protocolMappers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `protocolMappers` to be an array in the JSON string but got `%s`", jsonObj.get("protocolMappers").toString()));
          }

          // validate the optional field `protocolMappers` (array)
          for (int i = 0; i < jsonArrayprotocolMappers.size(); i++) {
            ProtocolMapperRepresentation.validateJsonElement(jsonArrayprotocolMappers.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("supportedLocales") != null && !jsonObj.get("supportedLocales").isJsonNull() && !jsonObj.get("supportedLocales").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `supportedLocales` to be an array in the JSON string but got `%s`", jsonObj.get("supportedLocales").toString()));
      }
      if ((jsonObj.get("defaultLocale") != null && !jsonObj.get("defaultLocale").isJsonNull()) && !jsonObj.get("defaultLocale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultLocale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultLocale").toString()));
      }
      if (jsonObj.get("authenticationFlows") != null && !jsonObj.get("authenticationFlows").isJsonNull()) {
        JsonArray jsonArrayauthenticationFlows = jsonObj.getAsJsonArray("authenticationFlows");
        if (jsonArrayauthenticationFlows != null) {
          // ensure the json data is an array
          if (!jsonObj.get("authenticationFlows").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `authenticationFlows` to be an array in the JSON string but got `%s`", jsonObj.get("authenticationFlows").toString()));
          }

          // validate the optional field `authenticationFlows` (array)
          for (int i = 0; i < jsonArrayauthenticationFlows.size(); i++) {
            AuthenticationFlowRepresentation.validateJsonElement(jsonArrayauthenticationFlows.get(i));
          };
        }
      }
      if (jsonObj.get("authenticatorConfig") != null && !jsonObj.get("authenticatorConfig").isJsonNull()) {
        JsonArray jsonArrayauthenticatorConfig = jsonObj.getAsJsonArray("authenticatorConfig");
        if (jsonArrayauthenticatorConfig != null) {
          // ensure the json data is an array
          if (!jsonObj.get("authenticatorConfig").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `authenticatorConfig` to be an array in the JSON string but got `%s`", jsonObj.get("authenticatorConfig").toString()));
          }

          // validate the optional field `authenticatorConfig` (array)
          for (int i = 0; i < jsonArrayauthenticatorConfig.size(); i++) {
            AuthenticatorConfigRepresentation.validateJsonElement(jsonArrayauthenticatorConfig.get(i));
          };
        }
      }
      if (jsonObj.get("requiredActions") != null && !jsonObj.get("requiredActions").isJsonNull()) {
        JsonArray jsonArrayrequiredActions = jsonObj.getAsJsonArray("requiredActions");
        if (jsonArrayrequiredActions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("requiredActions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `requiredActions` to be an array in the JSON string but got `%s`", jsonObj.get("requiredActions").toString()));
          }

          // validate the optional field `requiredActions` (array)
          for (int i = 0; i < jsonArrayrequiredActions.size(); i++) {
            RequiredActionProviderRepresentation.validateJsonElement(jsonArrayrequiredActions.get(i));
          };
        }
      }
      if ((jsonObj.get("browserFlow") != null && !jsonObj.get("browserFlow").isJsonNull()) && !jsonObj.get("browserFlow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `browserFlow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("browserFlow").toString()));
      }
      if ((jsonObj.get("registrationFlow") != null && !jsonObj.get("registrationFlow").isJsonNull()) && !jsonObj.get("registrationFlow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `registrationFlow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("registrationFlow").toString()));
      }
      if ((jsonObj.get("directGrantFlow") != null && !jsonObj.get("directGrantFlow").isJsonNull()) && !jsonObj.get("directGrantFlow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `directGrantFlow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("directGrantFlow").toString()));
      }
      if ((jsonObj.get("resetCredentialsFlow") != null && !jsonObj.get("resetCredentialsFlow").isJsonNull()) && !jsonObj.get("resetCredentialsFlow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resetCredentialsFlow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resetCredentialsFlow").toString()));
      }
      if ((jsonObj.get("clientAuthenticationFlow") != null && !jsonObj.get("clientAuthenticationFlow").isJsonNull()) && !jsonObj.get("clientAuthenticationFlow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientAuthenticationFlow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientAuthenticationFlow").toString()));
      }
      if ((jsonObj.get("dockerAuthenticationFlow") != null && !jsonObj.get("dockerAuthenticationFlow").isJsonNull()) && !jsonObj.get("dockerAuthenticationFlow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dockerAuthenticationFlow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dockerAuthenticationFlow").toString()));
      }
      if ((jsonObj.get("firstBrokerLoginFlow") != null && !jsonObj.get("firstBrokerLoginFlow").isJsonNull()) && !jsonObj.get("firstBrokerLoginFlow").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstBrokerLoginFlow` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstBrokerLoginFlow").toString()));
      }
      if ((jsonObj.get("keycloakVersion") != null && !jsonObj.get("keycloakVersion").isJsonNull()) && !jsonObj.get("keycloakVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `keycloakVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("keycloakVersion").toString()));
      }
      if (jsonObj.get("organizations") != null && !jsonObj.get("organizations").isJsonNull()) {
        JsonArray jsonArrayorganizations = jsonObj.getAsJsonArray("organizations");
        if (jsonArrayorganizations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("organizations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `organizations` to be an array in the JSON string but got `%s`", jsonObj.get("organizations").toString()));
          }

          // validate the optional field `organizations` (array)
          for (int i = 0; i < jsonArrayorganizations.size(); i++) {
            OrganizationRepresentation.validateJsonElement(jsonArrayorganizations.get(i));
          };
        }
      }
      if (jsonObj.get("applications") != null && !jsonObj.get("applications").isJsonNull()) {
        JsonArray jsonArrayapplications = jsonObj.getAsJsonArray("applications");
        if (jsonArrayapplications != null) {
          // ensure the json data is an array
          if (!jsonObj.get("applications").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `applications` to be an array in the JSON string but got `%s`", jsonObj.get("applications").toString()));
          }

          // validate the optional field `applications` (array)
          for (int i = 0; i < jsonArrayapplications.size(); i++) {
            ApplicationRepresentation.validateJsonElement(jsonArrayapplications.get(i));
          };
        }
      }
      if (jsonObj.get("oauthClients") != null && !jsonObj.get("oauthClients").isJsonNull()) {
        JsonArray jsonArrayoauthClients = jsonObj.getAsJsonArray("oauthClients");
        if (jsonArrayoauthClients != null) {
          // ensure the json data is an array
          if (!jsonObj.get("oauthClients").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `oauthClients` to be an array in the JSON string but got `%s`", jsonObj.get("oauthClients").toString()));
          }

          // validate the optional field `oauthClients` (array)
          for (int i = 0; i < jsonArrayoauthClients.size(); i++) {
            OAuthClientRepresentation.validateJsonElement(jsonArrayoauthClients.get(i));
          };
        }
      }
      if (jsonObj.get("clientTemplates") != null && !jsonObj.get("clientTemplates").isJsonNull()) {
        JsonArray jsonArrayclientTemplates = jsonObj.getAsJsonArray("clientTemplates");
        if (jsonArrayclientTemplates != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clientTemplates").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clientTemplates` to be an array in the JSON string but got `%s`", jsonObj.get("clientTemplates").toString()));
          }

          // validate the optional field `clientTemplates` (array)
          for (int i = 0; i < jsonArrayclientTemplates.size(); i++) {
            ClientTemplateRepresentation.validateJsonElement(jsonArrayclientTemplates.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RealmRepresentation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RealmRepresentation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RealmRepresentation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RealmRepresentation.class));

       return (TypeAdapter<T>) new TypeAdapter<RealmRepresentation>() {
           @Override
           public void write(JsonWriter out, RealmRepresentation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RealmRepresentation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RealmRepresentation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RealmRepresentation
   * @throws IOException if the JSON string is invalid with respect to RealmRepresentation
   */
  public static RealmRepresentation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RealmRepresentation.class);
  }

  /**
   * Convert an instance of RealmRepresentation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

