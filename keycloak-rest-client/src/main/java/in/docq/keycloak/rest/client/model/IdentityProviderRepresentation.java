/*
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.keycloak.rest.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.util.HashSet;
import java.util.Set;

import in.docq.keycloak.rest.client.JSON;

/**
 * IdentityProviderRepresentation
 */
@javax.annotation.Generated(value = "in.docq.keycloak.rest.codegen.languages.JavaClientCodegen", date = "2025-02-08T16:05:02.219423+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class IdentityProviderRepresentation {
  public static final String SERIALIZED_NAME_ALIAS = "alias";
  @SerializedName(SERIALIZED_NAME_ALIAS)
  @javax.annotation.Nullable
  private String alias;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  @javax.annotation.Nullable
  private String displayName;

  public static final String SERIALIZED_NAME_INTERNAL_ID = "internalId";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ID)
  @javax.annotation.Nullable
  private String internalId;

  public static final String SERIALIZED_NAME_PROVIDER_ID = "providerId";
  @SerializedName(SERIALIZED_NAME_PROVIDER_ID)
  @javax.annotation.Nullable
  private String providerId;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  @javax.annotation.Nullable
  private Boolean enabled;

  public static final String SERIALIZED_NAME_UPDATE_PROFILE_FIRST_LOGIN_MODE = "updateProfileFirstLoginMode";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_UPDATE_PROFILE_FIRST_LOGIN_MODE)
  @javax.annotation.Nullable
  private String updateProfileFirstLoginMode;

  public static final String SERIALIZED_NAME_TRUST_EMAIL = "trustEmail";
  @SerializedName(SERIALIZED_NAME_TRUST_EMAIL)
  @javax.annotation.Nullable
  private Boolean trustEmail;

  public static final String SERIALIZED_NAME_STORE_TOKEN = "storeToken";
  @SerializedName(SERIALIZED_NAME_STORE_TOKEN)
  @javax.annotation.Nullable
  private Boolean storeToken;

  public static final String SERIALIZED_NAME_ADD_READ_TOKEN_ROLE_ON_CREATE = "addReadTokenRoleOnCreate";
  @SerializedName(SERIALIZED_NAME_ADD_READ_TOKEN_ROLE_ON_CREATE)
  @javax.annotation.Nullable
  private Boolean addReadTokenRoleOnCreate;

  public static final String SERIALIZED_NAME_AUTHENTICATE_BY_DEFAULT = "authenticateByDefault";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATE_BY_DEFAULT)
  @javax.annotation.Nullable
  private Boolean authenticateByDefault;

  public static final String SERIALIZED_NAME_LINK_ONLY = "linkOnly";
  @SerializedName(SERIALIZED_NAME_LINK_ONLY)
  @javax.annotation.Nullable
  private Boolean linkOnly;

  public static final String SERIALIZED_NAME_HIDE_ON_LOGIN = "hideOnLogin";
  @SerializedName(SERIALIZED_NAME_HIDE_ON_LOGIN)
  @javax.annotation.Nullable
  private Boolean hideOnLogin;

  public static final String SERIALIZED_NAME_FIRST_BROKER_LOGIN_FLOW_ALIAS = "firstBrokerLoginFlowAlias";
  @SerializedName(SERIALIZED_NAME_FIRST_BROKER_LOGIN_FLOW_ALIAS)
  @javax.annotation.Nullable
  private String firstBrokerLoginFlowAlias;

  public static final String SERIALIZED_NAME_POST_BROKER_LOGIN_FLOW_ALIAS = "postBrokerLoginFlowAlias";
  @SerializedName(SERIALIZED_NAME_POST_BROKER_LOGIN_FLOW_ALIAS)
  @javax.annotation.Nullable
  private String postBrokerLoginFlowAlias;

  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organizationId";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  @javax.annotation.Nullable
  private String organizationId;

  public static final String SERIALIZED_NAME_CONFIG = "config";
  @SerializedName(SERIALIZED_NAME_CONFIG)
  @javax.annotation.Nullable
  private Map<String, String> config = new HashMap<>();

  public static final String SERIALIZED_NAME_UPDATE_PROFILE_FIRST_LOGIN = "updateProfileFirstLogin";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_UPDATE_PROFILE_FIRST_LOGIN)
  @javax.annotation.Nullable
  private Boolean updateProfileFirstLogin;

  public IdentityProviderRepresentation() {
  }

  public IdentityProviderRepresentation alias(@javax.annotation.Nullable String alias) {
    this.alias = alias;
    return this;
  }

  /**
   * Get alias
   * @return alias
   */
  @javax.annotation.Nullable
  public String getAlias() {
    return alias;
  }

  public void setAlias(@javax.annotation.Nullable String alias) {
    this.alias = alias;
  }


  public IdentityProviderRepresentation displayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(@javax.annotation.Nullable String displayName) {
    this.displayName = displayName;
  }


  public IdentityProviderRepresentation internalId(@javax.annotation.Nullable String internalId) {
    this.internalId = internalId;
    return this;
  }

  /**
   * Get internalId
   * @return internalId
   */
  @javax.annotation.Nullable
  public String getInternalId() {
    return internalId;
  }

  public void setInternalId(@javax.annotation.Nullable String internalId) {
    this.internalId = internalId;
  }


  public IdentityProviderRepresentation providerId(@javax.annotation.Nullable String providerId) {
    this.providerId = providerId;
    return this;
  }

  /**
   * Get providerId
   * @return providerId
   */
  @javax.annotation.Nullable
  public String getProviderId() {
    return providerId;
  }

  public void setProviderId(@javax.annotation.Nullable String providerId) {
    this.providerId = providerId;
  }


  public IdentityProviderRepresentation enabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }


  @Deprecated
  public IdentityProviderRepresentation updateProfileFirstLoginMode(@javax.annotation.Nullable String updateProfileFirstLoginMode) {
    this.updateProfileFirstLoginMode = updateProfileFirstLoginMode;
    return this;
  }

  /**
   * Get updateProfileFirstLoginMode
   * @return updateProfileFirstLoginMode
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getUpdateProfileFirstLoginMode() {
    return updateProfileFirstLoginMode;
  }

  @Deprecated
  public void setUpdateProfileFirstLoginMode(@javax.annotation.Nullable String updateProfileFirstLoginMode) {
    this.updateProfileFirstLoginMode = updateProfileFirstLoginMode;
  }


  public IdentityProviderRepresentation trustEmail(@javax.annotation.Nullable Boolean trustEmail) {
    this.trustEmail = trustEmail;
    return this;
  }

  /**
   * Get trustEmail
   * @return trustEmail
   */
  @javax.annotation.Nullable
  public Boolean getTrustEmail() {
    return trustEmail;
  }

  public void setTrustEmail(@javax.annotation.Nullable Boolean trustEmail) {
    this.trustEmail = trustEmail;
  }


  public IdentityProviderRepresentation storeToken(@javax.annotation.Nullable Boolean storeToken) {
    this.storeToken = storeToken;
    return this;
  }

  /**
   * Get storeToken
   * @return storeToken
   */
  @javax.annotation.Nullable
  public Boolean getStoreToken() {
    return storeToken;
  }

  public void setStoreToken(@javax.annotation.Nullable Boolean storeToken) {
    this.storeToken = storeToken;
  }


  public IdentityProviderRepresentation addReadTokenRoleOnCreate(@javax.annotation.Nullable Boolean addReadTokenRoleOnCreate) {
    this.addReadTokenRoleOnCreate = addReadTokenRoleOnCreate;
    return this;
  }

  /**
   * Get addReadTokenRoleOnCreate
   * @return addReadTokenRoleOnCreate
   */
  @javax.annotation.Nullable
  public Boolean getAddReadTokenRoleOnCreate() {
    return addReadTokenRoleOnCreate;
  }

  public void setAddReadTokenRoleOnCreate(@javax.annotation.Nullable Boolean addReadTokenRoleOnCreate) {
    this.addReadTokenRoleOnCreate = addReadTokenRoleOnCreate;
  }


  public IdentityProviderRepresentation authenticateByDefault(@javax.annotation.Nullable Boolean authenticateByDefault) {
    this.authenticateByDefault = authenticateByDefault;
    return this;
  }

  /**
   * Get authenticateByDefault
   * @return authenticateByDefault
   */
  @javax.annotation.Nullable
  public Boolean getAuthenticateByDefault() {
    return authenticateByDefault;
  }

  public void setAuthenticateByDefault(@javax.annotation.Nullable Boolean authenticateByDefault) {
    this.authenticateByDefault = authenticateByDefault;
  }


  public IdentityProviderRepresentation linkOnly(@javax.annotation.Nullable Boolean linkOnly) {
    this.linkOnly = linkOnly;
    return this;
  }

  /**
   * Get linkOnly
   * @return linkOnly
   */
  @javax.annotation.Nullable
  public Boolean getLinkOnly() {
    return linkOnly;
  }

  public void setLinkOnly(@javax.annotation.Nullable Boolean linkOnly) {
    this.linkOnly = linkOnly;
  }


  public IdentityProviderRepresentation hideOnLogin(@javax.annotation.Nullable Boolean hideOnLogin) {
    this.hideOnLogin = hideOnLogin;
    return this;
  }

  /**
   * Get hideOnLogin
   * @return hideOnLogin
   */
  @javax.annotation.Nullable
  public Boolean getHideOnLogin() {
    return hideOnLogin;
  }

  public void setHideOnLogin(@javax.annotation.Nullable Boolean hideOnLogin) {
    this.hideOnLogin = hideOnLogin;
  }


  public IdentityProviderRepresentation firstBrokerLoginFlowAlias(@javax.annotation.Nullable String firstBrokerLoginFlowAlias) {
    this.firstBrokerLoginFlowAlias = firstBrokerLoginFlowAlias;
    return this;
  }

  /**
   * Get firstBrokerLoginFlowAlias
   * @return firstBrokerLoginFlowAlias
   */
  @javax.annotation.Nullable
  public String getFirstBrokerLoginFlowAlias() {
    return firstBrokerLoginFlowAlias;
  }

  public void setFirstBrokerLoginFlowAlias(@javax.annotation.Nullable String firstBrokerLoginFlowAlias) {
    this.firstBrokerLoginFlowAlias = firstBrokerLoginFlowAlias;
  }


  public IdentityProviderRepresentation postBrokerLoginFlowAlias(@javax.annotation.Nullable String postBrokerLoginFlowAlias) {
    this.postBrokerLoginFlowAlias = postBrokerLoginFlowAlias;
    return this;
  }

  /**
   * Get postBrokerLoginFlowAlias
   * @return postBrokerLoginFlowAlias
   */
  @javax.annotation.Nullable
  public String getPostBrokerLoginFlowAlias() {
    return postBrokerLoginFlowAlias;
  }

  public void setPostBrokerLoginFlowAlias(@javax.annotation.Nullable String postBrokerLoginFlowAlias) {
    this.postBrokerLoginFlowAlias = postBrokerLoginFlowAlias;
  }


  public IdentityProviderRepresentation organizationId(@javax.annotation.Nullable String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Get organizationId
   * @return organizationId
   */
  @javax.annotation.Nullable
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(@javax.annotation.Nullable String organizationId) {
    this.organizationId = organizationId;
  }


  public IdentityProviderRepresentation config(@javax.annotation.Nullable Map<String, String> config) {
    this.config = config;
    return this;
  }

  public IdentityProviderRepresentation putConfigItem(String key, String configItem) {
    if (this.config == null) {
      this.config = new HashMap<>();
    }
    this.config.put(key, configItem);
    return this;
  }

  /**
   * Get config
   * @return config
   */
  @javax.annotation.Nullable
  public Map<String, String> getConfig() {
    return config;
  }

  public void setConfig(@javax.annotation.Nullable Map<String, String> config) {
    this.config = config;
  }


  @Deprecated
  public IdentityProviderRepresentation updateProfileFirstLogin(@javax.annotation.Nullable Boolean updateProfileFirstLogin) {
    this.updateProfileFirstLogin = updateProfileFirstLogin;
    return this;
  }

  /**
   * Get updateProfileFirstLogin
   * @return updateProfileFirstLogin
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getUpdateProfileFirstLogin() {
    return updateProfileFirstLogin;
  }

  @Deprecated
  public void setUpdateProfileFirstLogin(@javax.annotation.Nullable Boolean updateProfileFirstLogin) {
    this.updateProfileFirstLogin = updateProfileFirstLogin;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdentityProviderRepresentation identityProviderRepresentation = (IdentityProviderRepresentation) o;
    return Objects.equals(this.alias, identityProviderRepresentation.alias) &&
        Objects.equals(this.displayName, identityProviderRepresentation.displayName) &&
        Objects.equals(this.internalId, identityProviderRepresentation.internalId) &&
        Objects.equals(this.providerId, identityProviderRepresentation.providerId) &&
        Objects.equals(this.enabled, identityProviderRepresentation.enabled) &&
        Objects.equals(this.updateProfileFirstLoginMode, identityProviderRepresentation.updateProfileFirstLoginMode) &&
        Objects.equals(this.trustEmail, identityProviderRepresentation.trustEmail) &&
        Objects.equals(this.storeToken, identityProviderRepresentation.storeToken) &&
        Objects.equals(this.addReadTokenRoleOnCreate, identityProviderRepresentation.addReadTokenRoleOnCreate) &&
        Objects.equals(this.authenticateByDefault, identityProviderRepresentation.authenticateByDefault) &&
        Objects.equals(this.linkOnly, identityProviderRepresentation.linkOnly) &&
        Objects.equals(this.hideOnLogin, identityProviderRepresentation.hideOnLogin) &&
        Objects.equals(this.firstBrokerLoginFlowAlias, identityProviderRepresentation.firstBrokerLoginFlowAlias) &&
        Objects.equals(this.postBrokerLoginFlowAlias, identityProviderRepresentation.postBrokerLoginFlowAlias) &&
        Objects.equals(this.organizationId, identityProviderRepresentation.organizationId) &&
        Objects.equals(this.config, identityProviderRepresentation.config) &&
        Objects.equals(this.updateProfileFirstLogin, identityProviderRepresentation.updateProfileFirstLogin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alias, displayName, internalId, providerId, enabled, updateProfileFirstLoginMode, trustEmail, storeToken, addReadTokenRoleOnCreate, authenticateByDefault, linkOnly, hideOnLogin, firstBrokerLoginFlowAlias, postBrokerLoginFlowAlias, organizationId, config, updateProfileFirstLogin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdentityProviderRepresentation {\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    updateProfileFirstLoginMode: ").append(toIndentedString(updateProfileFirstLoginMode)).append("\n");
    sb.append("    trustEmail: ").append(toIndentedString(trustEmail)).append("\n");
    sb.append("    storeToken: ").append(toIndentedString(storeToken)).append("\n");
    sb.append("    addReadTokenRoleOnCreate: ").append(toIndentedString(addReadTokenRoleOnCreate)).append("\n");
    sb.append("    authenticateByDefault: ").append(toIndentedString(authenticateByDefault)).append("\n");
    sb.append("    linkOnly: ").append(toIndentedString(linkOnly)).append("\n");
    sb.append("    hideOnLogin: ").append(toIndentedString(hideOnLogin)).append("\n");
    sb.append("    firstBrokerLoginFlowAlias: ").append(toIndentedString(firstBrokerLoginFlowAlias)).append("\n");
    sb.append("    postBrokerLoginFlowAlias: ").append(toIndentedString(postBrokerLoginFlowAlias)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    updateProfileFirstLogin: ").append(toIndentedString(updateProfileFirstLogin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alias");
    openapiFields.add("displayName");
    openapiFields.add("internalId");
    openapiFields.add("providerId");
    openapiFields.add("enabled");
    openapiFields.add("updateProfileFirstLoginMode");
    openapiFields.add("trustEmail");
    openapiFields.add("storeToken");
    openapiFields.add("addReadTokenRoleOnCreate");
    openapiFields.add("authenticateByDefault");
    openapiFields.add("linkOnly");
    openapiFields.add("hideOnLogin");
    openapiFields.add("firstBrokerLoginFlowAlias");
    openapiFields.add("postBrokerLoginFlowAlias");
    openapiFields.add("organizationId");
    openapiFields.add("config");
    openapiFields.add("updateProfileFirstLogin");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IdentityProviderRepresentation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IdentityProviderRepresentation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IdentityProviderRepresentation is not found in the empty JSON string", IdentityProviderRepresentation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IdentityProviderRepresentation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IdentityProviderRepresentation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("alias") != null && !jsonObj.get("alias").isJsonNull()) && !jsonObj.get("alias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alias").toString()));
      }
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("internalId") != null && !jsonObj.get("internalId").isJsonNull()) && !jsonObj.get("internalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `internalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("internalId").toString()));
      }
      if ((jsonObj.get("providerId") != null && !jsonObj.get("providerId").isJsonNull()) && !jsonObj.get("providerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `providerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("providerId").toString()));
      }
      if ((jsonObj.get("updateProfileFirstLoginMode") != null && !jsonObj.get("updateProfileFirstLoginMode").isJsonNull()) && !jsonObj.get("updateProfileFirstLoginMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updateProfileFirstLoginMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updateProfileFirstLoginMode").toString()));
      }
      if ((jsonObj.get("firstBrokerLoginFlowAlias") != null && !jsonObj.get("firstBrokerLoginFlowAlias").isJsonNull()) && !jsonObj.get("firstBrokerLoginFlowAlias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstBrokerLoginFlowAlias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstBrokerLoginFlowAlias").toString()));
      }
      if ((jsonObj.get("postBrokerLoginFlowAlias") != null && !jsonObj.get("postBrokerLoginFlowAlias").isJsonNull()) && !jsonObj.get("postBrokerLoginFlowAlias").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postBrokerLoginFlowAlias` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postBrokerLoginFlowAlias").toString()));
      }
      if ((jsonObj.get("organizationId") != null && !jsonObj.get("organizationId").isJsonNull()) && !jsonObj.get("organizationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IdentityProviderRepresentation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IdentityProviderRepresentation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IdentityProviderRepresentation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IdentityProviderRepresentation.class));

       return (TypeAdapter<T>) new TypeAdapter<IdentityProviderRepresentation>() {
           @Override
           public void write(JsonWriter out, IdentityProviderRepresentation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IdentityProviderRepresentation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IdentityProviderRepresentation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IdentityProviderRepresentation
   * @throws IOException if the JSON string is invalid with respect to IdentityProviderRepresentation
   */
  public static IdentityProviderRepresentation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IdentityProviderRepresentation.class);
  }

  /**
   * Convert an instance of IdentityProviderRepresentation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

