/*
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.keycloak.rest.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import in.docq.keycloak.rest.client.model.AddressClaimSet;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.util.HashSet;
import java.util.Set;

import in.docq.keycloak.rest.client.JSON;

/**
 * IDToken
 */
@javax.annotation.Generated(value = "in.docq.keycloak.rest.codegen.languages.JavaClientCodegen", date = "2025-02-08T16:05:02.219423+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class IDToken {
  public static final String SERIALIZED_NAME_JTI = "jti";
  @SerializedName(SERIALIZED_NAME_JTI)
  @javax.annotation.Nullable
  private String jti;

  public static final String SERIALIZED_NAME_EXP = "exp";
  @SerializedName(SERIALIZED_NAME_EXP)
  @javax.annotation.Nullable
  private Long exp;

  public static final String SERIALIZED_NAME_NBF = "nbf";
  @SerializedName(SERIALIZED_NAME_NBF)
  @javax.annotation.Nullable
  private Long nbf;

  public static final String SERIALIZED_NAME_IAT = "iat";
  @SerializedName(SERIALIZED_NAME_IAT)
  @javax.annotation.Nullable
  private Long iat;

  public static final String SERIALIZED_NAME_ISS = "iss";
  @SerializedName(SERIALIZED_NAME_ISS)
  @javax.annotation.Nullable
  private String iss;

  public static final String SERIALIZED_NAME_SUB = "sub";
  @SerializedName(SERIALIZED_NAME_SUB)
  @javax.annotation.Nullable
  private String sub;

  public static final String SERIALIZED_NAME_TYP = "typ";
  @SerializedName(SERIALIZED_NAME_TYP)
  @javax.annotation.Nullable
  private String typ;

  public static final String SERIALIZED_NAME_AZP = "azp";
  @SerializedName(SERIALIZED_NAME_AZP)
  @javax.annotation.Nullable
  private String azp;

  public static final String SERIALIZED_NAME_OTHER_CLAIMS = "otherClaims";
  @SerializedName(SERIALIZED_NAME_OTHER_CLAIMS)
  @javax.annotation.Nullable
  private Map<String, Object> otherClaims = new HashMap<>();

  public static final String SERIALIZED_NAME_NONCE = "nonce";
  @SerializedName(SERIALIZED_NAME_NONCE)
  @javax.annotation.Nullable
  private String nonce;

  public static final String SERIALIZED_NAME_AUTH_TIME = "auth_time";
  @SerializedName(SERIALIZED_NAME_AUTH_TIME)
  @javax.annotation.Nullable
  private Long authTime;

  public static final String SERIALIZED_NAME_SID = "sid";
  @SerializedName(SERIALIZED_NAME_SID)
  @javax.annotation.Nullable
  private String sid;

  public static final String SERIALIZED_NAME_AT_HASH = "at_hash";
  @SerializedName(SERIALIZED_NAME_AT_HASH)
  @javax.annotation.Nullable
  private String atHash;

  public static final String SERIALIZED_NAME_C_HASH = "c_hash";
  @SerializedName(SERIALIZED_NAME_C_HASH)
  @javax.annotation.Nullable
  private String cHash;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_GIVEN_NAME = "given_name";
  @SerializedName(SERIALIZED_NAME_GIVEN_NAME)
  @javax.annotation.Nullable
  private String givenName;

  public static final String SERIALIZED_NAME_FAMILY_NAME = "family_name";
  @SerializedName(SERIALIZED_NAME_FAMILY_NAME)
  @javax.annotation.Nullable
  private String familyName;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middle_name";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  @javax.annotation.Nullable
  private String middleName;

  public static final String SERIALIZED_NAME_NICKNAME = "nickname";
  @SerializedName(SERIALIZED_NAME_NICKNAME)
  @javax.annotation.Nullable
  private String nickname;

  public static final String SERIALIZED_NAME_PREFERRED_USERNAME = "preferred_username";
  @SerializedName(SERIALIZED_NAME_PREFERRED_USERNAME)
  @javax.annotation.Nullable
  private String preferredUsername;

  public static final String SERIALIZED_NAME_PROFILE = "profile";
  @SerializedName(SERIALIZED_NAME_PROFILE)
  @javax.annotation.Nullable
  private String profile;

  public static final String SERIALIZED_NAME_PICTURE = "picture";
  @SerializedName(SERIALIZED_NAME_PICTURE)
  @javax.annotation.Nullable
  private String picture;

  public static final String SERIALIZED_NAME_WEBSITE = "website";
  @SerializedName(SERIALIZED_NAME_WEBSITE)
  @javax.annotation.Nullable
  private String website;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nullable
  private String email;

  public static final String SERIALIZED_NAME_EMAIL_VERIFIED = "email_verified";
  @SerializedName(SERIALIZED_NAME_EMAIL_VERIFIED)
  @javax.annotation.Nullable
  private Boolean emailVerified;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  @javax.annotation.Nullable
  private String gender;

  public static final String SERIALIZED_NAME_BIRTHDATE = "birthdate";
  @SerializedName(SERIALIZED_NAME_BIRTHDATE)
  @javax.annotation.Nullable
  private String birthdate;

  public static final String SERIALIZED_NAME_ZONEINFO = "zoneinfo";
  @SerializedName(SERIALIZED_NAME_ZONEINFO)
  @javax.annotation.Nullable
  private String zoneinfo;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  @javax.annotation.Nullable
  private String locale;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  @javax.annotation.Nullable
  private String phoneNumber;

  public static final String SERIALIZED_NAME_PHONE_NUMBER_VERIFIED = "phone_number_verified";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER_VERIFIED)
  @javax.annotation.Nullable
  private Boolean phoneNumberVerified;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  @javax.annotation.Nullable
  private AddressClaimSet address;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  @javax.annotation.Nullable
  private Long updatedAt;

  public static final String SERIALIZED_NAME_CLAIMS_LOCALES = "claims_locales";
  @SerializedName(SERIALIZED_NAME_CLAIMS_LOCALES)
  @javax.annotation.Nullable
  private String claimsLocales;

  public static final String SERIALIZED_NAME_ACR = "acr";
  @SerializedName(SERIALIZED_NAME_ACR)
  @javax.annotation.Nullable
  private String acr;

  public static final String SERIALIZED_NAME_S_HASH = "s_hash";
  @SerializedName(SERIALIZED_NAME_S_HASH)
  @javax.annotation.Nullable
  private String sHash;

  public IDToken() {
  }

  public IDToken jti(@javax.annotation.Nullable String jti) {
    this.jti = jti;
    return this;
  }

  /**
   * Get jti
   * @return jti
   */
  @javax.annotation.Nullable
  public String getJti() {
    return jti;
  }

  public void setJti(@javax.annotation.Nullable String jti) {
    this.jti = jti;
  }


  public IDToken exp(@javax.annotation.Nullable Long exp) {
    this.exp = exp;
    return this;
  }

  /**
   * Get exp
   * @return exp
   */
  @javax.annotation.Nullable
  public Long getExp() {
    return exp;
  }

  public void setExp(@javax.annotation.Nullable Long exp) {
    this.exp = exp;
  }


  public IDToken nbf(@javax.annotation.Nullable Long nbf) {
    this.nbf = nbf;
    return this;
  }

  /**
   * Get nbf
   * @return nbf
   */
  @javax.annotation.Nullable
  public Long getNbf() {
    return nbf;
  }

  public void setNbf(@javax.annotation.Nullable Long nbf) {
    this.nbf = nbf;
  }


  public IDToken iat(@javax.annotation.Nullable Long iat) {
    this.iat = iat;
    return this;
  }

  /**
   * Get iat
   * @return iat
   */
  @javax.annotation.Nullable
  public Long getIat() {
    return iat;
  }

  public void setIat(@javax.annotation.Nullable Long iat) {
    this.iat = iat;
  }


  public IDToken iss(@javax.annotation.Nullable String iss) {
    this.iss = iss;
    return this;
  }

  /**
   * Get iss
   * @return iss
   */
  @javax.annotation.Nullable
  public String getIss() {
    return iss;
  }

  public void setIss(@javax.annotation.Nullable String iss) {
    this.iss = iss;
  }


  public IDToken sub(@javax.annotation.Nullable String sub) {
    this.sub = sub;
    return this;
  }

  /**
   * Get sub
   * @return sub
   */
  @javax.annotation.Nullable
  public String getSub() {
    return sub;
  }

  public void setSub(@javax.annotation.Nullable String sub) {
    this.sub = sub;
  }


  public IDToken typ(@javax.annotation.Nullable String typ) {
    this.typ = typ;
    return this;
  }

  /**
   * Get typ
   * @return typ
   */
  @javax.annotation.Nullable
  public String getTyp() {
    return typ;
  }

  public void setTyp(@javax.annotation.Nullable String typ) {
    this.typ = typ;
  }


  public IDToken azp(@javax.annotation.Nullable String azp) {
    this.azp = azp;
    return this;
  }

  /**
   * Get azp
   * @return azp
   */
  @javax.annotation.Nullable
  public String getAzp() {
    return azp;
  }

  public void setAzp(@javax.annotation.Nullable String azp) {
    this.azp = azp;
  }


  public IDToken otherClaims(@javax.annotation.Nullable Map<String, Object> otherClaims) {
    this.otherClaims = otherClaims;
    return this;
  }

  public IDToken putOtherClaimsItem(String key, Object otherClaimsItem) {
    if (this.otherClaims == null) {
      this.otherClaims = new HashMap<>();
    }
    this.otherClaims.put(key, otherClaimsItem);
    return this;
  }

  /**
   * Get otherClaims
   * @return otherClaims
   */
  @javax.annotation.Nullable
  public Map<String, Object> getOtherClaims() {
    return otherClaims;
  }

  public void setOtherClaims(@javax.annotation.Nullable Map<String, Object> otherClaims) {
    this.otherClaims = otherClaims;
  }


  public IDToken nonce(@javax.annotation.Nullable String nonce) {
    this.nonce = nonce;
    return this;
  }

  /**
   * Get nonce
   * @return nonce
   */
  @javax.annotation.Nullable
  public String getNonce() {
    return nonce;
  }

  public void setNonce(@javax.annotation.Nullable String nonce) {
    this.nonce = nonce;
  }


  public IDToken authTime(@javax.annotation.Nullable Long authTime) {
    this.authTime = authTime;
    return this;
  }

  /**
   * Get authTime
   * @return authTime
   */
  @javax.annotation.Nullable
  public Long getAuthTime() {
    return authTime;
  }

  public void setAuthTime(@javax.annotation.Nullable Long authTime) {
    this.authTime = authTime;
  }


  public IDToken sid(@javax.annotation.Nullable String sid) {
    this.sid = sid;
    return this;
  }

  /**
   * Get sid
   * @return sid
   */
  @javax.annotation.Nullable
  public String getSid() {
    return sid;
  }

  public void setSid(@javax.annotation.Nullable String sid) {
    this.sid = sid;
  }


  public IDToken atHash(@javax.annotation.Nullable String atHash) {
    this.atHash = atHash;
    return this;
  }

  /**
   * Get atHash
   * @return atHash
   */
  @javax.annotation.Nullable
  public String getAtHash() {
    return atHash;
  }

  public void setAtHash(@javax.annotation.Nullable String atHash) {
    this.atHash = atHash;
  }


  public IDToken cHash(@javax.annotation.Nullable String cHash) {
    this.cHash = cHash;
    return this;
  }

  /**
   * Get cHash
   * @return cHash
   */
  @javax.annotation.Nullable
  public String getcHash() {
    return cHash;
  }

  public void setcHash(@javax.annotation.Nullable String cHash) {
    this.cHash = cHash;
  }


  public IDToken name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public IDToken givenName(@javax.annotation.Nullable String givenName) {
    this.givenName = givenName;
    return this;
  }

  /**
   * Get givenName
   * @return givenName
   */
  @javax.annotation.Nullable
  public String getGivenName() {
    return givenName;
  }

  public void setGivenName(@javax.annotation.Nullable String givenName) {
    this.givenName = givenName;
  }


  public IDToken familyName(@javax.annotation.Nullable String familyName) {
    this.familyName = familyName;
    return this;
  }

  /**
   * Get familyName
   * @return familyName
   */
  @javax.annotation.Nullable
  public String getFamilyName() {
    return familyName;
  }

  public void setFamilyName(@javax.annotation.Nullable String familyName) {
    this.familyName = familyName;
  }


  public IDToken middleName(@javax.annotation.Nullable String middleName) {
    this.middleName = middleName;
    return this;
  }

  /**
   * Get middleName
   * @return middleName
   */
  @javax.annotation.Nullable
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(@javax.annotation.Nullable String middleName) {
    this.middleName = middleName;
  }


  public IDToken nickname(@javax.annotation.Nullable String nickname) {
    this.nickname = nickname;
    return this;
  }

  /**
   * Get nickname
   * @return nickname
   */
  @javax.annotation.Nullable
  public String getNickname() {
    return nickname;
  }

  public void setNickname(@javax.annotation.Nullable String nickname) {
    this.nickname = nickname;
  }


  public IDToken preferredUsername(@javax.annotation.Nullable String preferredUsername) {
    this.preferredUsername = preferredUsername;
    return this;
  }

  /**
   * Get preferredUsername
   * @return preferredUsername
   */
  @javax.annotation.Nullable
  public String getPreferredUsername() {
    return preferredUsername;
  }

  public void setPreferredUsername(@javax.annotation.Nullable String preferredUsername) {
    this.preferredUsername = preferredUsername;
  }


  public IDToken profile(@javax.annotation.Nullable String profile) {
    this.profile = profile;
    return this;
  }

  /**
   * Get profile
   * @return profile
   */
  @javax.annotation.Nullable
  public String getProfile() {
    return profile;
  }

  public void setProfile(@javax.annotation.Nullable String profile) {
    this.profile = profile;
  }


  public IDToken picture(@javax.annotation.Nullable String picture) {
    this.picture = picture;
    return this;
  }

  /**
   * Get picture
   * @return picture
   */
  @javax.annotation.Nullable
  public String getPicture() {
    return picture;
  }

  public void setPicture(@javax.annotation.Nullable String picture) {
    this.picture = picture;
  }


  public IDToken website(@javax.annotation.Nullable String website) {
    this.website = website;
    return this;
  }

  /**
   * Get website
   * @return website
   */
  @javax.annotation.Nullable
  public String getWebsite() {
    return website;
  }

  public void setWebsite(@javax.annotation.Nullable String website) {
    this.website = website;
  }


  public IDToken email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }


  public IDToken emailVerified(@javax.annotation.Nullable Boolean emailVerified) {
    this.emailVerified = emailVerified;
    return this;
  }

  /**
   * Get emailVerified
   * @return emailVerified
   */
  @javax.annotation.Nullable
  public Boolean getEmailVerified() {
    return emailVerified;
  }

  public void setEmailVerified(@javax.annotation.Nullable Boolean emailVerified) {
    this.emailVerified = emailVerified;
  }


  public IDToken gender(@javax.annotation.Nullable String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }

  public void setGender(@javax.annotation.Nullable String gender) {
    this.gender = gender;
  }


  public IDToken birthdate(@javax.annotation.Nullable String birthdate) {
    this.birthdate = birthdate;
    return this;
  }

  /**
   * Get birthdate
   * @return birthdate
   */
  @javax.annotation.Nullable
  public String getBirthdate() {
    return birthdate;
  }

  public void setBirthdate(@javax.annotation.Nullable String birthdate) {
    this.birthdate = birthdate;
  }


  public IDToken zoneinfo(@javax.annotation.Nullable String zoneinfo) {
    this.zoneinfo = zoneinfo;
    return this;
  }

  /**
   * Get zoneinfo
   * @return zoneinfo
   */
  @javax.annotation.Nullable
  public String getZoneinfo() {
    return zoneinfo;
  }

  public void setZoneinfo(@javax.annotation.Nullable String zoneinfo) {
    this.zoneinfo = zoneinfo;
  }


  public IDToken locale(@javax.annotation.Nullable String locale) {
    this.locale = locale;
    return this;
  }

  /**
   * Get locale
   * @return locale
   */
  @javax.annotation.Nullable
  public String getLocale() {
    return locale;
  }

  public void setLocale(@javax.annotation.Nullable String locale) {
    this.locale = locale;
  }


  public IDToken phoneNumber(@javax.annotation.Nullable String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(@javax.annotation.Nullable String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public IDToken phoneNumberVerified(@javax.annotation.Nullable Boolean phoneNumberVerified) {
    this.phoneNumberVerified = phoneNumberVerified;
    return this;
  }

  /**
   * Get phoneNumberVerified
   * @return phoneNumberVerified
   */
  @javax.annotation.Nullable
  public Boolean getPhoneNumberVerified() {
    return phoneNumberVerified;
  }

  public void setPhoneNumberVerified(@javax.annotation.Nullable Boolean phoneNumberVerified) {
    this.phoneNumberVerified = phoneNumberVerified;
  }


  public IDToken address(@javax.annotation.Nullable AddressClaimSet address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public AddressClaimSet getAddress() {
    return address;
  }

  public void setAddress(@javax.annotation.Nullable AddressClaimSet address) {
    this.address = address;
  }


  public IDToken updatedAt(@javax.annotation.Nullable Long updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @javax.annotation.Nullable
  public Long getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(@javax.annotation.Nullable Long updatedAt) {
    this.updatedAt = updatedAt;
  }


  public IDToken claimsLocales(@javax.annotation.Nullable String claimsLocales) {
    this.claimsLocales = claimsLocales;
    return this;
  }

  /**
   * Get claimsLocales
   * @return claimsLocales
   */
  @javax.annotation.Nullable
  public String getClaimsLocales() {
    return claimsLocales;
  }

  public void setClaimsLocales(@javax.annotation.Nullable String claimsLocales) {
    this.claimsLocales = claimsLocales;
  }


  public IDToken acr(@javax.annotation.Nullable String acr) {
    this.acr = acr;
    return this;
  }

  /**
   * Get acr
   * @return acr
   */
  @javax.annotation.Nullable
  public String getAcr() {
    return acr;
  }

  public void setAcr(@javax.annotation.Nullable String acr) {
    this.acr = acr;
  }


  public IDToken sHash(@javax.annotation.Nullable String sHash) {
    this.sHash = sHash;
    return this;
  }

  /**
   * Get sHash
   * @return sHash
   */
  @javax.annotation.Nullable
  public String getsHash() {
    return sHash;
  }

  public void setsHash(@javax.annotation.Nullable String sHash) {
    this.sHash = sHash;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IDToken idToken = (IDToken) o;
    return Objects.equals(this.jti, idToken.jti) &&
        Objects.equals(this.exp, idToken.exp) &&
        Objects.equals(this.nbf, idToken.nbf) &&
        Objects.equals(this.iat, idToken.iat) &&
        Objects.equals(this.iss, idToken.iss) &&
        Objects.equals(this.sub, idToken.sub) &&
        Objects.equals(this.typ, idToken.typ) &&
        Objects.equals(this.azp, idToken.azp) &&
        Objects.equals(this.otherClaims, idToken.otherClaims) &&
        Objects.equals(this.nonce, idToken.nonce) &&
        Objects.equals(this.authTime, idToken.authTime) &&
        Objects.equals(this.sid, idToken.sid) &&
        Objects.equals(this.atHash, idToken.atHash) &&
        Objects.equals(this.cHash, idToken.cHash) &&
        Objects.equals(this.name, idToken.name) &&
        Objects.equals(this.givenName, idToken.givenName) &&
        Objects.equals(this.familyName, idToken.familyName) &&
        Objects.equals(this.middleName, idToken.middleName) &&
        Objects.equals(this.nickname, idToken.nickname) &&
        Objects.equals(this.preferredUsername, idToken.preferredUsername) &&
        Objects.equals(this.profile, idToken.profile) &&
        Objects.equals(this.picture, idToken.picture) &&
        Objects.equals(this.website, idToken.website) &&
        Objects.equals(this.email, idToken.email) &&
        Objects.equals(this.emailVerified, idToken.emailVerified) &&
        Objects.equals(this.gender, idToken.gender) &&
        Objects.equals(this.birthdate, idToken.birthdate) &&
        Objects.equals(this.zoneinfo, idToken.zoneinfo) &&
        Objects.equals(this.locale, idToken.locale) &&
        Objects.equals(this.phoneNumber, idToken.phoneNumber) &&
        Objects.equals(this.phoneNumberVerified, idToken.phoneNumberVerified) &&
        Objects.equals(this.address, idToken.address) &&
        Objects.equals(this.updatedAt, idToken.updatedAt) &&
        Objects.equals(this.claimsLocales, idToken.claimsLocales) &&
        Objects.equals(this.acr, idToken.acr) &&
        Objects.equals(this.sHash, idToken.sHash);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jti, exp, nbf, iat, iss, sub, typ, azp, otherClaims, nonce, authTime, sid, atHash, cHash, name, givenName, familyName, middleName, nickname, preferredUsername, profile, picture, website, email, emailVerified, gender, birthdate, zoneinfo, locale, phoneNumber, phoneNumberVerified, address, updatedAt, claimsLocales, acr, sHash);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IDToken {\n");
    sb.append("    jti: ").append(toIndentedString(jti)).append("\n");
    sb.append("    exp: ").append(toIndentedString(exp)).append("\n");
    sb.append("    nbf: ").append(toIndentedString(nbf)).append("\n");
    sb.append("    iat: ").append(toIndentedString(iat)).append("\n");
    sb.append("    iss: ").append(toIndentedString(iss)).append("\n");
    sb.append("    sub: ").append(toIndentedString(sub)).append("\n");
    sb.append("    typ: ").append(toIndentedString(typ)).append("\n");
    sb.append("    azp: ").append(toIndentedString(azp)).append("\n");
    sb.append("    otherClaims: ").append(toIndentedString(otherClaims)).append("\n");
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("    authTime: ").append(toIndentedString(authTime)).append("\n");
    sb.append("    sid: ").append(toIndentedString(sid)).append("\n");
    sb.append("    atHash: ").append(toIndentedString(atHash)).append("\n");
    sb.append("    cHash: ").append(toIndentedString(cHash)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    givenName: ").append(toIndentedString(givenName)).append("\n");
    sb.append("    familyName: ").append(toIndentedString(familyName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    preferredUsername: ").append(toIndentedString(preferredUsername)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("    picture: ").append(toIndentedString(picture)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailVerified: ").append(toIndentedString(emailVerified)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    birthdate: ").append(toIndentedString(birthdate)).append("\n");
    sb.append("    zoneinfo: ").append(toIndentedString(zoneinfo)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    phoneNumberVerified: ").append(toIndentedString(phoneNumberVerified)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    claimsLocales: ").append(toIndentedString(claimsLocales)).append("\n");
    sb.append("    acr: ").append(toIndentedString(acr)).append("\n");
    sb.append("    sHash: ").append(toIndentedString(sHash)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("jti");
    openapiFields.add("exp");
    openapiFields.add("nbf");
    openapiFields.add("iat");
    openapiFields.add("iss");
    openapiFields.add("sub");
    openapiFields.add("typ");
    openapiFields.add("azp");
    openapiFields.add("otherClaims");
    openapiFields.add("nonce");
    openapiFields.add("auth_time");
    openapiFields.add("sid");
    openapiFields.add("at_hash");
    openapiFields.add("c_hash");
    openapiFields.add("name");
    openapiFields.add("given_name");
    openapiFields.add("family_name");
    openapiFields.add("middle_name");
    openapiFields.add("nickname");
    openapiFields.add("preferred_username");
    openapiFields.add("profile");
    openapiFields.add("picture");
    openapiFields.add("website");
    openapiFields.add("email");
    openapiFields.add("email_verified");
    openapiFields.add("gender");
    openapiFields.add("birthdate");
    openapiFields.add("zoneinfo");
    openapiFields.add("locale");
    openapiFields.add("phone_number");
    openapiFields.add("phone_number_verified");
    openapiFields.add("address");
    openapiFields.add("updated_at");
    openapiFields.add("claims_locales");
    openapiFields.add("acr");
    openapiFields.add("s_hash");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IDToken
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IDToken.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IDToken is not found in the empty JSON string", IDToken.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IDToken.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IDToken` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("jti") != null && !jsonObj.get("jti").isJsonNull()) && !jsonObj.get("jti").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jti` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jti").toString()));
      }
      if ((jsonObj.get("iss") != null && !jsonObj.get("iss").isJsonNull()) && !jsonObj.get("iss").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `iss` to be a primitive type in the JSON string but got `%s`", jsonObj.get("iss").toString()));
      }
      if ((jsonObj.get("sub") != null && !jsonObj.get("sub").isJsonNull()) && !jsonObj.get("sub").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub").toString()));
      }
      if ((jsonObj.get("typ") != null && !jsonObj.get("typ").isJsonNull()) && !jsonObj.get("typ").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typ` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typ").toString()));
      }
      if ((jsonObj.get("azp") != null && !jsonObj.get("azp").isJsonNull()) && !jsonObj.get("azp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `azp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("azp").toString()));
      }
      if ((jsonObj.get("nonce") != null && !jsonObj.get("nonce").isJsonNull()) && !jsonObj.get("nonce").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nonce` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nonce").toString()));
      }
      if ((jsonObj.get("sid") != null && !jsonObj.get("sid").isJsonNull()) && !jsonObj.get("sid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sid").toString()));
      }
      if ((jsonObj.get("at_hash") != null && !jsonObj.get("at_hash").isJsonNull()) && !jsonObj.get("at_hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `at_hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("at_hash").toString()));
      }
      if ((jsonObj.get("c_hash") != null && !jsonObj.get("c_hash").isJsonNull()) && !jsonObj.get("c_hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `c_hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("c_hash").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("given_name") != null && !jsonObj.get("given_name").isJsonNull()) && !jsonObj.get("given_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `given_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("given_name").toString()));
      }
      if ((jsonObj.get("family_name") != null && !jsonObj.get("family_name").isJsonNull()) && !jsonObj.get("family_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `family_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("family_name").toString()));
      }
      if ((jsonObj.get("middle_name") != null && !jsonObj.get("middle_name").isJsonNull()) && !jsonObj.get("middle_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middle_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middle_name").toString()));
      }
      if ((jsonObj.get("nickname") != null && !jsonObj.get("nickname").isJsonNull()) && !jsonObj.get("nickname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nickname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nickname").toString()));
      }
      if ((jsonObj.get("preferred_username") != null && !jsonObj.get("preferred_username").isJsonNull()) && !jsonObj.get("preferred_username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferred_username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferred_username").toString()));
      }
      if ((jsonObj.get("profile") != null && !jsonObj.get("profile").isJsonNull()) && !jsonObj.get("profile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile").toString()));
      }
      if ((jsonObj.get("picture") != null && !jsonObj.get("picture").isJsonNull()) && !jsonObj.get("picture").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `picture` to be a primitive type in the JSON string but got `%s`", jsonObj.get("picture").toString()));
      }
      if ((jsonObj.get("website") != null && !jsonObj.get("website").isJsonNull()) && !jsonObj.get("website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("website").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("birthdate") != null && !jsonObj.get("birthdate").isJsonNull()) && !jsonObj.get("birthdate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `birthdate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("birthdate").toString()));
      }
      if ((jsonObj.get("zoneinfo") != null && !jsonObj.get("zoneinfo").isJsonNull()) && !jsonObj.get("zoneinfo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zoneinfo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zoneinfo").toString()));
      }
      if ((jsonObj.get("locale") != null && !jsonObj.get("locale").isJsonNull()) && !jsonObj.get("locale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locale").toString()));
      }
      if ((jsonObj.get("phone_number") != null && !jsonObj.get("phone_number").isJsonNull()) && !jsonObj.get("phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone_number").toString()));
      }
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        AddressClaimSet.validateJsonElement(jsonObj.get("address"));
      }
      if ((jsonObj.get("claims_locales") != null && !jsonObj.get("claims_locales").isJsonNull()) && !jsonObj.get("claims_locales").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `claims_locales` to be a primitive type in the JSON string but got `%s`", jsonObj.get("claims_locales").toString()));
      }
      if ((jsonObj.get("acr") != null && !jsonObj.get("acr").isJsonNull()) && !jsonObj.get("acr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `acr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("acr").toString()));
      }
      if ((jsonObj.get("s_hash") != null && !jsonObj.get("s_hash").isJsonNull()) && !jsonObj.get("s_hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `s_hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("s_hash").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IDToken.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IDToken' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IDToken> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IDToken.class));

       return (TypeAdapter<T>) new TypeAdapter<IDToken>() {
           @Override
           public void write(JsonWriter out, IDToken value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IDToken read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IDToken given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IDToken
   * @throws IOException if the JSON string is invalid with respect to IDToken
   */
  public static IDToken fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IDToken.class);
  }

  /**
   * Convert an instance of IDToken to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

