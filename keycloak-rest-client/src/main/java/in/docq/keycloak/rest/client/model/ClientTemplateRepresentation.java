/*
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.keycloak.rest.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import in.docq.keycloak.rest.client.model.ProtocolMapperRepresentation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.util.HashSet;
import java.util.Set;

import in.docq.keycloak.rest.client.JSON;

/**
 * ClientTemplateRepresentation
 * @deprecated
 */
@Deprecated
@javax.annotation.Generated(value = "in.docq.keycloak.rest.codegen.languages.JavaClientCodegen", date = "2025-02-08T16:05:02.219423+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class ClientTemplateRepresentation {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_PROTOCOL = "protocol";
  @SerializedName(SERIALIZED_NAME_PROTOCOL)
  @javax.annotation.Nullable
  private String protocol;

  public static final String SERIALIZED_NAME_FULL_SCOPE_ALLOWED = "fullScopeAllowed";
  @SerializedName(SERIALIZED_NAME_FULL_SCOPE_ALLOWED)
  @javax.annotation.Nullable
  private Boolean fullScopeAllowed;

  public static final String SERIALIZED_NAME_BEARER_ONLY = "bearerOnly";
  @SerializedName(SERIALIZED_NAME_BEARER_ONLY)
  @javax.annotation.Nullable
  private Boolean bearerOnly;

  public static final String SERIALIZED_NAME_CONSENT_REQUIRED = "consentRequired";
  @SerializedName(SERIALIZED_NAME_CONSENT_REQUIRED)
  @javax.annotation.Nullable
  private Boolean consentRequired;

  public static final String SERIALIZED_NAME_STANDARD_FLOW_ENABLED = "standardFlowEnabled";
  @SerializedName(SERIALIZED_NAME_STANDARD_FLOW_ENABLED)
  @javax.annotation.Nullable
  private Boolean standardFlowEnabled;

  public static final String SERIALIZED_NAME_IMPLICIT_FLOW_ENABLED = "implicitFlowEnabled";
  @SerializedName(SERIALIZED_NAME_IMPLICIT_FLOW_ENABLED)
  @javax.annotation.Nullable
  private Boolean implicitFlowEnabled;

  public static final String SERIALIZED_NAME_DIRECT_ACCESS_GRANTS_ENABLED = "directAccessGrantsEnabled";
  @SerializedName(SERIALIZED_NAME_DIRECT_ACCESS_GRANTS_ENABLED)
  @javax.annotation.Nullable
  private Boolean directAccessGrantsEnabled;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNTS_ENABLED = "serviceAccountsEnabled";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNTS_ENABLED)
  @javax.annotation.Nullable
  private Boolean serviceAccountsEnabled;

  public static final String SERIALIZED_NAME_PUBLIC_CLIENT = "publicClient";
  @SerializedName(SERIALIZED_NAME_PUBLIC_CLIENT)
  @javax.annotation.Nullable
  private Boolean publicClient;

  public static final String SERIALIZED_NAME_FRONTCHANNEL_LOGOUT = "frontchannelLogout";
  @SerializedName(SERIALIZED_NAME_FRONTCHANNEL_LOGOUT)
  @javax.annotation.Nullable
  private Boolean frontchannelLogout;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  @javax.annotation.Nullable
  private Map<String, String> attributes = new HashMap<>();

  public static final String SERIALIZED_NAME_PROTOCOL_MAPPERS = "protocolMappers";
  @SerializedName(SERIALIZED_NAME_PROTOCOL_MAPPERS)
  @javax.annotation.Nullable
  private List<ProtocolMapperRepresentation> protocolMappers = new ArrayList<>();

  public ClientTemplateRepresentation() {
  }

  public ClientTemplateRepresentation id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public ClientTemplateRepresentation name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public ClientTemplateRepresentation description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public ClientTemplateRepresentation protocol(@javax.annotation.Nullable String protocol) {
    this.protocol = protocol;
    return this;
  }

  /**
   * Get protocol
   * @return protocol
   */
  @javax.annotation.Nullable
  public String getProtocol() {
    return protocol;
  }

  public void setProtocol(@javax.annotation.Nullable String protocol) {
    this.protocol = protocol;
  }


  public ClientTemplateRepresentation fullScopeAllowed(@javax.annotation.Nullable Boolean fullScopeAllowed) {
    this.fullScopeAllowed = fullScopeAllowed;
    return this;
  }

  /**
   * Get fullScopeAllowed
   * @return fullScopeAllowed
   */
  @javax.annotation.Nullable
  public Boolean getFullScopeAllowed() {
    return fullScopeAllowed;
  }

  public void setFullScopeAllowed(@javax.annotation.Nullable Boolean fullScopeAllowed) {
    this.fullScopeAllowed = fullScopeAllowed;
  }


  public ClientTemplateRepresentation bearerOnly(@javax.annotation.Nullable Boolean bearerOnly) {
    this.bearerOnly = bearerOnly;
    return this;
  }

  /**
   * Get bearerOnly
   * @return bearerOnly
   */
  @javax.annotation.Nullable
  public Boolean getBearerOnly() {
    return bearerOnly;
  }

  public void setBearerOnly(@javax.annotation.Nullable Boolean bearerOnly) {
    this.bearerOnly = bearerOnly;
  }


  public ClientTemplateRepresentation consentRequired(@javax.annotation.Nullable Boolean consentRequired) {
    this.consentRequired = consentRequired;
    return this;
  }

  /**
   * Get consentRequired
   * @return consentRequired
   */
  @javax.annotation.Nullable
  public Boolean getConsentRequired() {
    return consentRequired;
  }

  public void setConsentRequired(@javax.annotation.Nullable Boolean consentRequired) {
    this.consentRequired = consentRequired;
  }


  public ClientTemplateRepresentation standardFlowEnabled(@javax.annotation.Nullable Boolean standardFlowEnabled) {
    this.standardFlowEnabled = standardFlowEnabled;
    return this;
  }

  /**
   * Get standardFlowEnabled
   * @return standardFlowEnabled
   */
  @javax.annotation.Nullable
  public Boolean getStandardFlowEnabled() {
    return standardFlowEnabled;
  }

  public void setStandardFlowEnabled(@javax.annotation.Nullable Boolean standardFlowEnabled) {
    this.standardFlowEnabled = standardFlowEnabled;
  }


  public ClientTemplateRepresentation implicitFlowEnabled(@javax.annotation.Nullable Boolean implicitFlowEnabled) {
    this.implicitFlowEnabled = implicitFlowEnabled;
    return this;
  }

  /**
   * Get implicitFlowEnabled
   * @return implicitFlowEnabled
   */
  @javax.annotation.Nullable
  public Boolean getImplicitFlowEnabled() {
    return implicitFlowEnabled;
  }

  public void setImplicitFlowEnabled(@javax.annotation.Nullable Boolean implicitFlowEnabled) {
    this.implicitFlowEnabled = implicitFlowEnabled;
  }


  public ClientTemplateRepresentation directAccessGrantsEnabled(@javax.annotation.Nullable Boolean directAccessGrantsEnabled) {
    this.directAccessGrantsEnabled = directAccessGrantsEnabled;
    return this;
  }

  /**
   * Get directAccessGrantsEnabled
   * @return directAccessGrantsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getDirectAccessGrantsEnabled() {
    return directAccessGrantsEnabled;
  }

  public void setDirectAccessGrantsEnabled(@javax.annotation.Nullable Boolean directAccessGrantsEnabled) {
    this.directAccessGrantsEnabled = directAccessGrantsEnabled;
  }


  public ClientTemplateRepresentation serviceAccountsEnabled(@javax.annotation.Nullable Boolean serviceAccountsEnabled) {
    this.serviceAccountsEnabled = serviceAccountsEnabled;
    return this;
  }

  /**
   * Get serviceAccountsEnabled
   * @return serviceAccountsEnabled
   */
  @javax.annotation.Nullable
  public Boolean getServiceAccountsEnabled() {
    return serviceAccountsEnabled;
  }

  public void setServiceAccountsEnabled(@javax.annotation.Nullable Boolean serviceAccountsEnabled) {
    this.serviceAccountsEnabled = serviceAccountsEnabled;
  }


  public ClientTemplateRepresentation publicClient(@javax.annotation.Nullable Boolean publicClient) {
    this.publicClient = publicClient;
    return this;
  }

  /**
   * Get publicClient
   * @return publicClient
   */
  @javax.annotation.Nullable
  public Boolean getPublicClient() {
    return publicClient;
  }

  public void setPublicClient(@javax.annotation.Nullable Boolean publicClient) {
    this.publicClient = publicClient;
  }


  public ClientTemplateRepresentation frontchannelLogout(@javax.annotation.Nullable Boolean frontchannelLogout) {
    this.frontchannelLogout = frontchannelLogout;
    return this;
  }

  /**
   * Get frontchannelLogout
   * @return frontchannelLogout
   */
  @javax.annotation.Nullable
  public Boolean getFrontchannelLogout() {
    return frontchannelLogout;
  }

  public void setFrontchannelLogout(@javax.annotation.Nullable Boolean frontchannelLogout) {
    this.frontchannelLogout = frontchannelLogout;
  }


  public ClientTemplateRepresentation attributes(@javax.annotation.Nullable Map<String, String> attributes) {
    this.attributes = attributes;
    return this;
  }

  public ClientTemplateRepresentation putAttributesItem(String key, String attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map<String, String> getAttributes() {
    return attributes;
  }

  public void setAttributes(@javax.annotation.Nullable Map<String, String> attributes) {
    this.attributes = attributes;
  }


  public ClientTemplateRepresentation protocolMappers(@javax.annotation.Nullable List<ProtocolMapperRepresentation> protocolMappers) {
    this.protocolMappers = protocolMappers;
    return this;
  }

  public ClientTemplateRepresentation addProtocolMappersItem(ProtocolMapperRepresentation protocolMappersItem) {
    if (this.protocolMappers == null) {
      this.protocolMappers = new ArrayList<>();
    }
    this.protocolMappers.add(protocolMappersItem);
    return this;
  }

  /**
   * Get protocolMappers
   * @return protocolMappers
   */
  @javax.annotation.Nullable
  public List<ProtocolMapperRepresentation> getProtocolMappers() {
    return protocolMappers;
  }

  public void setProtocolMappers(@javax.annotation.Nullable List<ProtocolMapperRepresentation> protocolMappers) {
    this.protocolMappers = protocolMappers;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientTemplateRepresentation clientTemplateRepresentation = (ClientTemplateRepresentation) o;
    return Objects.equals(this.id, clientTemplateRepresentation.id) &&
        Objects.equals(this.name, clientTemplateRepresentation.name) &&
        Objects.equals(this.description, clientTemplateRepresentation.description) &&
        Objects.equals(this.protocol, clientTemplateRepresentation.protocol) &&
        Objects.equals(this.fullScopeAllowed, clientTemplateRepresentation.fullScopeAllowed) &&
        Objects.equals(this.bearerOnly, clientTemplateRepresentation.bearerOnly) &&
        Objects.equals(this.consentRequired, clientTemplateRepresentation.consentRequired) &&
        Objects.equals(this.standardFlowEnabled, clientTemplateRepresentation.standardFlowEnabled) &&
        Objects.equals(this.implicitFlowEnabled, clientTemplateRepresentation.implicitFlowEnabled) &&
        Objects.equals(this.directAccessGrantsEnabled, clientTemplateRepresentation.directAccessGrantsEnabled) &&
        Objects.equals(this.serviceAccountsEnabled, clientTemplateRepresentation.serviceAccountsEnabled) &&
        Objects.equals(this.publicClient, clientTemplateRepresentation.publicClient) &&
        Objects.equals(this.frontchannelLogout, clientTemplateRepresentation.frontchannelLogout) &&
        Objects.equals(this.attributes, clientTemplateRepresentation.attributes) &&
        Objects.equals(this.protocolMappers, clientTemplateRepresentation.protocolMappers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, protocol, fullScopeAllowed, bearerOnly, consentRequired, standardFlowEnabled, implicitFlowEnabled, directAccessGrantsEnabled, serviceAccountsEnabled, publicClient, frontchannelLogout, attributes, protocolMappers);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientTemplateRepresentation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    fullScopeAllowed: ").append(toIndentedString(fullScopeAllowed)).append("\n");
    sb.append("    bearerOnly: ").append(toIndentedString(bearerOnly)).append("\n");
    sb.append("    consentRequired: ").append(toIndentedString(consentRequired)).append("\n");
    sb.append("    standardFlowEnabled: ").append(toIndentedString(standardFlowEnabled)).append("\n");
    sb.append("    implicitFlowEnabled: ").append(toIndentedString(implicitFlowEnabled)).append("\n");
    sb.append("    directAccessGrantsEnabled: ").append(toIndentedString(directAccessGrantsEnabled)).append("\n");
    sb.append("    serviceAccountsEnabled: ").append(toIndentedString(serviceAccountsEnabled)).append("\n");
    sb.append("    publicClient: ").append(toIndentedString(publicClient)).append("\n");
    sb.append("    frontchannelLogout: ").append(toIndentedString(frontchannelLogout)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    protocolMappers: ").append(toIndentedString(protocolMappers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("protocol");
    openapiFields.add("fullScopeAllowed");
    openapiFields.add("bearerOnly");
    openapiFields.add("consentRequired");
    openapiFields.add("standardFlowEnabled");
    openapiFields.add("implicitFlowEnabled");
    openapiFields.add("directAccessGrantsEnabled");
    openapiFields.add("serviceAccountsEnabled");
    openapiFields.add("publicClient");
    openapiFields.add("frontchannelLogout");
    openapiFields.add("attributes");
    openapiFields.add("protocolMappers");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ClientTemplateRepresentation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ClientTemplateRepresentation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClientTemplateRepresentation is not found in the empty JSON string", ClientTemplateRepresentation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ClientTemplateRepresentation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ClientTemplateRepresentation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("protocol") != null && !jsonObj.get("protocol").isJsonNull()) && !jsonObj.get("protocol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protocol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protocol").toString()));
      }
      if (jsonObj.get("protocolMappers") != null && !jsonObj.get("protocolMappers").isJsonNull()) {
        JsonArray jsonArrayprotocolMappers = jsonObj.getAsJsonArray("protocolMappers");
        if (jsonArrayprotocolMappers != null) {
          // ensure the json data is an array
          if (!jsonObj.get("protocolMappers").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `protocolMappers` to be an array in the JSON string but got `%s`", jsonObj.get("protocolMappers").toString()));
          }

          // validate the optional field `protocolMappers` (array)
          for (int i = 0; i < jsonArrayprotocolMappers.size(); i++) {
            ProtocolMapperRepresentation.validateJsonElement(jsonArrayprotocolMappers.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClientTemplateRepresentation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClientTemplateRepresentation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClientTemplateRepresentation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClientTemplateRepresentation.class));

       return (TypeAdapter<T>) new TypeAdapter<ClientTemplateRepresentation>() {
           @Override
           public void write(JsonWriter out, ClientTemplateRepresentation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClientTemplateRepresentation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ClientTemplateRepresentation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ClientTemplateRepresentation
   * @throws IOException if the JSON string is invalid with respect to ClientTemplateRepresentation
   */
  public static ClientTemplateRepresentation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClientTemplateRepresentation.class);
  }

  /**
   * Convert an instance of ClientTemplateRepresentation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

