/*
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin REST API.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.keycloak.rest.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import in.docq.keycloak.rest.client.model.CredentialRepresentation;
import in.docq.keycloak.rest.client.model.FederatedIdentityRepresentation;
import in.docq.keycloak.rest.client.model.SocialLinkRepresentation;
import in.docq.keycloak.rest.client.model.UserConsentRepresentation;
import in.docq.keycloak.rest.client.model.UserProfileMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.util.HashSet;

import in.docq.keycloak.rest.client.JSON;

/**
 * UserRepresentation
 */
@javax.annotation.Generated(value = "in.docq.keycloak.rest.codegen.languages.JavaClientCodegen", date = "2025-02-08T16:05:02.219423+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class UserRepresentation {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_USERNAME = "username";
  @SerializedName(SERIALIZED_NAME_USERNAME)
  @javax.annotation.Nullable
  private String username;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  @javax.annotation.Nullable
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  @javax.annotation.Nullable
  private String lastName;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nullable
  private String email;

  public static final String SERIALIZED_NAME_EMAIL_VERIFIED = "emailVerified";
  @SerializedName(SERIALIZED_NAME_EMAIL_VERIFIED)
  @javax.annotation.Nullable
  private Boolean emailVerified;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  @javax.annotation.Nullable
  private Map<String, List<String>> attributes = new HashMap<>();

  public static final String SERIALIZED_NAME_USER_PROFILE_METADATA = "userProfileMetadata";
  @SerializedName(SERIALIZED_NAME_USER_PROFILE_METADATA)
  @javax.annotation.Nullable
  private UserProfileMetadata userProfileMetadata;

  public static final String SERIALIZED_NAME_SELF = "self";
  @SerializedName(SERIALIZED_NAME_SELF)
  @javax.annotation.Nullable
  private String self;

  public static final String SERIALIZED_NAME_ORIGIN = "origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  @javax.annotation.Nullable
  private String origin;

  public static final String SERIALIZED_NAME_CREATED_TIMESTAMP = "createdTimestamp";
  @SerializedName(SERIALIZED_NAME_CREATED_TIMESTAMP)
  @javax.annotation.Nullable
  private Long createdTimestamp;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  @javax.annotation.Nullable
  private Boolean enabled;

  public static final String SERIALIZED_NAME_TOTP = "totp";
  @SerializedName(SERIALIZED_NAME_TOTP)
  @javax.annotation.Nullable
  private Boolean totp;

  public static final String SERIALIZED_NAME_FEDERATION_LINK = "federationLink";
  @SerializedName(SERIALIZED_NAME_FEDERATION_LINK)
  @javax.annotation.Nullable
  private String federationLink;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT_CLIENT_ID = "serviceAccountClientId";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT_CLIENT_ID)
  @javax.annotation.Nullable
  private String serviceAccountClientId;

  public static final String SERIALIZED_NAME_CREDENTIALS = "credentials";
  @SerializedName(SERIALIZED_NAME_CREDENTIALS)
  @javax.annotation.Nullable
  private List<CredentialRepresentation> credentials = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISABLEABLE_CREDENTIAL_TYPES = "disableableCredentialTypes";
  @SerializedName(SERIALIZED_NAME_DISABLEABLE_CREDENTIAL_TYPES)
  @javax.annotation.Nullable
  private Set<String> disableableCredentialTypes = new LinkedHashSet<>();

  public static final String SERIALIZED_NAME_REQUIRED_ACTIONS = "requiredActions";
  @SerializedName(SERIALIZED_NAME_REQUIRED_ACTIONS)
  @javax.annotation.Nullable
  private List<String> requiredActions = new ArrayList<>();

  public static final String SERIALIZED_NAME_FEDERATED_IDENTITIES = "federatedIdentities";
  @SerializedName(SERIALIZED_NAME_FEDERATED_IDENTITIES)
  @javax.annotation.Nullable
  private List<FederatedIdentityRepresentation> federatedIdentities = new ArrayList<>();

  public static final String SERIALIZED_NAME_REALM_ROLES = "realmRoles";
  @SerializedName(SERIALIZED_NAME_REALM_ROLES)
  @javax.annotation.Nullable
  private List<String> realmRoles = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLIENT_ROLES = "clientRoles";
  @SerializedName(SERIALIZED_NAME_CLIENT_ROLES)
  @javax.annotation.Nullable
  private Map<String, List<String>> clientRoles = new HashMap<>();

  public static final String SERIALIZED_NAME_CLIENT_CONSENTS = "clientConsents";
  @SerializedName(SERIALIZED_NAME_CLIENT_CONSENTS)
  @javax.annotation.Nullable
  private List<UserConsentRepresentation> clientConsents = new ArrayList<>();

  public static final String SERIALIZED_NAME_NOT_BEFORE = "notBefore";
  @SerializedName(SERIALIZED_NAME_NOT_BEFORE)
  @javax.annotation.Nullable
  private Integer notBefore;

  public static final String SERIALIZED_NAME_APPLICATION_ROLES = "applicationRoles";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_APPLICATION_ROLES)
  @javax.annotation.Nullable
  private Map<String, List<String>> applicationRoles = new HashMap<>();

  public static final String SERIALIZED_NAME_SOCIAL_LINKS = "socialLinks";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_SOCIAL_LINKS)
  @javax.annotation.Nullable
  private List<SocialLinkRepresentation> socialLinks = new ArrayList<>();

  public static final String SERIALIZED_NAME_GROUPS = "groups";
  @SerializedName(SERIALIZED_NAME_GROUPS)
  @javax.annotation.Nullable
  private List<String> groups = new ArrayList<>();

  public static final String SERIALIZED_NAME_ACCESS = "access";
  @SerializedName(SERIALIZED_NAME_ACCESS)
  @javax.annotation.Nullable
  private Map<String, Boolean> access = new HashMap<>();

  public UserRepresentation() {
  }

  public UserRepresentation id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public UserRepresentation username(@javax.annotation.Nullable String username) {
    this.username = username;
    return this;
  }

  /**
   * Get username
   * @return username
   */
  @javax.annotation.Nullable
  public String getUsername() {
    return username;
  }

  public void setUsername(@javax.annotation.Nullable String username) {
    this.username = username;
  }


  public UserRepresentation firstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
  }


  public UserRepresentation lastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
  }


  public UserRepresentation email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }


  public UserRepresentation emailVerified(@javax.annotation.Nullable Boolean emailVerified) {
    this.emailVerified = emailVerified;
    return this;
  }

  /**
   * Get emailVerified
   * @return emailVerified
   */
  @javax.annotation.Nullable
  public Boolean getEmailVerified() {
    return emailVerified;
  }

  public void setEmailVerified(@javax.annotation.Nullable Boolean emailVerified) {
    this.emailVerified = emailVerified;
  }


  public UserRepresentation attributes(@javax.annotation.Nullable Map<String, List<String>> attributes) {
    this.attributes = attributes;
    return this;
  }

  public UserRepresentation putAttributesItem(String key, List<String> attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public Map<String, List<String>> getAttributes() {
    return attributes;
  }

  public void setAttributes(@javax.annotation.Nullable Map<String, List<String>> attributes) {
    this.attributes = attributes;
  }


  public UserRepresentation userProfileMetadata(@javax.annotation.Nullable UserProfileMetadata userProfileMetadata) {
    this.userProfileMetadata = userProfileMetadata;
    return this;
  }

  /**
   * Get userProfileMetadata
   * @return userProfileMetadata
   */
  @javax.annotation.Nullable
  public UserProfileMetadata getUserProfileMetadata() {
    return userProfileMetadata;
  }

  public void setUserProfileMetadata(@javax.annotation.Nullable UserProfileMetadata userProfileMetadata) {
    this.userProfileMetadata = userProfileMetadata;
  }


  public UserRepresentation self(@javax.annotation.Nullable String self) {
    this.self = self;
    return this;
  }

  /**
   * Get self
   * @return self
   */
  @javax.annotation.Nullable
  public String getSelf() {
    return self;
  }

  public void setSelf(@javax.annotation.Nullable String self) {
    this.self = self;
  }


  public UserRepresentation origin(@javax.annotation.Nullable String origin) {
    this.origin = origin;
    return this;
  }

  /**
   * Get origin
   * @return origin
   */
  @javax.annotation.Nullable
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(@javax.annotation.Nullable String origin) {
    this.origin = origin;
  }


  public UserRepresentation createdTimestamp(@javax.annotation.Nullable Long createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
    return this;
  }

  /**
   * Get createdTimestamp
   * @return createdTimestamp
   */
  @javax.annotation.Nullable
  public Long getCreatedTimestamp() {
    return createdTimestamp;
  }

  public void setCreatedTimestamp(@javax.annotation.Nullable Long createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
  }


  public UserRepresentation enabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }


  public UserRepresentation totp(@javax.annotation.Nullable Boolean totp) {
    this.totp = totp;
    return this;
  }

  /**
   * Get totp
   * @return totp
   */
  @javax.annotation.Nullable
  public Boolean getTotp() {
    return totp;
  }

  public void setTotp(@javax.annotation.Nullable Boolean totp) {
    this.totp = totp;
  }


  public UserRepresentation federationLink(@javax.annotation.Nullable String federationLink) {
    this.federationLink = federationLink;
    return this;
  }

  /**
   * Get federationLink
   * @return federationLink
   */
  @javax.annotation.Nullable
  public String getFederationLink() {
    return federationLink;
  }

  public void setFederationLink(@javax.annotation.Nullable String federationLink) {
    this.federationLink = federationLink;
  }


  public UserRepresentation serviceAccountClientId(@javax.annotation.Nullable String serviceAccountClientId) {
    this.serviceAccountClientId = serviceAccountClientId;
    return this;
  }

  /**
   * Get serviceAccountClientId
   * @return serviceAccountClientId
   */
  @javax.annotation.Nullable
  public String getServiceAccountClientId() {
    return serviceAccountClientId;
  }

  public void setServiceAccountClientId(@javax.annotation.Nullable String serviceAccountClientId) {
    this.serviceAccountClientId = serviceAccountClientId;
  }


  public UserRepresentation credentials(@javax.annotation.Nullable List<CredentialRepresentation> credentials) {
    this.credentials = credentials;
    return this;
  }

  public UserRepresentation addCredentialsItem(CredentialRepresentation credentialsItem) {
    if (this.credentials == null) {
      this.credentials = new ArrayList<>();
    }
    this.credentials.add(credentialsItem);
    return this;
  }

  /**
   * Get credentials
   * @return credentials
   */
  @javax.annotation.Nullable
  public List<CredentialRepresentation> getCredentials() {
    return credentials;
  }

  public void setCredentials(@javax.annotation.Nullable List<CredentialRepresentation> credentials) {
    this.credentials = credentials;
  }


  public UserRepresentation disableableCredentialTypes(@javax.annotation.Nullable Set<String> disableableCredentialTypes) {
    this.disableableCredentialTypes = disableableCredentialTypes;
    return this;
  }

  public UserRepresentation addDisableableCredentialTypesItem(String disableableCredentialTypesItem) {
    if (this.disableableCredentialTypes == null) {
      this.disableableCredentialTypes = new LinkedHashSet<>();
    }
    this.disableableCredentialTypes.add(disableableCredentialTypesItem);
    return this;
  }

  /**
   * Get disableableCredentialTypes
   * @return disableableCredentialTypes
   */
  @javax.annotation.Nullable
  public Set<String> getDisableableCredentialTypes() {
    return disableableCredentialTypes;
  }

  public void setDisableableCredentialTypes(@javax.annotation.Nullable Set<String> disableableCredentialTypes) {
    this.disableableCredentialTypes = disableableCredentialTypes;
  }


  public UserRepresentation requiredActions(@javax.annotation.Nullable List<String> requiredActions) {
    this.requiredActions = requiredActions;
    return this;
  }

  public UserRepresentation addRequiredActionsItem(String requiredActionsItem) {
    if (this.requiredActions == null) {
      this.requiredActions = new ArrayList<>();
    }
    this.requiredActions.add(requiredActionsItem);
    return this;
  }

  /**
   * Get requiredActions
   * @return requiredActions
   */
  @javax.annotation.Nullable
  public List<String> getRequiredActions() {
    return requiredActions;
  }

  public void setRequiredActions(@javax.annotation.Nullable List<String> requiredActions) {
    this.requiredActions = requiredActions;
  }


  public UserRepresentation federatedIdentities(@javax.annotation.Nullable List<FederatedIdentityRepresentation> federatedIdentities) {
    this.federatedIdentities = federatedIdentities;
    return this;
  }

  public UserRepresentation addFederatedIdentitiesItem(FederatedIdentityRepresentation federatedIdentitiesItem) {
    if (this.federatedIdentities == null) {
      this.federatedIdentities = new ArrayList<>();
    }
    this.federatedIdentities.add(federatedIdentitiesItem);
    return this;
  }

  /**
   * Get federatedIdentities
   * @return federatedIdentities
   */
  @javax.annotation.Nullable
  public List<FederatedIdentityRepresentation> getFederatedIdentities() {
    return federatedIdentities;
  }

  public void setFederatedIdentities(@javax.annotation.Nullable List<FederatedIdentityRepresentation> federatedIdentities) {
    this.federatedIdentities = federatedIdentities;
  }


  public UserRepresentation realmRoles(@javax.annotation.Nullable List<String> realmRoles) {
    this.realmRoles = realmRoles;
    return this;
  }

  public UserRepresentation addRealmRolesItem(String realmRolesItem) {
    if (this.realmRoles == null) {
      this.realmRoles = new ArrayList<>();
    }
    this.realmRoles.add(realmRolesItem);
    return this;
  }

  /**
   * Get realmRoles
   * @return realmRoles
   */
  @javax.annotation.Nullable
  public List<String> getRealmRoles() {
    return realmRoles;
  }

  public void setRealmRoles(@javax.annotation.Nullable List<String> realmRoles) {
    this.realmRoles = realmRoles;
  }


  public UserRepresentation clientRoles(@javax.annotation.Nullable Map<String, List<String>> clientRoles) {
    this.clientRoles = clientRoles;
    return this;
  }

  public UserRepresentation putClientRolesItem(String key, List<String> clientRolesItem) {
    if (this.clientRoles == null) {
      this.clientRoles = new HashMap<>();
    }
    this.clientRoles.put(key, clientRolesItem);
    return this;
  }

  /**
   * Get clientRoles
   * @return clientRoles
   */
  @javax.annotation.Nullable
  public Map<String, List<String>> getClientRoles() {
    return clientRoles;
  }

  public void setClientRoles(@javax.annotation.Nullable Map<String, List<String>> clientRoles) {
    this.clientRoles = clientRoles;
  }


  public UserRepresentation clientConsents(@javax.annotation.Nullable List<UserConsentRepresentation> clientConsents) {
    this.clientConsents = clientConsents;
    return this;
  }

  public UserRepresentation addClientConsentsItem(UserConsentRepresentation clientConsentsItem) {
    if (this.clientConsents == null) {
      this.clientConsents = new ArrayList<>();
    }
    this.clientConsents.add(clientConsentsItem);
    return this;
  }

  /**
   * Get clientConsents
   * @return clientConsents
   */
  @javax.annotation.Nullable
  public List<UserConsentRepresentation> getClientConsents() {
    return clientConsents;
  }

  public void setClientConsents(@javax.annotation.Nullable List<UserConsentRepresentation> clientConsents) {
    this.clientConsents = clientConsents;
  }


  public UserRepresentation notBefore(@javax.annotation.Nullable Integer notBefore) {
    this.notBefore = notBefore;
    return this;
  }

  /**
   * Get notBefore
   * @return notBefore
   */
  @javax.annotation.Nullable
  public Integer getNotBefore() {
    return notBefore;
  }

  public void setNotBefore(@javax.annotation.Nullable Integer notBefore) {
    this.notBefore = notBefore;
  }


  @Deprecated
  public UserRepresentation applicationRoles(@javax.annotation.Nullable Map<String, List<String>> applicationRoles) {
    this.applicationRoles = applicationRoles;
    return this;
  }

  public UserRepresentation putApplicationRolesItem(String key, List<String> applicationRolesItem) {
    if (this.applicationRoles == null) {
      this.applicationRoles = new HashMap<>();
    }
    this.applicationRoles.put(key, applicationRolesItem);
    return this;
  }

  /**
   * Get applicationRoles
   * @return applicationRoles
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Map<String, List<String>> getApplicationRoles() {
    return applicationRoles;
  }

  @Deprecated
  public void setApplicationRoles(@javax.annotation.Nullable Map<String, List<String>> applicationRoles) {
    this.applicationRoles = applicationRoles;
  }


  @Deprecated
  public UserRepresentation socialLinks(@javax.annotation.Nullable List<SocialLinkRepresentation> socialLinks) {
    this.socialLinks = socialLinks;
    return this;
  }

  public UserRepresentation addSocialLinksItem(SocialLinkRepresentation socialLinksItem) {
    if (this.socialLinks == null) {
      this.socialLinks = new ArrayList<>();
    }
    this.socialLinks.add(socialLinksItem);
    return this;
  }

  /**
   * Get socialLinks
   * @return socialLinks
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<SocialLinkRepresentation> getSocialLinks() {
    return socialLinks;
  }

  @Deprecated
  public void setSocialLinks(@javax.annotation.Nullable List<SocialLinkRepresentation> socialLinks) {
    this.socialLinks = socialLinks;
  }


  public UserRepresentation groups(@javax.annotation.Nullable List<String> groups) {
    this.groups = groups;
    return this;
  }

  public UserRepresentation addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

  /**
   * Get groups
   * @return groups
   */
  @javax.annotation.Nullable
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(@javax.annotation.Nullable List<String> groups) {
    this.groups = groups;
  }


  public UserRepresentation access(@javax.annotation.Nullable Map<String, Boolean> access) {
    this.access = access;
    return this;
  }

  public UserRepresentation putAccessItem(String key, Boolean accessItem) {
    if (this.access == null) {
      this.access = new HashMap<>();
    }
    this.access.put(key, accessItem);
    return this;
  }

  /**
   * Get access
   * @return access
   */
  @javax.annotation.Nullable
  public Map<String, Boolean> getAccess() {
    return access;
  }

  public void setAccess(@javax.annotation.Nullable Map<String, Boolean> access) {
    this.access = access;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserRepresentation userRepresentation = (UserRepresentation) o;
    return Objects.equals(this.id, userRepresentation.id) &&
        Objects.equals(this.username, userRepresentation.username) &&
        Objects.equals(this.firstName, userRepresentation.firstName) &&
        Objects.equals(this.lastName, userRepresentation.lastName) &&
        Objects.equals(this.email, userRepresentation.email) &&
        Objects.equals(this.emailVerified, userRepresentation.emailVerified) &&
        Objects.equals(this.attributes, userRepresentation.attributes) &&
        Objects.equals(this.userProfileMetadata, userRepresentation.userProfileMetadata) &&
        Objects.equals(this.self, userRepresentation.self) &&
        Objects.equals(this.origin, userRepresentation.origin) &&
        Objects.equals(this.createdTimestamp, userRepresentation.createdTimestamp) &&
        Objects.equals(this.enabled, userRepresentation.enabled) &&
        Objects.equals(this.totp, userRepresentation.totp) &&
        Objects.equals(this.federationLink, userRepresentation.federationLink) &&
        Objects.equals(this.serviceAccountClientId, userRepresentation.serviceAccountClientId) &&
        Objects.equals(this.credentials, userRepresentation.credentials) &&
        Objects.equals(this.disableableCredentialTypes, userRepresentation.disableableCredentialTypes) &&
        Objects.equals(this.requiredActions, userRepresentation.requiredActions) &&
        Objects.equals(this.federatedIdentities, userRepresentation.federatedIdentities) &&
        Objects.equals(this.realmRoles, userRepresentation.realmRoles) &&
        Objects.equals(this.clientRoles, userRepresentation.clientRoles) &&
        Objects.equals(this.clientConsents, userRepresentation.clientConsents) &&
        Objects.equals(this.notBefore, userRepresentation.notBefore) &&
        Objects.equals(this.applicationRoles, userRepresentation.applicationRoles) &&
        Objects.equals(this.socialLinks, userRepresentation.socialLinks) &&
        Objects.equals(this.groups, userRepresentation.groups) &&
        Objects.equals(this.access, userRepresentation.access);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, username, firstName, lastName, email, emailVerified, attributes, userProfileMetadata, self, origin, createdTimestamp, enabled, totp, federationLink, serviceAccountClientId, credentials, disableableCredentialTypes, requiredActions, federatedIdentities, realmRoles, clientRoles, clientConsents, notBefore, applicationRoles, socialLinks, groups, access);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserRepresentation {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailVerified: ").append(toIndentedString(emailVerified)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    userProfileMetadata: ").append(toIndentedString(userProfileMetadata)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    createdTimestamp: ").append(toIndentedString(createdTimestamp)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    totp: ").append(toIndentedString(totp)).append("\n");
    sb.append("    federationLink: ").append(toIndentedString(federationLink)).append("\n");
    sb.append("    serviceAccountClientId: ").append(toIndentedString(serviceAccountClientId)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("    disableableCredentialTypes: ").append(toIndentedString(disableableCredentialTypes)).append("\n");
    sb.append("    requiredActions: ").append(toIndentedString(requiredActions)).append("\n");
    sb.append("    federatedIdentities: ").append(toIndentedString(federatedIdentities)).append("\n");
    sb.append("    realmRoles: ").append(toIndentedString(realmRoles)).append("\n");
    sb.append("    clientRoles: ").append(toIndentedString(clientRoles)).append("\n");
    sb.append("    clientConsents: ").append(toIndentedString(clientConsents)).append("\n");
    sb.append("    notBefore: ").append(toIndentedString(notBefore)).append("\n");
    sb.append("    applicationRoles: ").append(toIndentedString(applicationRoles)).append("\n");
    sb.append("    socialLinks: ").append(toIndentedString(socialLinks)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("username");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("email");
    openapiFields.add("emailVerified");
    openapiFields.add("attributes");
    openapiFields.add("userProfileMetadata");
    openapiFields.add("self");
    openapiFields.add("origin");
    openapiFields.add("createdTimestamp");
    openapiFields.add("enabled");
    openapiFields.add("totp");
    openapiFields.add("federationLink");
    openapiFields.add("serviceAccountClientId");
    openapiFields.add("credentials");
    openapiFields.add("disableableCredentialTypes");
    openapiFields.add("requiredActions");
    openapiFields.add("federatedIdentities");
    openapiFields.add("realmRoles");
    openapiFields.add("clientRoles");
    openapiFields.add("clientConsents");
    openapiFields.add("notBefore");
    openapiFields.add("applicationRoles");
    openapiFields.add("socialLinks");
    openapiFields.add("groups");
    openapiFields.add("access");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UserRepresentation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UserRepresentation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserRepresentation is not found in the empty JSON string", UserRepresentation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UserRepresentation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UserRepresentation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("username") != null && !jsonObj.get("username").isJsonNull()) && !jsonObj.get("username").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `username` to be a primitive type in the JSON string but got `%s`", jsonObj.get("username").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      // validate the optional field `userProfileMetadata`
      if (jsonObj.get("userProfileMetadata") != null && !jsonObj.get("userProfileMetadata").isJsonNull()) {
        UserProfileMetadata.validateJsonElement(jsonObj.get("userProfileMetadata"));
      }
      if ((jsonObj.get("self") != null && !jsonObj.get("self").isJsonNull()) && !jsonObj.get("self").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `self` to be a primitive type in the JSON string but got `%s`", jsonObj.get("self").toString()));
      }
      if ((jsonObj.get("origin") != null && !jsonObj.get("origin").isJsonNull()) && !jsonObj.get("origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("origin").toString()));
      }
      if ((jsonObj.get("federationLink") != null && !jsonObj.get("federationLink").isJsonNull()) && !jsonObj.get("federationLink").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `federationLink` to be a primitive type in the JSON string but got `%s`", jsonObj.get("federationLink").toString()));
      }
      if ((jsonObj.get("serviceAccountClientId") != null && !jsonObj.get("serviceAccountClientId").isJsonNull()) && !jsonObj.get("serviceAccountClientId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceAccountClientId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceAccountClientId").toString()));
      }
      if (jsonObj.get("credentials") != null && !jsonObj.get("credentials").isJsonNull()) {
        JsonArray jsonArraycredentials = jsonObj.getAsJsonArray("credentials");
        if (jsonArraycredentials != null) {
          // ensure the json data is an array
          if (!jsonObj.get("credentials").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `credentials` to be an array in the JSON string but got `%s`", jsonObj.get("credentials").toString()));
          }

          // validate the optional field `credentials` (array)
          for (int i = 0; i < jsonArraycredentials.size(); i++) {
            CredentialRepresentation.validateJsonElement(jsonArraycredentials.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("disableableCredentialTypes") != null && !jsonObj.get("disableableCredentialTypes").isJsonNull() && !jsonObj.get("disableableCredentialTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `disableableCredentialTypes` to be an array in the JSON string but got `%s`", jsonObj.get("disableableCredentialTypes").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("requiredActions") != null && !jsonObj.get("requiredActions").isJsonNull() && !jsonObj.get("requiredActions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `requiredActions` to be an array in the JSON string but got `%s`", jsonObj.get("requiredActions").toString()));
      }
      if (jsonObj.get("federatedIdentities") != null && !jsonObj.get("federatedIdentities").isJsonNull()) {
        JsonArray jsonArrayfederatedIdentities = jsonObj.getAsJsonArray("federatedIdentities");
        if (jsonArrayfederatedIdentities != null) {
          // ensure the json data is an array
          if (!jsonObj.get("federatedIdentities").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `federatedIdentities` to be an array in the JSON string but got `%s`", jsonObj.get("federatedIdentities").toString()));
          }

          // validate the optional field `federatedIdentities` (array)
          for (int i = 0; i < jsonArrayfederatedIdentities.size(); i++) {
            FederatedIdentityRepresentation.validateJsonElement(jsonArrayfederatedIdentities.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("realmRoles") != null && !jsonObj.get("realmRoles").isJsonNull() && !jsonObj.get("realmRoles").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `realmRoles` to be an array in the JSON string but got `%s`", jsonObj.get("realmRoles").toString()));
      }
      if (jsonObj.get("clientConsents") != null && !jsonObj.get("clientConsents").isJsonNull()) {
        JsonArray jsonArrayclientConsents = jsonObj.getAsJsonArray("clientConsents");
        if (jsonArrayclientConsents != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clientConsents").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clientConsents` to be an array in the JSON string but got `%s`", jsonObj.get("clientConsents").toString()));
          }

          // validate the optional field `clientConsents` (array)
          for (int i = 0; i < jsonArrayclientConsents.size(); i++) {
            UserConsentRepresentation.validateJsonElement(jsonArrayclientConsents.get(i));
          };
        }
      }
      if (jsonObj.get("socialLinks") != null && !jsonObj.get("socialLinks").isJsonNull()) {
        JsonArray jsonArraysocialLinks = jsonObj.getAsJsonArray("socialLinks");
        if (jsonArraysocialLinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("socialLinks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `socialLinks` to be an array in the JSON string but got `%s`", jsonObj.get("socialLinks").toString()));
          }

          // validate the optional field `socialLinks` (array)
          for (int i = 0; i < jsonArraysocialLinks.size(); i++) {
            SocialLinkRepresentation.validateJsonElement(jsonArraysocialLinks.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("groups") != null && !jsonObj.get("groups").isJsonNull() && !jsonObj.get("groups").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `groups` to be an array in the JSON string but got `%s`", jsonObj.get("groups").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserRepresentation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserRepresentation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserRepresentation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserRepresentation.class));

       return (TypeAdapter<T>) new TypeAdapter<UserRepresentation>() {
           @Override
           public void write(JsonWriter out, UserRepresentation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UserRepresentation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UserRepresentation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UserRepresentation
   * @throws IOException if the JSON string is invalid with respect to UserRepresentation
   */
  public static UserRepresentation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserRepresentation.class);
  }

  /**
   * Convert an instance of UserRepresentation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

