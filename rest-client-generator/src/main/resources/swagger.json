{
  "openapi": "3.0.2",
  "info": {
    "title": "Ayushman Bharat Digital Mission - Consent Management",
    "version": "3.0"
  },
  "servers": [
    {
      "url": "https://dev.abdm.gov.in",
      "description": "Sandbox"
    },
    {
      "url": "https://apis.abdm.gov.in",
      "description": "Production"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "apikeyAuth": {
        "type": "http",
        "scheme": "apikey"
      },
      "noauthAuth": {
        "type": "http",
        "scheme": "noauth"
      },
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  },
  "paths": {
    "<callback_url>/api/v3/consent/request/hip/notify": {
      "post": {
        "tags": [
          "consent-management-data-flow-hip"
        ],
        "operationId": "consent-management 1",
        "summary": "This is a callback api to notify hip when consent is APPROVED or REVOKED.",
        "description": "Notification of consents to health information providers consent request granted, consent revoked, consent expired. Only the GRANTED, REVOKED and EXPIRED status notifications will be sent to HIP. If consent is granted, status=GRANTED, then consentDetail contains the consent artefact details and signature is available. If consent is revoked, then status=REVOKED, and consentId specifes which consent artefact is revoked. If the consent has expired, then status=EXPIRED, and consentId specifies which consent artefact has expired. Note, this is also responsibility of the HIP to keep track of consent expiry. Any data request on expired consent artefact must not be done.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-HIP-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "IN2810014366",
            "description": "Identifier of the health information provider to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "notification"
                ],
                "properties": {
                  "notification": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "status",
                      "consentId",
                      "consentDetail",
                      "signature",
                      "grantAcknowledgement"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "nullable": false,
                        "enum": [
                          "GRANTED",
                          "EXPIRED",
                          "DENIED",
                          "REQUESTED",
                          "REVOKED"
                        ]
                      },
                      "consentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                        "description": "Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}$\";"
                      },
                      "consentDetail": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "schemaVersion",
                          "consentId",
                          "createdAt",
                          "patient",
                          "careContexts",
                          "purpose",
                          "hip",
                          "hiu",
                          "consentManager",
                          "requester",
                          "hiTypes",
                          "permission"
                        ],
                        "properties": {
                          "schemaVersion": {
                            "type": "string",
                            "nullable": false,
                            "example": "v3"
                          },
                          "consentId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": false,
                            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                            "description": "Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}$\";"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2024-05-01T05:10:20.123Z",
                            "description": "Allows alpha numeric character and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                          },
                          "patient": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "abdulkalam@abdm",
                                "description": "The abha address of the patient. Allows alpha numeric character and special characters like ^[a-zA-Z0-9][a-zA-Z0-9_.]+[a-zA-Z0-9]@(abdm|sbx)$"
                              }
                            }
                          },
                          "careContexts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "nullable": false,
                              "required": [
                                "patientReference",
                                "careContextReference"
                              ],
                              "properties": {
                                "patientReference": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "batman@tmh",
                                  "description": "A patient identifier with which patient is registered in the facility/hospital. Allows alpha numeric and special characters like \"^[a-zA-Z0-9_\\\\-@,().\\\"/: ]{0,255}$\""
                                },
                                "careContextReference": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "Episode1",
                                  "description": "An identifier of patient's care context created in HIP. A care context is a group of patient's health data (Not the actual health data). Allows alpha numeric and special characters like  \"^[a-zA-Z0-9_\\\\-@,().\\\"/:| ]{0,255}$\""
                                }
                              }
                            }
                          },
                          "purpose": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "text",
                              "code",
                              "refUri"
                            ],
                            "properties": {
                              "text": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "Care Management",
                                  "Break the Glass",
                                  "Public Health",
                                  "Healthcare Payment",
                                  "Disease Specific Healthcare Research",
                                  "Self Requested"
                                ]
                              },
                              "code": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "CAREMGT",
                                  "BTG",
                                  "PUBHLTH",
                                  "HPAYMT",
                                  "DSRCH",
                                  "PATRQT"
                                ]
                              },
                              "refUri": {
                                "type": "string",
                                "nullable": false,
                                "example": "www.abc.com",
                                "description": "The reference URL. Should be a valid URL. Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                              }
                            }
                          },
                          "hip": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "cowin_hip_01",
                                "description": "The service ID of the health information provider. Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true,
                                "example": "Cowin",
                                "description": "The name of the health information provider. Allows alpha numeric and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                              },
                              "type": {
                                "type": "string",
                                "nullable": true,
                                "example": "HIP",
                                "description": "The type of the health information provider. Allows alpha numeric and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                              }
                            }
                          },
                          "hiu": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "cowin_hiu_01",
                                "description": "The service ID of the health information user.  Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true,
                                "example": "Cowin",
                                "description": "The name of the health information user. Allows alpha numeric and special characters like ^[a-zA-Z]+[A-Za-z0-9_\\\\-@,().\\\\s\\\\xa0:/]+"
                              },
                              "type": {
                                "type": "string",
                                "nullable": true,
                                "example": "HIU",
                                "description": "The type of the health information user. Allows alpha numeric and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                              }
                            }
                          },
                          "consentManager": {
                            "type": "object",
                            "required": [
                              "id"
                            ],
                            "nullable": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "abdm"
                              }
                            }
                          },
                          "requester": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "name",
                              "identifier"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "nullable": false,
                                "example": "abdulkalam@abdm",
                                "description": "The name of the requester"
                              },
                              "identifier": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "value",
                                  "type",
                                  "system"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "REG1",
                                    "description": "The type of the identification. Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                                  },
                                  "type": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "MH1001",
                                    "description": "The identification value. Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                                  },
                                  "system": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "https://www.sample.com",
                                    "description": "Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                                  }
                                }
                              }
                            }
                          },
                          "hiTypes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Prescription",
                                "DiagnosticReport",
                                "OPConsultation",
                                "DischargeSummary",
                                "ImmunizationRecord",
                                "HealthDocumentRecord",
                                "WellnessRecord",
                                "Invoice"
                              ],
                              "example": "Prescription"
                            }
                          },
                          "permission": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "accessMode",
                              "dateRange",
                              "dataEraseAt",
                              "frequency"
                            ],
                            "properties": {
                              "accessMode": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "VIEW",
                                  "STORE",
                                  "STREAM",
                                  "QUERY"
                                ],
                                "example": "VIEW"
                              },
                              "dateRange": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "from",
                                  "to"
                                ],
                                "properties": {
                                  "from": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": false,
                                    "example": "2021-09-28T12:30:08.573Z",
                                    "description": "Should be UTC date time in ISO format. Allows alpha numeric character and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                                  },
                                  "to": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": false,
                                    "example": "2021-09-28T12:30:08.573Z",
                                    "description": "Should be UTC date time in ISO format.Allows alpha numeric character and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                                  }
                                }
                              },
                              "dataEraseAt": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": false,
                                "example": "2021-09-28T12:30:08.573Z",
                                "description": "The date at which the consent expire. Should be UTC date time in ISO format.Allows alpha numeric character and special\n                characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                              },
                              "frequency": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "unit",
                                  "value",
                                  "repeats"
                                ],
                                "properties": {
                                  "unit": {
                                    "type": "string",
                                    "nullable": false,
                                    "enum": [
                                      "HOUR",
                                      "DAY",
                                      "WEEK",
                                      "MONTH",
                                      "YEAR"
                                    ]
                                  },
                                  "value": {
                                    "type": "number",
                                    "format": "int32",
                                    "nullable": false,
                                    "example": 1,
                                    "description": "The frequency unit value. Should be be a integer"
                                  },
                                  "repeats": {
                                    "type": "number",
                                    "format": "int32",
                                    "nullable": true,
                                    "example": 0,
                                    "description": "Should be be a integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "signature": {
                        "type": "string",
                        "format": "byte",
                        "nullable": false,
                        "example": "e8nY601CYDsC0FKoDjSp+7GeQ2s2R8oZncLCz5ce+pEuDOr5bZV0aaHjwJg4b9S9V+twjt4hbojx3fl7egrt8+0c+lfPTi5/bBUAQXCABTfFmtFU7jn65HlTt8kgkiONx26ZBhJ0wX3xjYI72PPtzYIiT5Q08YtDoILA62KceioV7lwuKssw7wC4ECbBAvRuXT121TmtrPhf+0myJATSnaajS06S6OthrKfZLNTUFf3pFiJzqouSTrjNblOX6DT2+JuO3rom1Szz/03c0HQG+wWASv+PO3J6uRs0UI4JvKmM/4tP+Z+/HPKM15K5U5K+4pqf6czKrbIDpkT/kP8bGg=="
                      },
                      "grantAcknowledgement": {
                        "type": "boolean",
                        "nullable": false,
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/request/hip/on-notify": {
      "post": {
        "tags": [
          "consent-management-data-flow-hip"
        ],
        "operationId": "abdm-consent-management 2",
        "summary": "This is ABDM HIE-CM API called by HIP to acknowledge the notification sent when a consent request is approved/revoked/expired by the patient.",
        "description": "This API is called by HIP as acknowledgement to notification of consents, in cases of consent approval, revocation and expiration. Notified by CM earlier via Gateway API - <b> /api/v3/consent/request/hip/notify </b>",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "In the request body, either ‘acknowledgement’ or ‘error’ must be included.<br> <ol type='a'><br/> <li>Incase of success scenario,acknowledgement is mandatory and error is optional</li> <li>Incase of failure scenario,error is mandatory and acknowledgement is optional<li>response is mandatory object in both the cases</li> </ol>",
                "required": [
                  "acknowledgement",
                  "response"
                ],
                "properties": {
                  "acknowledgement": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "status",
                      "consentId"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "nullable": false,
                        "example": "OK",
                        "description": "The status of the notification.  Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                      },
                      "consentId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "example": "e3c74829-3f82-4f94-959e-e10f57bcd57b",
                        "description": "The consent artefact id. Should be valid UUID. Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}$\";"
                      }
                    }
                  },
                  "error": {
                    "type": "object",
                    "nullable": true,
                    "required": [
                      "code",
                      "message"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "nullable": false,
                        "example": "ABDM-1001",
                        "description": "The code for the error to uniquely identify"
                      },
                      "message": {
                        "type": "string",
                        "nullable": false,
                        "example": "unable to connect database",
                        "description": "The appropriate error message"
                      }
                    }
                  },
                  "response": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "requestId"
                    ],
                    "properties": {
                      "requestId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "example": "6f0b4665-a915-4c92-aa36-65afb4a2cd71",
                        "description": "The requestId that was passed. it must be in Alpha numeric and - in middle and Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}\""
                      }
                    },
                    "description": "The request id is from the /consent/request/hip/notify callback"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "object",
                        "required": [
                          "code",
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "RequestId cannot be NULL or Blank"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Invalid status, Please provide a valid status"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Invalid ConsentId, Please provide a valid ConsentId"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "<callback_url>/api/v3/hip/health-information/request": {
      "post": {
        "tags": [
          "consent-management-data-flow-hip"
        ],
        "operationId": "abdm-consent-management 3",
        "summary": "Health information data request to HIP.",
        "description": "Callback API to provide Health information request of HIP. CM calls this API when it has validated the Health Information request given the consent id.<br> Either the hiRequest or error would need to be specified. If the health info request was valid, then the hiRequest.transactionId specifies the transaction context against which HIP would send over the data.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-HIP-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "IN2810014366",
            "description": "Identifier of the health information provider to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "transactionId",
                  "hiRequest"
                ],
                "properties": {
                  "transactionId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": false,
                    "example": "49455d89-cb13-483d-ad71-7a57d5f669a8"
                  },
                  "hiRequest": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "consent",
                      "dateRange",
                      "dataPushUrl",
                      "keyMaterial"
                    ],
                    "properties": {
                      "consent": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "nullable": false,
                            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
                            "description": "The consent artefact id for health information request. Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}$\""
                          }
                        }
                      },
                      "dateRange": {
                        "type": "object",
                        "nullable": false,
                        "description": "Health information created between this date range is requested",
                        "required": [
                          "from",
                          "to"
                        ],
                        "properties": {
                          "from": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2022-10-06T15:10:00.587Z",
                            "description": "Should be a UTC date time in ISO Format. Allows alpha numeric character and special characters like \\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$"
                          },
                          "to": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2022-11-06T15:10:00.587Z",
                            "description": "Should be a UTC date time in ISO Format.Allows alpha numeric character and special characters like \\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$"
                          }
                        }
                      },
                      "dataPushUrl": {
                        "type": "string",
                        "nullable": false,
                        "example": "https://live.ndhm.gov.in/api-hiu/data/notification",
                        "description": "The URL to which the Health Information Provider has to send the health information data. Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                      },
                      "keyMaterial": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "cryptoAlg",
                          "curve",
                          "dhPublicKey"
                        ],
                        "properties": {
                          "cryptoAlg": {
                            "type": "string",
                            "nullable": false,
                            "example": "ECDH",
                            "description": "Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                          },
                          "curve": {
                            "type": "string",
                            "nullable": false,
                            "example": "curve25519",
                            "description": "Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                          },
                          "dhPublicKey": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "expiry",
                              "parameters",
                              "keyValue"
                            ],
                            "properties": {
                              "expiry": {
                                "type": "string",
                                "nullable": false,
                                "example": "2022-12-28T13:18:20.742Z",
                                "description": "UTC.Allows alpha numeric character and special characters like \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\""
                              },
                              "parameters": {
                                "type": "string",
                                "nullable": false,
                                "example": "Ephemeral public key",
                                "description": "Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\-@,+#=. \":/]{0,255}$"
                              },
                              "keyValue": {
                                "type": "string",
                                "nullable": false,
                                "example": "BFN7KTdOT0jIAExG2A8Jg+01wMPWxptiGqwHRVvtiVEsUq2FR7P2UdqZxJyPJSeR6muai21iQhasNxnhh8I5M+g="
                              }
                            }
                          },
                          "nonce": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": false,
                            "example": "28236d89-cb13-479d-ad71-7a57d5f669a9"
                          }
                        },
                        "description": "The key and algorithm details that is used to encrypt/decrypt the data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "server cannot find the requested resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "type",
                    "message",
                    "description"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "404"
                    },
                    "type": {
                      "type": "string",
                      "example": "status report"
                    },
                    "message": {
                      "type": "string",
                      "example": "Runtime error"
                    },
                    "description": {
                      "type": "string",
                      "example": "No matching resource found for given API Request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/data-flow/v3/health-information/hip/on-request": {
      "post": {
        "tags": [
          "consent-management-data-flow-hip"
        ],
        "operationId": "abdm-consent-management 5",
        "summary": "Health information data request acknowledgement from HIP.",
        "description": "API called by the HIP to acknowledge the Health information request receipt. Either the hiRequest or error must be specified. hiRequest element returns the same transaction id as before with a status indicating that the request is acknowledged.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "In the request body, either ‘hiRequest’ or ‘error’ must be included.<br> <ol type='a'><br/> <li>Incase of success scenario,hiRequest is mandatory and error is optional</li> <li>Incase of failure scenario,error is mandatory and hiRequest is optional<li>response is mandatory object in both the cases</li> </ol>",
                "anyOf": [
                  {
                    "type": "object",
                    "required": [
                      "hiRequest",
                      "response"
                    ],
                    "properties": {
                      "hiRequest": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "transactionId",
                          "sessionStatus"
                        ],
                        "properties": {
                          "transactionId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": false,
                            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
                            "description": "The UUID generated when the health information request was initiated.Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          },
                          "sessionStatus": {
                            "type": "string",
                            "nullable": false,
                            "example": "ACKNOWLEDGED",
                            "description": "The status of the health information request that was initiated.Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          }
                        }
                      },
                      "response": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "requestId"
                        ],
                        "properties": {
                          "requestId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": false,
                            "example": "6f0b4665-a915-4c92-aa36-65afb4a2cd71",
                            "description": "The requestId that was passed"
                          }
                        },
                        "description": "The request id from the /hip/health-information/request callback. Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}\""
                      }
                    }
                  },
                  {
                    "type": "object",
                    "description": "In case of any error or FAIL then only send error object",
                    "required": [
                      "response"
                    ],
                    "properties": {
                      "error": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "ABDM-1001"
                          },
                          "message": {
                            "type": "string",
                            "example": "unable to connect database"
                          }
                        }
                      },
                      "response": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "requestId"
                        ],
                        "properties": {
                          "requestId": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": false,
                            "example": "6f0b4665-a915-4c92-aa36-65afb4a2cd71",
                            "description": "The requestId that was passed"
                          }
                        },
                        "description": "The request id from the /hip/health-information/request callback. Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}\""
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1031"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Invalid request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message",
                    "description"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Credentials"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure you have provided the correct security credentials"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Denied",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "type",
                    "message",
                    "description"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "404"
                    },
                    "type": {
                      "type": "string",
                      "example": "status report"
                    },
                    "message": {
                      "type": "string",
                      "example": "Runtime error"
                    },
                    "description": {
                      "type": "string",
                      "example": "No matching resource found for given API Request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health-information/transfer": {
      "post": {
        "tags": [
          "consent-management-data-flow-hip"
        ],
        "operationId": "abdm-consent-management 6",
        "summary": "health information transfer API",
        "description": "<p><strong>NOTE:</strong> This API is actually the callback URL that is passed as <code>dataPushUrl</code> in the data request API - <code>/api/v3/hip/health-information/request</code>. This API is directly called by HIP Data Bridge and is not mediated via CM, and hence not routed through the Gateway.</p> <ul> <li>This API should be implemented at HIU side. It may be implemented by the Data Bridge representing the HIU.</li> <li>Entry elements may be content or link, although for version 1, entry content is preferred.</li> <li>Entry content (or even link reference content) must be encrypted by means of Elliptic-curve Diffie–Hellman Key Exchange, utilizing the HIU key materials that are passed through the data request API - <code>/api/v3/hip/health-information/request</code>.</li> <li>Media contains the mimetype of content, and for v1, it is \"application/fhir+json\".</li> <li>Checksum is MD5 checksum of the data content, before encryption.</li> <li>Please refer to the ABDM Sandbox Documentation for the format of FHIR bundle that is passed through content.</li> </ul> <ol type=\"*\"><li><strong>Authorization token is mandatory for this api.</strong></li></ol>",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "pageNumber",
                  "pageCount",
                  "transactionId",
                  "entries",
                  "keyMaterial"
                ],
                "properties": {
                  "pageNumber": {
                    "type": "integer",
                    "nullable": false,
                    "description": "Current page number."
                  },
                  "pageCount": {
                    "type": "integer",
                    "nullable": false,
                    "example": 1,
                    "description": "Total number of pages."
                  },
                  "transactionId": {
                    "type": "string",
                    "nullable": false,
                    "description": "Transaction Id issued when data requested."
                  },
                  "entries": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "content",
                        "media",
                        "checksum",
                        "careContextReference"
                      ],
                      "properties": {
                        "content": {
                          "type": "string",
                          "nullable": false,
                          "example": "Encrypted content of data packaged in FHIR bundle",
                          "description": "Encrypted content"
                        },
                        "media": {
                          "type": "string",
                          "nullable": false,
                          "example": "mimetype of the content.",
                          "enum": [
                            "application/fhir+json"
                          ]
                        },
                        "checksum": {
                          "type": "string",
                          "nullable": false,
                          "example": "string",
                          "description": "Md5 checksum of the content before encryption"
                        },
                        "careContextReference": {
                          "type": "string",
                          "nullable": false,
                          "example": "1931-nd2",
                          "decription": "care context reference number."
                        }
                      }
                    }
                  },
                  "keyMaterial": {
                    "type": "object",
                    "required": [
                      "cryptoAlg",
                      "curve",
                      "dhPublicKey",
                      "nonce"
                    ],
                    "properties": {
                      "cryptoAlg": {
                        "type": "string",
                        "nullable": false,
                        "enum": [
                          "ECDH"
                        ]
                      },
                      "curve": {
                        "type": "string",
                        "nullable": false,
                        "enum": [
                          "Curve25519"
                        ]
                      },
                      "dhPublicKey": {
                        "type": "object",
                        "required": [
                          "expiry",
                          "parameters",
                          "keyValue"
                        ],
                        "properties": {
                          "expiry": {
                            "type": "string",
                            "nullable": false
                          },
                          "parameters": {
                            "type": "string",
                            "nullable": false,
                            "enum": [
                              "Curve25519/32byte random key"
                            ]
                          },
                          "keyValue": {
                            "type": "string",
                            "nullable": false
                          }
                        }
                      },
                      "nonce": {
                        "type": "string",
                        "nullable": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "nullable": false,
                          "example": 4500
                        },
                        "message": {
                          "type": "string",
                          "nullable": false,
                          "example": "Unknown error"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/request/init": {
      "post": {
        "tags": [
          "consent-management-data-flow-hiu"
        ],
        "operationId": "abdm-consent-management 1",
        "summary": "This is ABDM HIE-CM API called by HIU to initiate the consent request",
        "description": "This API endpoint is used to create a consent request by a Health Information User (HIU) to access a patient’s health data. By invoking this API, the HIU initiates the process of obtaining the necessary permissions from the patient to retrieve their health information. This consent request is a critical component of the health information exchange framework, ensuring that patient data is accessed in a secure, authorized, and transparent manner. The API supports the establishment of trust and compliance with privacy regulations, facilitating seamless and ethical health information exchange.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "consent"
                ],
                "properties": {
                  "consent": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "purpose",
                      "patient",
                      "hiu",
                      "requester",
                      "hiTypes",
                      "permission"
                    ],
                    "properties": {
                      "purpose": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "text",
                          "code",
                          "refUri"
                        ],
                        "properties": {
                          "text": {
                            "type": "string",
                            "nullable": false,
                            "enum": [
                              "Care Management",
                              "Break the Glass",
                              "Public Health",
                              "Healthcare Payment",
                              "Disease Specific Healthcare Research",
                              "Self Requested"
                            ]
                          },
                          "code": {
                            "type": "string",
                            "nullable": false,
                            "enum": [
                              "CAREMGT",
                              "BTG",
                              "PUBHLTH",
                              "HPAYMT",
                              "DSRCH",
                              "PATRQT"
                            ]
                          },
                          "refUri": {
                            "type": "string",
                            "nullable": false,
                            "example": "www.abc.com",
                            "description": "The reference URL. Should be a valid URL. Allow alpha numeric characters and special charactes like  \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          }
                        }
                      },
                      "patient": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "nullable": false,
                            "example": "abdulkalam@abdm",
                            "description": "The abha address of the patient. It must start with Alphanumeric . and  _  in the middle and must be ending with @abdm or @sbx. Allows alpha numeric character and special characters like ^[a-zA-Z0-9][a-zA-Z0-9_.\\-!]+[a-zA-Z0-9]@(abdm|sbx)$"
                          }
                        }
                      },
                      "hip": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "nullable": false,
                            "example": "cowin_hip_01",
                            "description": "The service ID of the health information provider. Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true,
                            "example": "Cowin",
                            "description": "The name of the health information provider. Allows alpha numeric and special characters like \"^[a-zA-Z]+[A-Za-z0-9_\\\\-@,().\\\\s\\\\xa0:/]+\""
                          },
                          "type": {
                            "type": "string",
                            "nullable": true,
                            "example": "HIP",
                            "description": "The type of the health information provider. Allows alpha numeric and special characters like  \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          }
                        }
                      },
                      "hiu": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "id",
                          "name"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "nullable": false,
                            "example": "cowin_hiu_01",
                            "description": "The service ID of the health information user.  Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                          },
                          "name": {
                            "type": "string",
                            "nullable": true,
                            "example": "Cowin",
                            "description": "The name of the health information user. Allows alpha numeric and special characters like \"^[a-zA-Z]+[A-Za-z0-9_\\\\-@,().\\\\s\\\\xa0:/]+\""
                          },
                          "type": {
                            "type": "string",
                            "nullable": true,
                            "example": "HIU",
                            "description": "The type of the health information user. Allows alpha numeric and special characters like  \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          }
                        }
                      },
                      "careContexts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "patientReference",
                            "careContextReference"
                          ],
                          "properties": {
                            "patientReference": {
                              "type": "string",
                              "nullable": false,
                              "example": "batman@tmh",
                              "description": "A patient identifier with which patient is registered in the facility/hospital like abhaAddress @sbx. Allows alpha numeric and special characters like \"^[a-zA-Z0-9_\\\\-@,().\\\"/: ]{0,255}$\""
                            },
                            "careContextReference": {
                              "type": "string",
                              "nullable": false,
                              "example": "Episode1",
                              "description": "An identifier of patient's care context created in HIP. A care context is a group of patient's health data (Not the actual health data). Allows alpha numeric and special characters like  \"^[a-zA-Z0-9_\\\\-@,().\\\"/:| ]{0,255}$\""
                            }
                          }
                        }
                      },
                      "requester": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                          "name",
                          "identifier"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "nullable": false,
                            "example": "abdulkalam@abdm",
                            "description": "The name of the requester"
                          },
                          "identifier": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "value",
                              "type",
                              "system"
                            ],
                            "properties": {
                              "value": {
                                "type": "string",
                                "nullable": false,
                                "example": "REG1",
                                "description": "The type of the identification. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                              },
                              "type": {
                                "type": "string",
                                "nullable": false,
                                "example": "MH1001",
                                "description": "The identification value. Allows alpha numeric character and special characters like  \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                              },
                              "system": {
                                "type": "string",
                                "nullable": false,
                                "example": "https://www.sample.com",
                                "description": "Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                              }
                            }
                          }
                        }
                      },
                      "hiTypes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "Prescription",
                            "DiagnosticReport",
                            "OPConsultation",
                            "DischargeSummary",
                            "ImmunizationRecord",
                            "HealthDocumentRecord",
                            "WellnessRecord",
                            "Invoice"
                          ],
                          "nullable": false,
                          "example": "Prescription"
                        }
                      },
                      "permission": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "accessMode",
                          "dateRange",
                          "dataEraseAt",
                          "frequency"
                        ],
                        "properties": {
                          "accessMode": {
                            "type": "string",
                            "nullable": false,
                            "enum": [
                              "VIEW",
                              "STORE",
                              "STREAM",
                              "QUERY"
                            ],
                            "example": "VIEW"
                          },
                          "dateRange": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "from",
                              "to"
                            ],
                            "properties": {
                              "from": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": false,
                                "example": "2021-09-28T12:30:08.573Z",
                                "description": "Should be UTC date time in ISO format. Allows alpha numeric character and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                              },
                              "to": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": false,
                                "example": "2021-09-28T12:30:08.573Z",
                                "description": "Should be UTC date time in ISO format. Allows alpha numeric character and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                              }
                            }
                          },
                          "dataEraseAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2021-09-28T12:30:08.573Z",
                            "description": "The date at which the consent expire. Should be UTC.  Allows alpha numeric character and special\n    characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\"\ndate time in ISO format"
                          },
                          "frequency": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "unit",
                              "value",
                              "repeats"
                            ],
                            "properties": {
                              "unit": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "HOUR",
                                  "DAY",
                                  "WEEK",
                                  "MONTH",
                                  "YEAR"
                                ]
                              },
                              "value": {
                                "type": "number",
                                "format": "int32",
                                "nullable": false,
                                "example": 1,
                                "description": "The frequency unit value. Should be be a integer"
                              },
                              "repeats": {
                                "type": "number",
                                "format": "int32",
                                "nullable": true,
                                "example": 0,
                                "description": "Should be be a integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "object",
                        "required": [
                          "code",
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Invalid purpose text, it must be in Care Management, Break the Glass, Public Health, Healthcare Payment, Disease Specific Healthcare Research, Self Requested"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Invalid consent purpose refURI"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Invalid from/to date. Date must be a present/before date"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Consent purpose code cannot be null"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Invalid Service ID, it must be Alpha numeric and _ or - in middle"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "<callback_url>/api/v3/hiu/consent/request/on-init": {
      "post": {
        "tags": [
          "consent-management-data-flow-hiu"
        ],
        "operationId": "consent-management 2",
        "summary": "Callback API of consent request for patient HIU.",
        "description": "Result of consent request creation for a patient. <b>consentRequest.id</b> represents the consentrequest id created by CM. The result must contain either <b>consentRequest</b> or the <b>error</b> caused. Reasons for error may be <br><br> Invalid references (e.g patient id, hiu id), purpose, hiTypes, ranges, persmission",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-HIU-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "IN2810014366",
            "description": "Identifier of the health information user to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "In the request body, either ‘consentRequest’ or ‘error’ must be included.<br> <ol type='a'><br/> <li>Incase of success scenario,consentRequest is mandatory and error is optional </li> <li>Incase of failure scenario,error is mandatory and consentRequest is optional</li> <li>response is mandatory object in both the cases</li> </ol>",
                "required": [
                  "consentRequest",
                  "error",
                  "response"
                ],
                "properties": {
                  "consentRequest": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "minimum": 36,
                        "maximum": 50,
                        "example": "f29f0e59-8388-4698-9fe6-05db67aeac46",
                        "description": "The consent request id from a consent. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\-@,. \":/]{0,255}$\""
                      }
                    }
                  },
                  "error": {
                    "type": "object",
                    "nullable": true,
                    "required": [
                      "code",
                      "message"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "nullable": false,
                        "example": "ABDM-1001",
                        "description": "The code for the error to uniquely identify"
                      },
                      "message": {
                        "type": "string",
                        "nullable": false,
                        "example": "unable to connect database",
                        "description": "The appropriate error message"
                      }
                    }
                  },
                  "response": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "requestId"
                    ],
                    "properties": {
                      "requestId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "example": "6f0b4665-a915-4c92-aa36-65afb4a2cd71",
                        "description": "The requestId that was passed. Allows alpha numeric character and special characters like ^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/request/status": {
      "post": {
        "tags": [
          "consent-management-data-flow-hiu"
        ],
        "operationId": "abdm-consent-management 3",
        "summary": "This is ABDM HIE-CM API used by HIU to get consent request status",
        "description": "This API endpoint is used to retrieve the status of a previously initiated consent request. By invoking this API, users can check the current state of their consent request, whether it is pending, approved, denied, or expired. This functionality is essential for maintaining transparency and keeping users informed about the progress of their consent requests. The API supports efficient tracking and management of consent, ensuring that health information exchange processes are conducted in a secure and compliant manner.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-HIU-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "IN2810014366",
            "description": "Identifier of the health information user to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "consentRequestId"
                ],
                "properties": {
                  "consentRequestId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": false,
                    "example": "5f7a535d-a3fd-416b-b069-c97d021fbacd",
                    "description": "The consent request id from a consent. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-9999: "
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid Consent request id"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "<callback_url>/api/v3/hiu/consent/request/on-status": {
      "post": {
        "tags": [
          "consent-management-data-flow-hiu"
        ],
        "operationId": "consent-management 4",
        "summary": "Callback API of consent status request.",
        "description": "This API endpoint is used to provide the result of a previously submitted consent request. The status of the request can be one of the following: REQUESTED, DENIED, or EXPIRED. By invoking this API, the Health Information User (HIU) receives the outcome of their consent request, ensuring that they are informed about the current status. This functionality is essential for maintaining transparency and enabling HIUs to take appropriate actions based on the consent status. The API supports secure and compliant health information exchange, facilitating efficient consent management within the healthcare ecosystem.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-HIU-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "IN2810014366",
            "description": "Identifier of the health information user to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "In the request body, either ‘consentRequest’ or ‘error’ must be included.<br> <ol type='a'><br/> <li>Incase of success scenario,consentRequest is mandatory and error is optional </li> <li>Incase of failure scenario,error is mandatory and consentRequest is optional</li> <li>response is mandatory object in both the cases</li> </ol>",
                "required": [
                  "consentRequest",
                  "response",
                  "error",
                  "resp"
                ],
                "properties": {
                  "consentRequest": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "id",
                      "status"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true,
                        "example": "e5ec415f-c098-40f6-a0db-faa162fc5295",
                        "description": "The consent request id from a consent. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\-@,. \":/]{0,255}$\""
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "REQUESTED",
                          "DENIED",
                          "EXPIRED",
                          "REVOKED"
                        ],
                        "nullable": false,
                        "example": "REQUESTED"
                      }
                    }
                  },
                  "error": {
                    "type": "object",
                    "nullable": true,
                    "required": [
                      "code",
                      "message"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "nullable": false,
                        "example": "ABDM-1001",
                        "description": "The code for the error to uniquely identify"
                      },
                      "message": {
                        "type": "string",
                        "nullable": false,
                        "example": "unable to connect database",
                        "description": "The appropriate error message"
                      }
                    }
                  },
                  "response": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "requestId"
                    ],
                    "properties": {
                      "requestId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "example": "6f0b4665-a915-4c92-aa36-65afb4a2cd71",
                        "description": "The requestId that was passed.Allows alpha numeric character and special characters like ^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}"
                      }
                    }
                  },
                  "resp": {
                    "type": "string",
                    "nullable": false,
                    "example": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "<callback_url>/api/v3/hiu/consent/request/notify": {
      "post": {
        "tags": [
          "consent-management-data-flow-hiu"
        ],
        "operationId": "consent-management 6",
        "summary": "This is a callback api to notify hiu when consent is APPROVED, DENIED or REVOKED.",
        "description": "Health information user will get notified about the consent request granted or denied, consent revoked, consent expired.\nFor consent request grant, status=GRANTED, consentRequestId=<consent-request-id>, and consentArtefacts is an array of generated consent artefact Ids. For consent request expiry, status=EXPIRED, consentRequestId=<consent-request-id> For consent request denied, status=DENIED, consentRequestId=<consent-request-id> For consent revocation, status=REVOKED, consentArtefacts is an array of revoked consent artefact ids.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds."
          },
          {
            "name": "X-HIU-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "IN2810014366",
            "description": "Identifier of the health information user to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "notification"
                ],
                "properties": {
                  "notification": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "consentRequestId",
                      "status",
                      "reason",
                      "consentArtefacts"
                    ],
                    "properties": {
                      "consentRequestId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "example": "e3c74829-3f82-4f94-959e-e10f57bcd57b",
                        "description": "The consent request id from a consent. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\-@,. \":/]{0,255}$\""
                      },
                      "status": {
                        "type": "string",
                        "nullable": false,
                        "enum": [
                          "GRANTED",
                          "EXPIRED",
                          "DENIED",
                          "REQUESTED",
                          "REVOKED"
                        ]
                      },
                      "reason": {
                        "type": "string",
                        "nullable": true,
                        "example": null
                      },
                      "consentArtefacts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "id"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "nullable": true,
                              "example": "6f0b4665-a915-4c92-aa36-65afb4a2cd71"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/request/hiu/on-notify": {
      "post": {
        "tags": [
          "consent-management-data-flow-hiu"
        ],
        "operationId": "abdm-consent-management 3",
        "summary": "This is ABDM HIE-CM API called by HIU to acknowledge the notification sent when a consent request is approved/denied/revoked/expired by the patient.",
        "description": "This API is called by HIU as acknowledgement to consent notifications, specifically for cases when consent is APPROVED, DENIED, or REVOKED or EXPIRED. Notified by CM earlier via Gateway API - <b> /api/v3/hiu/consent/request/notify </b>",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "In the request body, either ‘acknowledgement’ or ‘error’ must be included.<br> <ol type='a'><br/> <li>Incase of success scenario,acknowledgement is mandatory and error is optional </li> <li>Incase of failure scenario,error is mandatory and acknowledgment is optional</li> <li>response is mandatory object in both the cases</li> </ol>",
                "required": [
                  "acknowledgement",
                  "response"
                ],
                "properties": {
                  "acknowledgement": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "nullable": false,
                      "required": [
                        "status",
                        "consentId"
                      ],
                      "properties": {
                        "status": {
                          "type": "string",
                          "nullable": false,
                          "example": "OK",
                          "description": "The status of the notification. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                        },
                        "consentId": {
                          "type": "string",
                          "format": "uuid",
                          "nullable": false,
                          "example": "e3c74829-3f82-4f94-959e-e10f57bcd57b",
                          "description": "The consent artefact id. Should be valid UUID. Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}$\""
                        }
                      }
                    }
                  },
                  "error": {
                    "type": "object",
                    "nullable": true,
                    "required": [
                      "code",
                      "message"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "nullable": false,
                        "example": "ABDM-1001",
                        "description": "The code for the error to uniquely identify"
                      },
                      "message": {
                        "type": "string",
                        "nullable": false,
                        "example": "unable to connect database",
                        "description": "The appropriate error message"
                      }
                    }
                  },
                  "response": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "requestId"
                    ],
                    "properties": {
                      "requestId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "example": "6f0b4665-a915-4c92-aa36-65afb4a2cd71",
                        "description": "The requestId that was passed. it must be in Alpha numeric and - in middle and Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}\""
                      }
                    },
                    "description": "The request id is from the /hiu/consent/request/notify callback"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "object",
                        "required": [
                          "code",
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "RequestId cannot be NULL or Blank"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Invalid status, Please provide a valid status"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Invalid ConsentId, Please provide a valid ConsentId"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/fetch": {
      "post": {
        "tags": [
          "consent-management-data-flow-hiu"
        ],
        "operationId": "abdm-consent-management 5",
        "summary": "This is ABDM HIE-CM API called by HIU to fetch the consent details",
        "description": "This API endpoint is used by Health Information Users (HIUs) to fetch the details of a consent using the consent artefact ID. By invoking this API, HIUs can retrieve comprehensive information about a specific consent, including its status, scope, and any associated conditions. This functionality is essential for ensuring that HIUs have access to accurate and up-to-date consent information, supporting secure and compliant health information exchange. The API facilitates efficient management and verification of consents, enhancing the overall integrity of the consent management process.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-HIU-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "IN2810014366",
            "description": "Identifier of the health information user to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "consentId"
                ],
                "properties": {
                  "consentId": {
                    "type": "string",
                    "format": "uuid",
                    "nullable": false,
                    "example": "5f7a535d-a3fd-416b-b069-c97d021fbacd",
                    "description": "The id of the consent artefact that needs to be fetched. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-9999: "
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid Consent artefact id"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "<callback_url>/api/v3/hiu/consent/on-fetch": {
      "post": {
        "tags": [
          "consent-management-data-flow-hiu"
        ],
        "operationId": "consent-management 6",
        "summary": "This is a callback API called by CM to provide fetched consent artefact details to HIU.",
        "description": "This API endpoint is part of the Ayushman Bharat Digital Mission (ABDM) Health Information Exchange - Consent Management (HIE-CM) system. It is called by the Consent Management (CM) system to fetch a consent artefact. By invoking this API, the CM system retrieves the detailed information of a specific consent artefact, ensuring that the consent data is accurately and securely accessed. This functionality is essential for maintaining the integrity and synchronization of consent records, supporting secure and compliant health information exchange within the healthcare ecosystem.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-HIU-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "IN2810014366",
            "description": "Identifier of the health information user to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "In the request body, either ‘consent’ or ‘error’ must be included.<br> <ol type='a'><br/> <li>Incase of success scenario,consent is mandatory and error is optional </li> <li>Incase of failure scenario,error is mandatory and consent is optional</li> <li>response is mandatory object in both the cases</li> </ol>",
                "required": [
                  "consent",
                  "response",
                  "error"
                ],
                "properties": {
                  "consent": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "status",
                      "consentDetail",
                      "signature"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "GRANTED",
                          "DENIED",
                          "EXPIRED",
                          "REVOKED"
                        ],
                        "nullable": false,
                        "example": "GRANTED"
                      },
                      "consentDetail": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                          "consentId",
                          "purpose",
                          "createdAt",
                          "patient",
                          "hiu",
                          "requester",
                          "hiTypes",
                          "permission",
                          "dataEraseAt",
                          "frequency",
                          "lastUpdated",
                          "careContexts",
                          "schemaVersion",
                          "consentManager"
                        ],
                        "properties": {
                          "consentId": {
                            "type": "string",
                            "nullable": true,
                            "example": "e5ec415f-c098-40f6-a0db-faa162fc5295",
                            "description": "Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          },
                          "hip": {
                            "type": "object",
                            "nullable": true,
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "cowin_hip_01",
                                "description": "The service ID of the health information provider. Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true,
                                "example": "Cowin",
                                "description": "The name of the health information provider. Allows alpha numeric and special characters like _\\-@,():/"
                              },
                              "type": {
                                "type": "string",
                                "nullable": true,
                                "example": "HIP",
                                "description": "The type of the health information provider. Allows alpha numeric and special characters like _\\-@,. \":/"
                              }
                            }
                          },
                          "hiu": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "cowin_hiu_01",
                                "description": "The service ID of the health information user.  Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true,
                                "example": "Cowin",
                                "description": "The name of the health information user. Allows alpha numeric and special characters like _\\-@,():/"
                              },
                              "type": {
                                "type": "string",
                                "nullable": true,
                                "example": "HIU",
                                "description": "The type of the health information user. Allows alpha numeric and special characters like _\\-@,. \":/"
                              }
                            }
                          },
                          "hiTypes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Prescription",
                                "DiagnosticReport",
                                "OPConsultation",
                                "DischargeSummary",
                                "ImmunizationRecord",
                                "HealthDocumentRecord",
                                "WellnessRecord",
                                "Invoice"
                              ],
                              "nullable": false,
                              "example": "Prescription"
                            }
                          },
                          "patient": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "abdulkalam@abdm",
                                "description": "The abha address of the patient. allows alpha numeric character and special characters like ^[a-zA-Z0-9][a-zA-Z0-9_.]+[a-zA-Z0-9]@(abdm|sbx)$"
                              }
                            }
                          },
                          "purpose": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "text",
                              "code",
                              "refUri"
                            ],
                            "properties": {
                              "text": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "Care Management",
                                  "Break the Glass",
                                  "Public Health",
                                  "Healthcare Payment",
                                  "Disease Specific Healthcare Research",
                                  "Self Requested"
                                ]
                              },
                              "code": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "CAREMGT",
                                  "BTG",
                                  "PUBHLTH",
                                  "HPAYMT",
                                  "DSRCH",
                                  "PATRQT"
                                ]
                              },
                              "refUri": {
                                "type": "string",
                                "nullable": false,
                                "example": "www.abc.com",
                                "description": "The reference URL. Should be a valid URL.Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2021-09-28T12:30:08.573Z"
                          },
                          "requester": {
                            "type": "object",
                            "nullable": true,
                            "required": [
                              "name",
                              "identifier"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "nullable": false,
                                "example": "abdulkalam@abdm",
                                "description": "The name of the requester"
                              },
                              "identifier": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "value",
                                  "type",
                                  "system"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "REG1",
                                    "description": "The type of the identification. Allows alpha numeric character and special characters like _\\-@,. \":/"
                                  },
                                  "type": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "MH1001",
                                    "description": "The identification value. Allows alpha numeric character and special characters like _\\-@,. \":/"
                                  },
                                  "system": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "https://www.sample.com",
                                    "description": "Allows alpha numeric character and special characters like _\\-@,. \":/"
                                  }
                                }
                              }
                            }
                          },
                          "permission": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "accessMode",
                              "dateRange",
                              "dataEraseAt",
                              "frequency"
                            ],
                            "properties": {
                              "accessMode": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "VIEW",
                                  "STORE",
                                  "STREAM",
                                  "QUERY"
                                ],
                                "example": "VIEW"
                              },
                              "dateRange": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "from",
                                  "to"
                                ],
                                "properties": {
                                  "from": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": false,
                                    "example": "2021-09-28T12:30:08.573Z",
                                    "description": "Should be UTC date time in ISO format. Allows alpha numeric character and special characters like ^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$"
                                  },
                                  "to": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": false,
                                    "example": "2021-09-28T12:30:08.573Z",
                                    "description": "Should be UTC date time in ISO format.Allows alpha numeric character and special characters like ^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$"
                                  }
                                }
                              }
                            }
                          },
                          "dataEraseAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2021-09-28T12:30:08.573Z",
                            "description": "The date at which the consent expire. Should be UTC date time in ISO format. Allows alpha numeric character and special characters like ^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$"
                          },
                          "frequency": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "unit",
                              "value",
                              "repeats"
                            ],
                            "properties": {
                              "unit": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "HOUR",
                                  "DAY",
                                  "WEEK",
                                  "MONTH",
                                  "YEAR"
                                ]
                              },
                              "value": {
                                "type": "number",
                                "format": "int32",
                                "nullable": false,
                                "example": 1,
                                "description": "The frequency unit value. Should be be a integer. Allows numeric character like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                              },
                              "repeats": {
                                "type": "number",
                                "format": "int32",
                                "nullable": true,
                                "example": 0,
                                "description": "Should be be a integer.Allows numeric character like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                              }
                            }
                          },
                          "lastUpdated": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2021-09-28T12:30:08.573Z",
                            "description": "lastUpdated of the consent.  Should be UTC date time in ISO format. Allows alpha numeric character and special characters like ^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$"
                          },
                          "careContexts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "nullable": true,
                              "required": [
                                "patientReference",
                                "careContextReference"
                              ],
                              "properties": {
                                "patientReference": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "batman@tmh",
                                  "description": "A patient identifier with which patient is registered in the facility/hospital. Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\-@,. \"':|()/]{0,255}$"
                                },
                                "careContextReference": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "Episode1",
                                  "description": "An identifier of patient's care context created in HIP. A care context is a group of patient's health data (Not the actual health data). Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\-@,. \"':|()/]{0,255}$"
                                }
                              }
                            }
                          },
                          "schemaVersion": {
                            "type": "string",
                            "nullable": false,
                            "example": "v3"
                          },
                          "consentManager": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "abdm"
                              }
                            }
                          }
                        }
                      },
                      "signature": {
                        "type": "string",
                        "nullable": false,
                        "example": "Signature of CM as defined in W3C standards; Base64 encoded"
                      }
                    }
                  },
                  "error": {
                    "type": "object",
                    "nullable": true,
                    "example": null
                  },
                  "response": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "requestId"
                    ],
                    "properties": {
                      "requestId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "example": "6f0b4665-a915-4c92-aa36-65afb4a2cd71",
                        "description": "The requestId that was passed.Allows alpha numeric character and special characters like ^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}"
                      }
                    }
                  },
                  "resp": {
                    "type": "string",
                    "nullable": true,
                    "example": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/data-flow/v3/health-information/request": {
      "post": {
        "tags": [
          "consent-management-data-flow-hiu"
        ],
        "operationId": "abdm-data-flow 7",
        "summary": "Health information data request from HIU.",
        "description": "This API facilitates the exchange of health data between Health Information Providers (HIP) and Health Information Users (HIU) within the ABDM system. It ensures secure and efficient data transfer, enabling seamless communication and interoperability between different healthcare entities.\n1. **X-HIU-ID** if the requester is HIU (SERVICE-ID).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-HIU-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "IN2810014366",
            "description": "Identifier of the health information user to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "hiRequest"
                ],
                "properties": {
                  "hiRequest": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "consent",
                      "dateRange",
                      "dataPushUrl",
                      "keyMaterial",
                      "nonce"
                    ],
                    "properties": {
                      "consent": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "nullable": false,
                            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
                            "description": "The consent artefact id for health information request. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          }
                        }
                      },
                      "dateRange": {
                        "type": "object",
                        "nullable": false,
                        "description": "Health information created between this date range is requested",
                        "required": [
                          "from",
                          "to"
                        ],
                        "properties": {
                          "from": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2022-10-06T15:10:00.587Z",
                            "description": "Should be a UTC date time in ISO Format.Allows alpha numeric character and special characters like ^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$"
                          },
                          "to": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2022-11-06T15:10:00.587Z",
                            "description": "Should be a UTC date time in ISO Format.Allows alpha numeric character and special characters like ^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$"
                          }
                        }
                      },
                      "dataPushUrl": {
                        "type": "string",
                        "nullable": false,
                        "example": "https://live.ndhm.gov.in/api-hiu/data/notification",
                        "description": "The URL to which the Health Information Provider has to send the health information data. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":=?/&]{0,255}$\""
                      },
                      "keyMaterial": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "cryptoAlg",
                          "curve",
                          "dhPublicKey"
                        ],
                        "properties": {
                          "cryptoAlg": {
                            "type": "string",
                            "nullable": false,
                            "example": "ECDH.",
                            "description": "Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          },
                          "curve": {
                            "type": "string",
                            "nullable": false,
                            "example": "curve25519",
                            "description": "Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          },
                          "dhPublicKey": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "expiry",
                              "parameters",
                              "keyValue"
                            ],
                            "properties": {
                              "expiry": {
                                "type": "string",
                                "nullable": false,
                                "example": "2022-12-28T13:18:20.742Z",
                                "description": "date and time format \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\""
                              },
                              "parameters": {
                                "type": "string",
                                "nullable": false,
                                "example": "Ephemeral public key.",
                                "description": "Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                              },
                              "keyValue": {
                                "type": "string",
                                "nullable": false,
                                "example": "BFN7KTdOT0jIAExG2A8Jg+01wMPWxptiGqwHRVvtiVEsUq2FR7P2UdqZxJyPJSeR6muai21iQhasNxnhh8I5M+g="
                              }
                            }
                          },
                          "nonce": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": false,
                            "example": "28236d89-cb13-479d-ad71-7a57d5f669a9"
                          }
                        },
                        "description": "The key and algorithm details that is used to encrypt/decrypt the data"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "nullable": false,
                          "example": "ABDM-1015"
                        },
                        "message": {
                          "type": "string",
                          "nullable": false,
                          "example": "Invalid Response"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message",
                    "description"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Credentials"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure you have provided the correct security credentials"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Denied",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "type",
                    "message",
                    "description"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "404"
                    },
                    "type": {
                      "type": "string",
                      "example": "status report"
                    },
                    "message": {
                      "type": "string",
                      "example": "Runtime error"
                    },
                    "description": {
                      "type": "string",
                      "example": "No matching resource found for given API Request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "<callback_url>/api/v3/hiu/health-information/on-request": {
      "post": {
        "tags": [
          "consent-management-data-flow-hiu"
        ],
        "operationId": "data-flow 8",
        "summary": "Health information data request acknowledgement to HIU.",
        "description": "Callback API for acknowledgment of Health information request of HIU. CM calls this API when it has validated the Health Information request given the consent id.<br> Either the hiRequest or error would need to be specified. If the health info request was valid, then the hiRequest.transactionId specifies the transaction context against which HIP would send over the data.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-HIU-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "IN2810014366",
            "description": "Identifier of the health information user to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "In the request body, either ‘hiRequest’ or ‘error’ must be included.<br> <ol type='a'><br/> <li>Incase of success scenario,hiRequest is mandatory and error is optional </li> <li>Incase of failure scenario,error is mandatory and hiRequest is optional</li> <li>response is mandatory object in both the cases</li> </ol>",
                "required": [
                  "hiRequest",
                  "response"
                ],
                "properties": {
                  "hiRequest": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "transactionId",
                      "sessionStatus"
                    ],
                    "properties": {
                      "transactionId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
                        "description": "The UUID generated when the health information request was initiated."
                      },
                      "sessionStatus": {
                        "type": "string",
                        "nullable": false,
                        "example": "REQUESTED",
                        "description": "The status of the health information request that was initiated."
                      }
                    }
                  },
                  "error": {
                    "type": "object",
                    "nullable": true,
                    "required": [
                      "code",
                      "message"
                    ],
                    "properties": {
                      "code": {
                        "type": "string",
                        "nullable": false,
                        "example": "ABDM-1001",
                        "description": "The code for the error to uniquely identify"
                      },
                      "message": {
                        "type": "string",
                        "nullable": false,
                        "example": "unable to connect database",
                        "description": "The appropriate error message"
                      }
                    }
                  },
                  "response": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "requestId"
                    ],
                    "properties": {
                      "requestId": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": false,
                        "example": "6f0b4665-a915-4c92-aa36-65afb4a2cd71",
                        "description": "The requestId that was passed. Allows alpha numeric character and special characters like ^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "server cannot find the requested resource",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "type",
                    "message",
                    "description"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "404"
                    },
                    "type": {
                      "type": "string",
                      "example": "status report"
                    },
                    "message": {
                      "type": "string",
                      "example": "Runtime error"
                    },
                    "description": {
                      "type": "string",
                      "example": "No matching resource found for given API Request"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/data-flow/v3/health-information/notify": {
      "post": {
        "tags": [
          "consent-management-data-flow-hiu",
          "consent-management-data-flow-hip"
        ],
        "operationId": "abdm-data-flow 8",
        "summary": "Notifications corresponding to events during data flow",
        "description": "API called by HIU and HIP during data transfer. </br></br> HIP on the transfer of data would send sessionStatus - one of [TRANSFERRED, FAILED]</br> HIP would also send hiStatus for each careContextReference - on of [DELIVERED, ERRORED]</br> HIU on receipt of data would send sessionStatus - one of [TRANSFERRED, FAILED]. For example, FAILED when data was not sent or if invalid data was sent</br> HIU would also send hiStatus for each careContextReference - one of [OK, ERRORED]",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "notification"
                ],
                "properties": {
                  "notification": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "consentId",
                      "transactionId",
                      "doneAt",
                      "notifier",
                      "statusNotification"
                    ],
                    "properties": {
                      "consentId": {
                        "type": "string",
                        "nullable": false,
                        "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
                        "description": "The consent artefact id with which health information was requested.Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                      },
                      "transactionId": {
                        "type": "string",
                        "nullable": false,
                        "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
                        "description": "The UUID generated when the health information request was initiated.Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                      },
                      "doneAt": {
                        "type": "string",
                        "nullable": false,
                        "example": "2023-01-24T06:35:44.167Z",
                        "description": "The date at which the transaction was initiated. Should be a UTC date time in ISO format. Allows alpha numeric character and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                      },
                      "notifier": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "type",
                          "id"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "nullable": false,
                            "enum": [
                              "HIU",
                              "HIP"
                            ],
                            "description": "The Service ID.Allows alpha numeric characters and special characters like  \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          },
                          "id": {
                            "type": "string",
                            "nullable": false,
                            "example": 100005,
                            "description": "The service ID of the notifier. Allows alpha numeric characters and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          }
                        }
                      },
                      "statusNotification": {
                        "type": "object",
                        "nullable": false,
                        "required": [
                          "sessionStatus",
                          "hipId",
                          "statusResponses"
                        ],
                        "properties": {
                          "sessionStatus": {
                            "type": "string",
                            "nullable": false,
                            "example": "TRANSFERRED",
                            "description": "The status of the health information request that was initiated. Allows alpha numeric characters and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          },
                          "hipId": {
                            "type": "string",
                            "nullable": false,
                            "example": "IN2810014366",
                            "description": "The service ID of the health information provider. Allows alpha numeric characters and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                          },
                          "statusResponses": {
                            "type": "array",
                            "nullable": false,
                            "items": {
                              "type": "object",
                              "required": [
                                "careContextReference",
                                "hiStatus",
                                "description"
                              ],
                              "properties": {
                                "careContextReference": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "10004-20200001768-1",
                                  "description": "The care context reference number.Allows alpha numeric characters and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                                },
                                "hiStatus": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "OK",
                                  "description": "The status of the health information transfer. Allows alpha numeric characters and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "Data received successfully",
                                  "description": "The brief description of the status. Allows alpha numeric characters and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1031"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Invalid request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message",
                    "description"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Credentials"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure you have provided the correct security credentials"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Denied",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "type",
                    "message",
                    "description"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "404"
                    },
                    "type": {
                      "type": "string",
                      "example": "status report"
                    },
                    "message": {
                      "type": "string",
                      "example": "Runtime error"
                    },
                    "description": {
                      "type": "string",
                      "example": "No matching resource found for given API Request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/data-flow/v3/health-information/request/status/{transaction-id}": {
      "get": {
        "tags": [
          "consent-management-data-flow-hiu"
        ],
        "operationId": "abdm-data-flow 9",
        "summary": "API to get the current status of the Health Information Request.",
        "description": "This API endpoint allows Health Information Users (HIU) and Health Information Providers (HIP) to retrieve the current status of a specific Health Information Request. By providing the unique transaction ID, users can query the system to obtain real-time updates on the processing state of their request. This functionality is crucial for ensuring transparency and efficient communication between stakeholders in the health information exchange ecosystem. The API supports various status checks, including pending, in-progress, completed, and failed states.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "transaction-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The health information request transaction id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "transactionId",
                    "status"
                  ],
                  "properties": {
                    "transactionId": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": false,
                      "example": "18235d89-cb13-479d-ad71-7a57d5f669a8"
                    },
                    "status": {
                      "type": "string",
                      "nullable": false,
                      "example": "TRANSFERRED"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message",
                    "description"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Credentials"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure you have provided the correct security credentials"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Access Denied",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "type",
                    "message",
                    "description"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "404"
                    },
                    "type": {
                      "type": "string",
                      "example": "status report"
                    },
                    "message": {
                      "type": "string",
                      "example": "Runtime error"
                    },
                    "description": {
                      "type": "string",
                      "example": "No matching resource found for given API Request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/request/{request-id}/approve": {
      "post": {
        "tags": [
          "consent-management-data-flow-phr"
        ],
        "operationId": "abdm-consent-management 1",
        "summary": "This is ABDM HIE-CM API called by patients to approve the consent request raised by HIU from PHR/mobile application.",
        "description": "This API endpoint is used by the user to approve a consent request, specifying their preferred data access parameters. By invoking this API, the user grants permission for the Health Information User (HIU) to access their health data under the defined conditions. This approval process is essential for ensuring that patient data is shared securely and in accordance with the user’s preferences, supporting a transparent and compliant health information exchange. The API facilitates the establishment of trust and adherence to privacy regulations, enabling ethical and efficient access to health information.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "required": true,
            "description": "JWT Authentication token which was issued by ABDM after successful validation of username and password",
            "schema": {
              "type": "string",
              "format": "bearer",
              "minimum": 1,
              "maximum": 100,
              "example": "eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJ2YXNhbnRoYWt1bWFyLmtlc2F2"
            }
          },
          {
            "name": "request-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The consent request id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "consents"
                ],
                "properties": {
                  "consents": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "hiTypes",
                        "hip",
                        "careContexts",
                        "permission"
                      ],
                      "properties": {
                        "hiTypes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Prescription",
                              "DiagnosticReport",
                              "OPConsultation",
                              "DischargeSummary",
                              "ImmunizationRecord",
                              "HealthDocumentRecord",
                              "WellnessRecord",
                              "Invoice"
                            ],
                            "nullable": false,
                            "example": "Prescription"
                          }
                        },
                        "hip": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "id",
                            "name"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "nullable": false,
                              "example": "ABCD_12345",
                              "description": "The service ID of the health information provider. Allows alpha numeric character and special characters like[A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true,
                              "example": "ABCD Hospital",
                              "description": "The name of the health information provider. Allows alpha numeric and special characters like \"^[a-zA-Z]+[A-Za-z0-9_\\\\-@,().\\\\s\\\\xa0:/]+\""
                            },
                            "type": {
                              "type": "string",
                              "nullable": true,
                              "example": "HIP",
                              "description": "The type of the health information provider. Allows alpha numeric and special characters like\n \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                            }
                          }
                        },
                        "careContexts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "nullable": true,
                            "required": [
                              "patientReference",
                              "careContextReference"
                            ],
                            "properties": {
                              "patientReference": {
                                "type": "string",
                                "nullable": false,
                                "example": "batman@tmh",
                                "description": "A patient identifier with which patient is registered in the facility/hospital. Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                              },
                              "careContextReference": {
                                "type": "string",
                                "nullable": false,
                                "example": "Episode1",
                                "description": "An identifier of patient's care context created in HIP. A care context is a group of patient's health data (Not the actual health data). Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\\\-@,().\\\"/:| ]{0,255}$"
                              }
                            }
                          }
                        },
                        "permission": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "accessMode",
                            "dateRange",
                            "dataEraseAt",
                            "frequency"
                          ],
                          "properties": {
                            "dateRange": {
                              "type": "object",
                              "nullable": false,
                              "required": [
                                "from",
                                "to"
                              ],
                              "properties": {
                                "from": {
                                  "type": "string",
                                  "format": "date-time",
                                  "nullable": false,
                                  "example": "2021-09-28T12:30:08.573Z",
                                  "description": "Should be UTC date time in ISO format. Allows alpha numeric character and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                                },
                                "to": {
                                  "type": "string",
                                  "format": "date-time",
                                  "nullable": false,
                                  "example": "2021-09-28T12:30:08.573Z",
                                  "description": "Should be UTC date time in ISO format. Allows alpha numeric character and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                                }
                              }
                            },
                            "frequency": {
                              "type": "object",
                              "nullable": false,
                              "required": [
                                "unit",
                                "value",
                                "repeats"
                              ],
                              "properties": {
                                "unit": {
                                  "type": "string",
                                  "nullable": false,
                                  "enum": [
                                    "HOUR",
                                    "DAY",
                                    "WEEK",
                                    "MONTH",
                                    "YEAR"
                                  ]
                                },
                                "value": {
                                  "type": "number",
                                  "format": "int32",
                                  "nullable": false,
                                  "example": 1,
                                  "description": "The frequency unit value. Should be be a integer.Allows alpha numeric character and special characters like ^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$"
                                },
                                "repeats": {
                                  "type": "number",
                                  "format": "int32",
                                  "nullable": true,
                                  "example": 0,
                                  "description": "Should be be a integer"
                                }
                              }
                            },
                            "accessMode": {
                              "type": "string",
                              "nullable": false,
                              "enum": [
                                "VIEW",
                                "STORE",
                                "STREAM",
                                "QUERY"
                              ],
                              "example": "VIEW"
                            },
                            "dataEraseAt": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": false,
                              "example": "2021-09-28T12:30:08.573Z",
                              "description": "The date at which the consent expire. Should be UTC date time in ISO format. Allows alpha numeric character and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Successful creation of consent artefact."
                    },
                    "consentIds": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "nullable": true,
                            "example": "f29f0e59-8388-4698-9fe6-05db67aeac46"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "object",
                        "required": [
                          "code",
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Invalid Service ID, it must be Alpha numeric and _ or - in middle"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "from/to date cannot be null or empty"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "from/to date cannot be null or empty"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Frequency unit should not be null or empty"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/request/{request-id}/deny": {
      "post": {
        "tags": [
          "consent-management-data-flow-phr"
        ],
        "operationId": "abdm-consent-management 2",
        "summary": "This is ABDM HIE-CM API called by patients to deny the consent request raised by HIU from PHR/mobile application.",
        "description": "This API endpoint is used to deny a consent request from the Personal Health Record (PHR) or mobile application. By invoking this API, users can reject a consent request, preventing the Health Information User (HIU) from accessing their health data. This functionality is essential for maintaining user control over their health information, ensuring that consents are managed according to the user’s preferences. The API supports secure and compliant health information exchange, enabling users to deny consent requests as needed.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "required": true,
            "description": "JWT Authentication token which was issued by ABDM after successful validation of username and password",
            "schema": {
              "type": "string",
              "format": "bearer",
              "minimum": 1,
              "maximum": 100,
              "example": "eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJ2YXNhbnRoYWt1bWFyLmtlc2F2"
            }
          },
          {
            "name": "request-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The consent request id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "reason"
                ],
                "properties": {
                  "reason": {
                    "type": "string",
                    "nullable": true,
                    "example": "Not authorized",
                    "description": "The reason to deny the consent request. Allows alpha numeric characters and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":]{1,255}$\""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1065: "
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid X Auth token"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/revoke": {
      "post": {
        "tags": [
          "consent-management-data-flow-phr"
        ],
        "operationId": "abdm-consent-management 3",
        "summary": "This is ABDM HIE-CM API called by patients to revoke the granted consent from PHR/mobile application.",
        "description": "This API endpoint is used to revoke a previously approved consent from the Personal Health Record (PHR) or mobile application. By invoking this API, users can withdraw their consent, thereby terminating the permissions granted to access their health data. This functionality is essential for maintaining user control over their health information, ensuring that consents can be managed dynamically and in accordance with the user’s preferences. The API supports secure and compliant health information exchange, enabling users to revoke consent as needed.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "required": true,
            "description": "JWT Authentication token which was issued by ABDM after successful validation of username and password",
            "schema": {
              "type": "string",
              "format": "bearer",
              "minimum": 1,
              "maximum": 100,
              "example": "eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJ2YXNhbnRoYWt1bWFyLmtlc2F2"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "consents"
                ],
                "properties": {
                  "consents": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "nullable": false,
                      "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "description": "The list of consent artefact ids that needs to be revoked. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Successful revocation of list of consents."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1080: "
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid Consent artefact id"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/request/{request-id}": {
      "get": {
        "tags": [
          "consent-management-data-flow-phr"
        ],
        "operationId": "abdm-consent-management 4",
        "summary": "This is ABDM HIE-CM API called to get the consent request details by request id.",
        "description": "This API endpoint is used to retrieve the details of a consent request using the request ID. By invoking this API, users can obtain comprehensive information about a specific consent request, including its status, scope, and any associated conditions. This functionality is essential for ensuring that users have access to accurate and up-to-date consent information, supporting secure and compliant health information exchange. The API facilitates efficient management and verification of consent requests, enhancing the overall integrity of the consent management process.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "required": true,
            "description": "JWT Authentication token which was issued by ABDM after successful validation of username and password",
            "schema": {
              "type": "string",
              "format": "bearer",
              "minimum": 1,
              "maximum": 100,
              "example": "eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJ2YXNhbnRoYWt1bWFyLmtlc2F2"
            }
          },
          {
            "name": "request-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The consent request id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "requestId": {
                      "type": "string",
                      "nullable": false,
                      "example": "e5ec415f-c098-40f6-a0db-faa162fc5295"
                    },
                    "purpose": {
                      "type": "object",
                      "nullable": false,
                      "required": [
                        "text",
                        "code",
                        "refUri"
                      ],
                      "properties": {
                        "text": {
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "Care Management",
                            "Break the Glass",
                            "Public Health",
                            "Healthcare Payment",
                            "Disease Specific Healthcare Research",
                            "Self Requested"
                          ]
                        },
                        "code": {
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "CAREMGT",
                            "BTG",
                            "PUBHLTH",
                            "HPAYMT",
                            "DSRCH",
                            "PATRQT"
                          ]
                        },
                        "refUri": {
                          "type": "string",
                          "nullable": false,
                          "example": "www.abc.com",
                          "description": "The reference URL.Allows alpha numeric and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                        }
                      }
                    },
                    "patient": {
                      "type": "object",
                      "nullable": false,
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "nullable": false,
                          "example": "abdulkalam@abdm",
                          "description": "The abha address of the patient"
                        }
                      }
                    },
                    "hip": {
                      "type": "object",
                      "nullable": true,
                      "required": [
                        "id",
                        "name"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "nullable": false,
                          "example": "cowin_hip_01",
                          "description": "The service ID of the health information provider. Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true,
                          "example": "Cowin",
                          "description": "The name of the health information provider. Allows alpha numeric and special characters like \"^[a-zA-Z]+[A-Za-z0-9_\\\\-@,().\\\\s\\\\xa0:/]+\""
                        },
                        "type": {
                          "type": "string",
                          "nullable": true,
                          "example": "HIP",
                          "description": "The type of the health information provider. Allows alpha numeric and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                        }
                      }
                    },
                    "hiu": {
                      "type": "object",
                      "nullable": false,
                      "required": [
                        "id",
                        "name"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "nullable": false,
                          "example": "cowin_hiu_01",
                          "description": "The service ID of the health information user.  Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true,
                          "example": "Cowin",
                          "description": "The name of the health information user. Allows alpha numeric and special characters like \"^[a-zA-Z]+[A-Za-z0-9_\\\\-@,().\\\\s\\\\xa0:/]+\""
                        },
                        "type": {
                          "type": "string",
                          "nullable": true,
                          "example": "HIU",
                          "description": "The type of the health information user. Allows alpha numeric and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                        }
                      }
                    },
                    "careContexts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                          "patientReference",
                          "careContextReference"
                        ],
                        "properties": {
                          "patientReference": {
                            "type": "string",
                            "nullable": false,
                            "example": "batman@tmh",
                            "description": "A patient identifier with which patient is registered in the facility/hospital"
                          },
                          "careContextReference": {
                            "type": "string",
                            "nullable": false,
                            "example": "Episode1",
                            "description": "An identifier of patient's care context created in HIP. A care context is a group of patient's health data (Not the actual health data)"
                          }
                        }
                      }
                    },
                    "requester": {
                      "type": "object",
                      "nullable": false,
                      "required": [
                        "name",
                        "identifier"
                      ],
                      "properties": {
                        "name": {
                          "type": "string",
                          "nullable": false,
                          "example": "abdulkalam@abdm",
                          "description": "The name of the requester"
                        },
                        "identifier": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "value",
                            "type",
                            "system"
                          ],
                          "properties": {
                            "value": {
                              "type": "string",
                              "nullable": false,
                              "example": "REG1",
                              "description": "The type of the identification. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                            },
                            "type": {
                              "type": "string",
                              "nullable": false,
                              "example": "MH1001",
                              "description": "The identification value. Allows alpha numeric character and special characters like  \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                            },
                            "system": {
                              "type": "string",
                              "nullable": false,
                              "example": "https://www.sample.com",
                              "description": "Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "nullable": false,
                      "enum": [
                        "REQUESTED",
                        "EXPIRED",
                        "DENIED",
                        "GRANTED",
                        "REVOKED"
                      ],
                      "example": "GRANTED"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": false,
                      "example": "2021-09-28T12:30:08.573Z"
                    },
                    "lastUpdated": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": false,
                      "example": "2021-09-28T12:30:08.573Z"
                    },
                    "hiType": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "Prescription",
                          "DiagnosticReport",
                          "OPConsultation",
                          "DischargeSummary",
                          "ImmunizationRecord",
                          "HealthDocumentRecord",
                          "WellnessRecord",
                          "Invoice"
                        ],
                        "nullable": false,
                        "example": "Prescription, DiagnosticReport, OPConsultation, DischargeSummary, ImmunizationRecord, HealthDocumentRecord, WellnessRecord,Invoice"
                      }
                    },
                    "permission": {
                      "type": "object",
                      "nullable": false,
                      "required": [
                        "accessMode",
                        "dateRange",
                        "dataEraseAt",
                        "frequency"
                      ],
                      "properties": {
                        "accessMode": {
                          "type": "string",
                          "nullable": false,
                          "enum": [
                            "VIEW",
                            "STORE",
                            "STREAM",
                            "QUERY"
                          ],
                          "example": "VIEW"
                        },
                        "dateRange": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "from",
                            "to"
                          ],
                          "properties": {
                            "from": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": false,
                              "example": "2021-09-28T12:30:08.573Z",
                              "description": "Should be UTC date time in ISO format"
                            },
                            "to": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": false,
                              "example": "2021-09-28T12:30:08.573Z",
                              "description": "Should be UTC date time in ISO format"
                            }
                          }
                        },
                        "dataEraseAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": false,
                          "example": "2021-09-28T12:30:08.573Z",
                          "description": "The date at which the consent expire. Should be UTC date time in ISO format"
                        },
                        "frequency": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "unit",
                            "value",
                            "repeats"
                          ],
                          "properties": {
                            "unit": {
                              "type": "string",
                              "nullable": false,
                              "enum": [
                                "HOUR",
                                "DAY",
                                "WEEK",
                                "MONTH",
                                "YEAR"
                              ]
                            },
                            "value": {
                              "type": "number",
                              "format": "int32",
                              "nullable": false,
                              "example": 1,
                              "description": "The frequency unit value. Should be be a integer"
                            },
                            "repeats": {
                              "type": "number",
                              "format": "int32",
                              "nullable": true,
                              "example": 0,
                              "description": "Should be be a integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1039"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid Consent request id"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/request": {
      "get": {
        "tags": [
          "consent-management-data-flow-phr"
        ],
        "operationId": "abdm-consent-management 5",
        "summary": "This is ABDM HIE-CM API called to fetch all the consent request details of a patient.",
        "description": " This API endpoint is used to fetch all consent request details for a patient. By invoking this API, users can retrieve a comprehensive list of all consent requests associated with a patient’s health information. This functionality is essential for maintaining transparency and ensuring that users have access to complete and up-to-date consent information. The API supports efficient tracking and management of consent requests, facilitating secure and compliant health information exchange within the healthcare ecosystem.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "required": true,
            "description": "JWT Authentication token which was issued by ABDM after successful validation of username and password",
            "schema": {
              "type": "string",
              "format": "bearer",
              "minimum": 1,
              "maximum": 100,
              "example": "eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJ2YXNhbnRoYWt1bWFyLmtlc2F2"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The number of items to be returned at a time"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The number of items to be skipped before starting to collect data"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "REQUESTED",
                "EXPIRED",
                "DENIED",
                "GRANTED",
                "REVOKED",
                "ALL"
              ]
            },
            "description": "Status of the consent"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "integer",
                      "nullable": false,
                      "example": 10
                    },
                    "limit": {
                      "type": "integer",
                      "nullable": false,
                      "example": 10
                    },
                    "offset": {
                      "type": "integer",
                      "nullable": false,
                      "example": 0
                    },
                    "requests": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "requestId": {
                            "type": "string",
                            "nullable": false,
                            "example": "e5ec415f-c098-40f6-a0db-faa162fc5295"
                          },
                          "purpose": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "text",
                              "code",
                              "refUri"
                            ],
                            "properties": {
                              "text": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "Care Management",
                                  "Break the Glass",
                                  "Public Health",
                                  "Healthcare Payment",
                                  "Disease Specific Healthcare Research",
                                  "Self Requested"
                                ]
                              },
                              "code": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "CAREMGT",
                                  "BTG",
                                  "PUBHLTH",
                                  "HPAYMT",
                                  "DSRCH",
                                  "PATRQT"
                                ]
                              },
                              "refUri": {
                                "type": "string",
                                "nullable": false,
                                "example": "www.abc.com",
                                "description": "The reference URL. Should be a valid URL"
                              }
                            }
                          },
                          "patient": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "abdulkalam@abdm",
                                "description": "The abha address of the patient"
                              }
                            }
                          },
                          "hip": {
                            "type": "object",
                            "nullable": true,
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "cowin_hip_01",
                                "description": "The service ID of the health information provider. Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true,
                                "example": "Cowin",
                                "description": "The name of the health information provider. Allows alpha numeric and special characters like _\\-@,():/"
                              },
                              "type": {
                                "type": "string",
                                "nullable": true,
                                "example": "HIP",
                                "description": "The type of the health information provider. Allows alpha numeric and special characters like _\\-@,. \":/"
                              }
                            }
                          },
                          "hiu": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "cowin_hiu_01",
                                "description": "The service ID of the health information user.  Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true,
                                "example": "Cowin",
                                "description": "The name of the health information user. Allows alpha numeric and special characters like _\\-@,():/"
                              },
                              "type": {
                                "type": "string",
                                "nullable": true,
                                "example": "HIU",
                                "description": "The type of the health information user. Allows alpha numeric and special characters like _\\-@,. \":/"
                              }
                            }
                          },
                          "careContexts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "nullable": true,
                              "required": [
                                "patientReference",
                                "careContextReference"
                              ],
                              "properties": {
                                "patientReference": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "batman@tmh",
                                  "description": "A patient identifier with which patient is registered in the facility/hospital"
                                },
                                "careContextReference": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "Episode1",
                                  "description": "An identifier of patient's care context created in HIP. A care context is a group of patient's health data (Not the actual health data)"
                                }
                              }
                            }
                          },
                          "requester": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "name",
                              "identifier"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "nullable": false,
                                "example": "abdulkalam@abdm",
                                "description": "The name of the requester"
                              },
                              "identifier": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "value",
                                  "type",
                                  "system"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "REG1",
                                    "description": "The type of the identification. Allows alpha numeric character and special characters like _\\-@,. \":/"
                                  },
                                  "type": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "MH1001",
                                    "description": "The identification value. Allows alpha numeric character and special characters like _\\-@,. \":/"
                                  },
                                  "system": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "https://www.sample.com",
                                    "description": "Allows alpha numeric character and special characters like _\\-@,. \":/"
                                  }
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "nullable": false,
                            "enum": [
                              "REQUESTED",
                              "EXPIRED",
                              "DENIED",
                              "GRANTED",
                              "REVOKED"
                            ],
                            "example": "GRANTED"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2021-09-28T12:30:08.573Z"
                          },
                          "lastUpdated": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2021-09-28T12:30:08.573Z"
                          },
                          "hiType": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Prescription",
                                "DiagnosticReport",
                                "OPConsultation",
                                "DischargeSummary",
                                "ImmunizationRecord",
                                "HealthDocumentRecord",
                                "WellnessRecord",
                                "Invoice"
                              ],
                              "nullable": false,
                              "example": "Prescription, DiagnosticReport, OPConsultation, DischargeSummary, ImmunizationRecord, HealthDocumentRecord, WellnessRecord,Invoice"
                            }
                          },
                          "permission": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "accessMode",
                              "dateRange",
                              "dataEraseAt",
                              "frequency"
                            ],
                            "properties": {
                              "accessMode": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "VIEW",
                                  "STORE",
                                  "STREAM",
                                  "QUERY"
                                ],
                                "example": "VIEW"
                              },
                              "dateRange": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "from",
                                  "to"
                                ],
                                "properties": {
                                  "from": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": false,
                                    "example": "2021-09-28T12:30:08.573Z",
                                    "description": "Should be UTC date time in ISO format"
                                  },
                                  "to": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": false,
                                    "example": "2021-09-28T12:30:08.573Z",
                                    "description": "Should be UTC date time in ISO format"
                                  }
                                }
                              },
                              "dataEraseAt": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": false,
                                "example": "2021-09-28T12:30:08.573Z",
                                "description": "The date at which the consent expire. Should be UTC date time in ISO format"
                              },
                              "frequency": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "unit",
                                  "value",
                                  "repeats"
                                ],
                                "properties": {
                                  "unit": {
                                    "type": "string",
                                    "nullable": false,
                                    "enum": [
                                      "HOUR",
                                      "DAY",
                                      "WEEK",
                                      "MONTH",
                                      "YEAR"
                                    ]
                                  },
                                  "value": {
                                    "type": "number",
                                    "format": "int32",
                                    "nullable": false,
                                    "example": 1,
                                    "description": "The frequency unit value. Should be be a integer"
                                  },
                                  "repeats": {
                                    "type": "number",
                                    "format": "int32",
                                    "nullable": true,
                                    "example": 0,
                                    "description": "Should be be a integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/artefact/request/{request-id}": {
      "get": {
        "tags": [
          "consent-management-data-flow-phr"
        ],
        "operationId": "abdm-consent-management 7",
        "summary": "This is ABDM HIE-CM API called to fetch all the consent artefact details associated with a consent request request-id.",
        "description": "This API endpoint is used to fetch all consent artefact details associated with a specific consent request ID. By invoking this API, users can retrieve comprehensive information about all consent artefacts linked to the given request ID, including their status, scope, and any associated conditions. This functionality is essential for ensuring that users have access to accurate and up-to-date consent artefact information, supporting secure and compliant health information exchange. The API facilitates efficient management and verification of consent artefacts, enhancing the overall integrity of the consent management process.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "required": true,
            "description": "JWT Authentication token which was issued by ABDM after successful validation of username and password",
            "schema": {
              "type": "string",
              "format": "bearer",
              "minimum": 1,
              "maximum": 100,
              "example": "eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJ2YXNhbnRoYWt1bWFyLmtlc2F2"
            }
          },
          {
            "name": "request-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Consent request id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "status",
                      "consentDetail",
                      "signature"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "enum": [
                          "GRANTED",
                          "DENIED",
                          "EXPIRED",
                          "REVOKED"
                        ],
                        "nullable": false,
                        "example": "GRANTED"
                      },
                      "consentDetail": {
                        "type": "object",
                        "nullable": true,
                        "required": [
                          "purpose",
                          "patient",
                          "hiu",
                          "requester",
                          "hiTypes",
                          "permission"
                        ],
                        "properties": {
                          "consentId": {
                            "type": "string",
                            "nullable": true,
                            "example": "e5ec415f-c098-40f6-a0db-faa162fc5295",
                            "description": "Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}$\";"
                          },
                          "purpose": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "text",
                              "code",
                              "refUri"
                            ],
                            "properties": {
                              "text": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "Care Management",
                                  "Break the Glass",
                                  "Public Health",
                                  "Healthcare Payment",
                                  "Disease Specific Healthcare Research",
                                  "Self Requested"
                                ]
                              },
                              "code": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "CAREMGT",
                                  "BTG",
                                  "PUBHLTH",
                                  "HPAYMT",
                                  "DSRCH",
                                  "PATRQT"
                                ]
                              },
                              "refUri": {
                                "type": "string",
                                "nullable": false,
                                "example": "www.abc.com",
                                "description": "The reference URL. Should be a valid URL"
                              }
                            }
                          },
                          "patient": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "abdulkalam@abdm",
                                "description": "The abha address of the patient"
                              }
                            }
                          },
                          "hip": {
                            "type": "object",
                            "nullable": true,
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "cowin_hip_01",
                                "description": "The service ID of the health information provider. Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true,
                                "example": "Cowin",
                                "description": "The name of the health information provider. Allows alpha numeric and special characters like _\\-@,():/"
                              },
                              "type": {
                                "type": "string",
                                "nullable": true,
                                "example": "HIP",
                                "description": "The type of the health information provider. Allows alpha numeric and special characters like _\\-@,. \":/"
                              }
                            }
                          },
                          "hiu": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "cowin_hiu_01",
                                "description": "The service ID of the health information user.  Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                              },
                              "name": {
                                "type": "string",
                                "nullable": true,
                                "example": "Cowin",
                                "description": "The name of the health information user. Allows alpha numeric and special characters like _\\-@,():/"
                              },
                              "type": {
                                "type": "string",
                                "nullable": true,
                                "example": "HIU",
                                "description": "The type of the health information user. Allows alpha numeric and special characters like _\\-@,. \":/"
                              }
                            }
                          },
                          "careContexts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "nullable": true,
                              "required": [
                                "patientReference",
                                "careContextReference"
                              ],
                              "properties": {
                                "patientReference": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "batman@tmh",
                                  "description": "A patient identifier with which patient is registered in the facility/hospital"
                                },
                                "careContextReference": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "Episode1",
                                  "description": "An identifier of patient's care context created in HIP. A care context is a group of patient's health data (Not the actual health data)"
                                }
                              }
                            }
                          },
                          "requester": {
                            "type": "object",
                            "nullable": true,
                            "required": [
                              "name",
                              "identifier"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "nullable": false,
                                "example": "abdulkalam@abdm",
                                "description": "The name of the requester"
                              },
                              "identifier": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "value",
                                  "type",
                                  "system"
                                ],
                                "properties": {
                                  "value": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "REG1",
                                    "description": "The type of the identification. Allows alpha numeric character and special characters like _\\-@,. \":/"
                                  },
                                  "type": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "MH1001",
                                    "description": "The identification value. Allows alpha numeric character and special characters like _\\-@,. \":/"
                                  },
                                  "system": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "https://www.sample.com",
                                    "description": "Allows alpha numeric character and special characters like _\\-@,. \":/"
                                  }
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2021-09-28T12:30:08.573Z"
                          },
                          "lastUpdated": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": false,
                            "example": "2021-09-28T12:30:08.573Z"
                          },
                          "schemaVersion": {
                            "type": "string",
                            "nullable": false,
                            "example": "v3"
                          },
                          "consentManager": {
                            "type": "object",
                            "nullable": false,
                            "properties": {
                              "id": {
                                "type": "string",
                                "nullable": false,
                                "example": "abdm"
                              }
                            }
                          },
                          "hiTypes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "Prescription",
                                "DiagnosticReport",
                                "OPConsultation",
                                "DischargeSummary",
                                "ImmunizationRecord",
                                "HealthDocumentRecord",
                                "WellnessRecord",
                                "Invoice"
                              ],
                              "nullable": false,
                              "example": "Prescription"
                            }
                          },
                          "permission": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "accessMode",
                              "dateRange",
                              "dataEraseAt",
                              "frequency"
                            ],
                            "properties": {
                              "accessMode": {
                                "type": "string",
                                "nullable": false,
                                "enum": [
                                  "VIEW",
                                  "STORE",
                                  "STREAM",
                                  "QUERY"
                                ],
                                "example": "VIEW"
                              },
                              "dateRange": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "from",
                                  "to"
                                ],
                                "properties": {
                                  "from": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": false,
                                    "example": "2021-09-28T12:30:08.573Z",
                                    "description": "Should be UTC date time in ISO format"
                                  },
                                  "to": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": false,
                                    "example": "2021-09-28T12:30:08.573Z",
                                    "description": "Should be UTC date time in ISO format"
                                  }
                                }
                              },
                              "dataEraseAt": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": false,
                                "example": "2021-09-28T12:30:08.573Z",
                                "description": "The date at which the consent expire. Should be UTC date time in ISO format"
                              },
                              "frequency": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "unit",
                                  "value",
                                  "repeats"
                                ],
                                "properties": {
                                  "unit": {
                                    "type": "string",
                                    "nullable": false,
                                    "enum": [
                                      "HOUR",
                                      "DAY",
                                      "WEEK",
                                      "MONTH",
                                      "YEAR"
                                    ]
                                  },
                                  "value": {
                                    "type": "number",
                                    "format": "int32",
                                    "nullable": false,
                                    "example": 1,
                                    "description": "The frequency unit value. Should be be a integer"
                                  },
                                  "repeats": {
                                    "type": "number",
                                    "format": "int32",
                                    "nullable": true,
                                    "example": 0,
                                    "description": "Should be be a integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "signature": {
                        "type": "string",
                        "nullable": false,
                        "example": "Signature of CM as defined in W3C standards; Base64 encoded"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/artefact/{artefact-id}": {
      "get": {
        "tags": [
          "consent-management-data-flow-phr"
        ],
        "operationId": "abdm-consent-management 6",
        "summary": "This is ABDM HIE-CM API called to fetch the consent artefact details associated with the artefact-id.",
        "description": "This API endpoint is used to fetch the details of a consent artefact associated with a specific artefact ID. By invoking this API, users can retrieve comprehensive information about the consent artefact, including its status, scope, and any associated conditions. This functionality is essential for ensuring that users have access to accurate and up-to-date consent artefact information, supporting secure and compliant health information exchange. The API facilitates efficient management and verification of consent artefacts, enhancing the overall integrity of the consent management process.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "required": true,
            "description": "JWT Authentication token which was issued by ABDM after successful validation of username and password",
            "schema": {
              "type": "string",
              "format": "bearer",
              "minimum": 1,
              "maximum": 100,
              "example": "eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJ2YXNhbnRoYWt1bWFyLmtlc2F2"
            }
          },
          {
            "name": "artefact-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Consent artefact id"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "consentDetail",
                    "signature"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "GRANTED",
                        "DENIED",
                        "EXPIRED",
                        "REVOKED"
                      ],
                      "nullable": false,
                      "example": "GRANTED"
                    },
                    "consentDetail": {
                      "type": "object",
                      "nullable": true,
                      "required": [
                        "purpose",
                        "patient",
                        "hiu",
                        "requester",
                        "hiTypes",
                        "permission"
                      ],
                      "properties": {
                        "consentId": {
                          "type": "string",
                          "nullable": true,
                          "example": "e5ec415f-c098-40f6-a0db-faa162fc5295",
                          "description": "Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}$\";"
                        },
                        "purpose": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "text",
                            "code",
                            "refUri"
                          ],
                          "properties": {
                            "text": {
                              "type": "string",
                              "nullable": false,
                              "enum": [
                                "Care Management",
                                "Break the Glass",
                                "Public Health",
                                "Healthcare Payment",
                                "Disease Specific Healthcare Research",
                                "Self Requested"
                              ]
                            },
                            "code": {
                              "type": "string",
                              "nullable": false,
                              "enum": [
                                "CAREMGT",
                                "BTG",
                                "PUBHLTH",
                                "HPAYMT",
                                "DSRCH",
                                "PATRQT"
                              ]
                            },
                            "refUri": {
                              "type": "string",
                              "nullable": false,
                              "example": "www.abc.com",
                              "description": "The reference URL. Should be a valid URL"
                            }
                          }
                        },
                        "patient": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "id"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "nullable": false,
                              "example": "abdulkalam@abdm",
                              "description": "The abha address of the patient"
                            }
                          }
                        },
                        "hip": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "id",
                            "name"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "nullable": false,
                              "example": "cowin_hip_01",
                              "description": "The service ID of the health information provider. Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true,
                              "example": "Cowin",
                              "description": "The name of the health information provider. Allows alpha numeric and special characters like _\\-@,():/"
                            },
                            "type": {
                              "type": "string",
                              "nullable": true,
                              "example": "HIP",
                              "description": "The type of the health information provider. Allows alpha numeric and special characters like _\\-@,. \":/"
                            }
                          }
                        },
                        "hiu": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "id",
                            "name"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "nullable": false,
                              "example": "cowin_hiu_01",
                              "description": "The service ID of the health information user.  Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true,
                              "example": "Cowin",
                              "description": "The name of the health information user. Allows alpha numeric and special characters like _\\-@,():/"
                            },
                            "type": {
                              "type": "string",
                              "nullable": true,
                              "example": "HIU",
                              "description": "The type of the health information user. Allows alpha numeric and special characters like _\\-@,. \":/"
                            }
                          }
                        },
                        "careContexts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "nullable": true,
                            "required": [
                              "patientReference",
                              "careContextReference"
                            ],
                            "properties": {
                              "patientReference": {
                                "type": "string",
                                "nullable": false,
                                "example": "batman@tmh",
                                "description": "A patient identifier with which patient is registered in the facility/hospital"
                              },
                              "careContextReference": {
                                "type": "string",
                                "nullable": false,
                                "example": "Episode1",
                                "description": "An identifier of patient's care context created in HIP. A care context is a group of patient's health data (Not the actual health data)"
                              }
                            }
                          }
                        },
                        "requester": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "name",
                            "identifier"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "nullable": false,
                              "example": "abdulkalam@abdm",
                              "description": "The name of the requester"
                            },
                            "identifier": {
                              "type": "object",
                              "nullable": false,
                              "required": [
                                "value",
                                "type",
                                "system"
                              ],
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "REG1",
                                  "description": "The type of the identification. Allows alpha numeric character and special characters like _\\-@,. \":/"
                                },
                                "type": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "MH1001",
                                  "description": "The identification value. Allows alpha numeric character and special characters like _\\-@,. \":/"
                                },
                                "system": {
                                  "type": "string",
                                  "nullable": false,
                                  "example": "https://www.sample.com",
                                  "description": "Allows alpha numeric character and special characters like _\\-@,. \":/"
                                }
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": false,
                          "example": "2021-09-28T12:30:08.573Z"
                        },
                        "lastUpdated": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": false,
                          "example": "2021-09-28T12:30:08.573Z"
                        },
                        "schemaVersion": {
                          "type": "string",
                          "nullable": false,
                          "example": "v3"
                        },
                        "consentManager": {
                          "type": "object",
                          "nullable": false,
                          "properties": {
                            "id": {
                              "type": "string",
                              "nullable": false,
                              "example": "abdm"
                            }
                          }
                        },
                        "hiTypes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Prescription",
                              "DiagnosticReport",
                              "OPConsultation",
                              "DischargeSummary",
                              "ImmunizationRecord",
                              "HealthDocumentRecord",
                              "WellnessRecord",
                              "Invoice"
                            ],
                            "nullable": false,
                            "example": "Prescription"
                          }
                        },
                        "permission": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "accessMode",
                            "dateRange",
                            "dataEraseAt",
                            "frequency"
                          ],
                          "properties": {
                            "accessMode": {
                              "type": "string",
                              "nullable": false,
                              "enum": [
                                "VIEW",
                                "STORE",
                                "STREAM",
                                "QUERY"
                              ],
                              "example": "VIEW"
                            },
                            "dateRange": {
                              "type": "object",
                              "nullable": false,
                              "required": [
                                "from",
                                "to"
                              ],
                              "properties": {
                                "from": {
                                  "type": "string",
                                  "format": "date-time",
                                  "nullable": false,
                                  "example": "2021-09-28T12:30:08.573Z",
                                  "description": "Should be UTC date time in ISO format"
                                },
                                "to": {
                                  "type": "string",
                                  "format": "date-time",
                                  "nullable": false,
                                  "example": "2021-09-28T12:30:08.573Z",
                                  "description": "Should be UTC date time in ISO format"
                                }
                              }
                            },
                            "dataEraseAt": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": false,
                              "example": "2021-09-28T12:30:08.573Z",
                              "description": "The date at which the consent expire. Should be UTC date time in ISO format"
                            },
                            "frequency": {
                              "type": "object",
                              "nullable": false,
                              "required": [
                                "unit",
                                "value",
                                "repeats"
                              ],
                              "properties": {
                                "unit": {
                                  "type": "string",
                                  "nullable": false,
                                  "enum": [
                                    "HOUR",
                                    "DAY",
                                    "WEEK",
                                    "MONTH",
                                    "YEAR"
                                  ]
                                },
                                "value": {
                                  "type": "number",
                                  "format": "int32",
                                  "nullable": false,
                                  "example": 1,
                                  "description": "The frequency unit value. Should be be a integer"
                                },
                                "repeats": {
                                  "type": "number",
                                  "format": "int32",
                                  "nullable": true,
                                  "example": 0,
                                  "description": "Should be be a integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "signature": {
                      "type": "string",
                      "nullable": false,
                      "example": "Signature of CM as defined in W3C standards; Base64 encoded"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1080"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid Consent artefact id"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/artefact": {
      "get": {
        "tags": [
          "consent-management-data-flow-phr"
        ],
        "operationId": "abdm-consent-management 8",
        "summary": "This is ABDM HIE-CM API called to fetch all the consent artefact details of a patient.",
        "description": "This API endpoint is used to fetch all consent artefact details for a patient. By invoking this API, users can retrieve comprehensive information about all consent artefacts associated with the patient’s health information. This functionality is essential for maintaining transparency and ensuring that users have access to complete and up-to-date consent artefact information. The API supports efficient tracking and management of consent artefacts, facilitating secure and compliant health information exchange within the healthcare ecosystem.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for tracking the end-to-end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds, and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "required": true,
            "description": "JWT Authentication token which was issued by ABDM after successful validation of username and password",
            "schema": {
              "type": "string",
              "format": "bearer",
              "minimum": 1,
              "maximum": 100,
              "example": "eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJ2YXNhbnRoYWt1bWFyLmtlc2F2"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The number of items to be returned at a time"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            },
            "description": "The number of items to be skipped before starting to collect data"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "REQUESTED",
                "EXPIRED",
                "DENIED",
                "GRANTED",
                "REVOKED",
                "ALL"
              ]
            },
            "description": "Status of the consent"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "integer",
                      "nullable": false,
                      "example": 10
                    },
                    "limit": {
                      "type": "integer",
                      "nullable": false,
                      "example": 10
                    },
                    "offset": {
                      "type": "integer",
                      "nullable": false,
                      "example": 0
                    },
                    "consentArtefacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "nullable": true,
                        "properties": {
                          "status": {
                            "type": "string",
                            "nullable": false,
                            "enum": [
                              "GRANTED",
                              "EXPIRED",
                              "REVOKED"
                            ]
                          },
                          "consentDetail": {
                            "type": "object",
                            "nullable": false,
                            "required": [
                              "purpose",
                              "patient",
                              "hiu",
                              "requester",
                              "hiTypes",
                              "permission"
                            ],
                            "properties": {
                              "consentId": {
                                "type": "string",
                                "nullable": true,
                                "example": "e5ec415f-c098-40f6-a0db-faa162fc5295",
                                "description": "Allows alpha numeric character and special characters like \"^[0-9a-fA-F]{8}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{4}\\\\b-[0-9a-fA-F]{12}$\";"
                              },
                              "purpose": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "text",
                                  "code",
                                  "refUri"
                                ],
                                "properties": {
                                  "text": {
                                    "type": "string",
                                    "nullable": false,
                                    "enum": [
                                      "Care Management",
                                      "Break the Glass",
                                      "Public Health",
                                      "Healthcare Payment",
                                      "Disease Specific Healthcare Research",
                                      "Self Requested"
                                    ]
                                  },
                                  "code": {
                                    "type": "string",
                                    "nullable": false,
                                    "enum": [
                                      "CAREMGT",
                                      "BTG",
                                      "PUBHLTH",
                                      "HPAYMT",
                                      "DSRCH",
                                      "PATRQT"
                                    ]
                                  },
                                  "refUri": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "www.abc.com",
                                    "description": "The reference URL. Should be a valid URL"
                                  }
                                }
                              },
                              "patient": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "id"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "abdulkalam@abdm",
                                    "description": "The abha address of the patient"
                                  }
                                }
                              },
                              "hip": {
                                "type": "object",
                                "nullable": true,
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "cowin_hip_01",
                                    "description": "The service ID of the health information provider. Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "Cowin",
                                    "description": "The name of the health information provider. Allows alpha numeric and special characters like _\\-@,():/"
                                  },
                                  "type": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "HIP",
                                    "description": "The type of the health information provider. Allows alpha numeric and special characters like _\\-@,. \":/"
                                  }
                                }
                              },
                              "hiu": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "cowin_hiu_01",
                                    "description": "The service ID of the health information user. Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "Cowin",
                                    "description": "The name of the health information user. Allows alpha numeric and special characters like _\\-@,():/"
                                  },
                                  "type": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "HIU",
                                    "description": "The type of the health information user. Allows alpha numeric and special characters like _\\-@,. \":/"
                                  }
                                }
                              },
                              "careContexts": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "nullable": true,
                                  "required": [
                                    "patientReference",
                                    "careContextReference"
                                  ],
                                  "properties": {
                                    "patientReference": {
                                      "type": "string",
                                      "nullable": false,
                                      "example": "batman@tmh",
                                      "description": "A patient identifier with which patient is registered in the facility/hospital"
                                    },
                                    "careContextReference": {
                                      "type": "string",
                                      "nullable": false,
                                      "example": "Episode1",
                                      "description": "An identifier of patient's care context created in HIP. A care context is a group of patient's health data (Not the actual health data)"
                                    }
                                  }
                                }
                              },
                              "requester": {
                                "type": "object",
                                "nullable": true,
                                "required": [
                                  "name",
                                  "identifier"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "abdulkalam@abdm",
                                    "description": "The name of the requester"
                                  },
                                  "identifier": {
                                    "type": "object",
                                    "nullable": false,
                                    "required": [
                                      "value",
                                      "type",
                                      "system"
                                    ],
                                    "properties": {
                                      "value": {
                                        "type": "string",
                                        "nullable": false,
                                        "example": "REG1",
                                        "description": "The type of the identification. Allows alpha numeric character and special characters like _\\-@,. \":/"
                                      },
                                      "type": {
                                        "type": "string",
                                        "nullable": false,
                                        "example": "MH1001",
                                        "description": "The identification value. Allows alpha numeric character and special characters like _\\-@,. \":/"
                                      },
                                      "system": {
                                        "type": "string",
                                        "nullable": false,
                                        "example": "https://www.sample.com",
                                        "description": "Allows alpha numeric character and special characters like _\\-@,. \":/"
                                      }
                                    }
                                  }
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": false,
                                "example": "2021-09-28T12:30:08.573Z"
                              },
                              "lastUpdated": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": false,
                                "example": "2021-09-28T12:30:08.573Z"
                              },
                              "schemaVersion": {
                                "type": "string",
                                "nullable": false,
                                "example": "v3"
                              },
                              "consentManager": {
                                "type": "object",
                                "nullable": false,
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "nullable": false,
                                    "example": "abdm"
                                  }
                                }
                              },
                              "hiTypes": {
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "enum": [
                                    "Prescription",
                                    "DiagnosticReport",
                                    "OPConsultation",
                                    "DischargeSummary",
                                    "ImmunizationRecord",
                                    "HealthDocumentRecord",
                                    "WellnessRecord",
                                    "Invoice"
                                  ],
                                  "nullable": false,
                                  "example": "Prescription"
                                }
                              },
                              "permission": {
                                "type": "object",
                                "nullable": false,
                                "required": [
                                  "accessMode",
                                  "dateRange",
                                  "dataEraseAt",
                                  "frequency"
                                ],
                                "properties": {
                                  "accessMode": {
                                    "type": "string",
                                    "nullable": false,
                                    "enum": [
                                      "VIEW",
                                      "STORE",
                                      "STREAM",
                                      "QUERY"
                                    ],
                                    "example": "VIEW"
                                  },
                                  "dateRange": {
                                    "type": "object",
                                    "nullable": false,
                                    "required": [
                                      "from",
                                      "to"
                                    ],
                                    "properties": {
                                      "from": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": false,
                                        "example": "2021-09-28T12:30:08.573Z",
                                        "description": "Should be UTC date time in ISO format"
                                      },
                                      "to": {
                                        "type": "string",
                                        "format": "date-time",
                                        "nullable": false,
                                        "example": "2021-09-28T12:30:08.573Z",
                                        "description": "Should be UTC date time in ISO format"
                                      }
                                    }
                                  },
                                  "dataEraseAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "nullable": false,
                                    "example": "2021-09-28T12:30:08.573Z",
                                    "description": "The date at which the consent expire. Should be UTC date time in ISO format"
                                  },
                                  "frequency": {
                                    "type": "object",
                                    "nullable": false,
                                    "required": [
                                      "unit",
                                      "value",
                                      "repeats"
                                    ],
                                    "properties": {
                                      "unit": {
                                        "type": "string",
                                        "nullable": false,
                                        "enum": [
                                          "HOUR",
                                          "DAY",
                                          "WEEK",
                                          "MONTH",
                                          "YEAR"
                                        ]
                                      },
                                      "value": {
                                        "type": "number",
                                        "format": "int32",
                                        "nullable": false,
                                        "example": 1,
                                        "description": "The frequency unit value. Should be be a integer"
                                      },
                                      "repeats": {
                                        "type": "number",
                                        "format": "int32",
                                        "nullable": true,
                                        "example": 0,
                                        "description": "Should be be a integer"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "signature": {
                            "type": "string",
                            "format": "byte",
                            "nullable": false,
                            "example": "e8nY601CYDsC0FKoDjSp+7GeQ2s2R8oZncLCz5ce+pEuDOr5bZV0aaHjwJg4b9S9V+twjt4hbojx3fl7egrt8+0c+lfPTi5/bBUAQXCABTfFmtFU7jn65HlTt8kgkiONx26ZBhJ0wX3xjYI72PPtzYIiT5Q08YtDoILA62KceioV7lwuKssw7wC4ECbBAvRuXT121TmtrPhf+0myJATSnaajS06S6OthrKfZLNTUFf3pFiJzqouSTrjNblOX6DT2+JuO3rom1Szz/03c0HQG+wWASv+PO3J6uRs0UI4JvKmM/4tP+Z+/HPKM15K5U5K+4pqf6czKrbIDpkT/kP8bGg=="
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/auto/approve": {
      "post": {
        "tags": [
          "consent-management-data-flow-phr"
        ],
        "operationId": "abdm-consent-management 12",
        "summary": "This is ABDM HIE-CM API called to setup an auto-approval policy for given HIU.",
        "description": "This API endpoint is used to set up an auto-approval policy for a specified Health Information User (HIU). By invoking this API, users can configure automatic approval of consent requests from the designated HIU, streamlining the process of granting access to health data. This functionality is essential for enhancing efficiency and reducing manual intervention in the consent management process. The API supports secure and compliant health information exchange, ensuring that auto-approval policies are implemented in accordance with user preferences and regulatory requirements.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "required": true,
            "description": "JWT Authentication token which was issued by ABDM after successful validation of username and password",
            "schema": {
              "type": "string",
              "format": "bearer",
              "minimum": 1,
              "maximum": 100,
              "example": "eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJ2YXNhbnRoYWt1bWFyLmtlc2F2"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "hiu",
                  "isApplicableForAllHIPs",
                  "includedSources"
                ],
                "properties": {
                  "isApplicableForAllHIPs": {
                    "type": "boolean",
                    "nullable": false,
                    "example": false,
                    "description": "A boolean value to denote if the policy is applicable to all the HIPs or only the specified HIP"
                  },
                  "hiu": {
                    "type": "object",
                    "nullable": false,
                    "required": [
                      "id",
                      "name",
                      "type"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "nullable": false,
                        "example": "cowin_hiu_01",
                        "description": "The service ID of the health information user.  Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true,
                        "example": "Cowin",
                        "description": "The name of the health information user. Allows alpha numeric and special characters like  \"^[a-zA-Z]+[A-Za-z0-9_\\\\-@,().\\\\s\\\\xa0:/]+\""
                      },
                      "type": {
                        "type": "string",
                        "nullable": true,
                        "example": "HIU",
                        "description": "The type of the health information user. Allows alpha numeric and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                      }
                    }
                  },
                  "includedSources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "nullable": false,
                      "required": [
                        "hiTypes",
                        "purpose",
                        "period"
                      ],
                      "properties": {
                        "hiTypes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Prescription",
                              "DiagnosticReport",
                              "OPConsultation",
                              "DischargeSummary",
                              "ImmunizationRecord",
                              "HealthDocumentRecord",
                              "WellnessRecord",
                              "Invoice"
                            ],
                            "nullable": false,
                            "example": "Prescription"
                          }
                        },
                        "purpose": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "text",
                            "code",
                            "refUri"
                          ],
                          "properties": {
                            "text": {
                              "type": "string",
                              "nullable": false,
                              "enum": [
                                "Care Management",
                                "Break the Glass",
                                "Public Health",
                                "Healthcare Payment",
                                "Disease Specific Healthcare Research",
                                "Self Requested"
                              ]
                            },
                            "code": {
                              "type": "string",
                              "nullable": false,
                              "enum": [
                                "CAREMGT",
                                "BTG",
                                "PUBHLTH",
                                "HPAYMT",
                                "DSRCH",
                                "PATRQT"
                              ]
                            },
                            "refUri": {
                              "type": "string",
                              "nullable": false,
                              "example": "www.abc.com",
                              "description": "The reference URL. Should be a valid URL. Allows alpha numeric character and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                            }
                          }
                        },
                        "hip": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "id",
                            "name",
                            "type"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "nullable": false,
                              "example": "cowin_hip_01",
                              "description": "The service ID of the health information provider. Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true,
                              "example": "Cowin",
                              "description": "The name of the health information provider. Allows alpha numeric and special characters like \"^[a-zA-Z]+[A-Za-z0-9_\\\\-@,().\\\\s\\\\xa0:/]+\""
                            },
                            "type": {
                              "type": "string",
                              "nullable": true,
                              "example": "HIP",
                              "description": "The type of the health information provider. Allows alpha numeric and special characters like\n \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                            }
                          }
                        },
                        "period": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "from",
                            "to"
                          ],
                          "properties": {
                            "from": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": false,
                              "example": "2021-09-28T12:30:08.573Z",
                              "description": "Should be UTC date time in ISO format.Allows alpha numeric and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                            },
                            "to": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": false,
                              "example": "2021-09-28T12:30:08.573Z",
                              "description": "Should be UTC date time in ISO format.Allows alpha numeric and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                            }
                          }
                        }
                      }
                    }
                  },
                  "excludedSources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "nullable": false,
                      "required": [
                        "hiTypes",
                        "period"
                      ],
                      "properties": {
                        "hiTypes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Prescription",
                              "DiagnosticReport",
                              "OPConsultation",
                              "DischargeSummary",
                              "ImmunizationRecord",
                              "HealthDocumentRecord",
                              "WellnessRecord",
                              "Invoice"
                            ],
                            "nullable": false,
                            "example": "Prescription"
                          }
                        },
                        "purpose": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "text",
                            "code",
                            "refUri"
                          ],
                          "properties": {
                            "text": {
                              "type": "string",
                              "nullable": false,
                              "enum": [
                                "Care Management",
                                "Break the Glass",
                                "Public Health",
                                "Healthcare Payment",
                                "Disease Specific Healthcare Research",
                                "Self Requested"
                              ]
                            },
                            "code": {
                              "type": "string",
                              "nullable": false,
                              "enum": [
                                "CAREMGT",
                                "BTG",
                                "PUBHLTH",
                                "HPAYMT",
                                "DSRCH",
                                "PATRQT"
                              ]
                            },
                            "refUri": {
                              "type": "string",
                              "nullable": false,
                              "example": "www.abc.com",
                              "description": "The reference URL. Should be a valid URL. Allows alpha numeric and special characters like \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                            }
                          }
                        },
                        "hip": {
                          "type": "object",
                          "nullable": true,
                          "required": [
                            "id",
                            "name",
                            "type"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "nullable": false,
                              "example": "cowin_hip_01",
                              "description": "The service ID of the health information provider. Allows alpha numeric character and special characters like [A-Z a-z 0-9]+[A-Z a-z 0-9 //_//-]*[A-Z a-z 0-9]$"
                            },
                            "name": {
                              "type": "string",
                              "nullable": true,
                              "example": "Cowin",
                              "description": "The name of the health information provider. Allows alpha numeric and special characters like \"^[a-zA-Z]+[A-Za-z0-9_\\\\-@,().\\\\s\\\\xa0:/]+\""
                            },
                            "type": {
                              "type": "string",
                              "nullable": true,
                              "example": "HIP",
                              "description": "The type of the health information provider. Allows alpha numeric and special characters like\n \"^[a-zA-Z0-9_\\\\-@,. \\\":/]{0,255}$\""
                            }
                          }
                        },
                        "period": {
                          "type": "object",
                          "nullable": false,
                          "required": [
                            "from",
                            "to"
                          ],
                          "properties": {
                            "from": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": false,
                              "example": "2021-09-28T12:30:08.573Z",
                              "description": "Should be UTC date time in ISO format.Allows alpha numeric and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                            },
                            "to": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": false,
                              "example": "2021-09-28T12:30:08.573Z",
                              "description": "Should be UTC date time in ISO format. Allows alpha numeric and special characters like \"\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}.\\\\d{3}Z$\""
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "error": {
                        "type": "object",
                        "required": [
                          "code",
                          "message"
                        ],
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "example": [
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Invalid date range, from date should be less than to date"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "Invalid Service ID, it must be Alpha numeric and _ or - in middle"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "from/to date cannot be null or empty"
                      }
                    },
                    {
                      "error": {
                        "code": "ABDM-9999: ",
                        "message": "from/to date cannot be null or empty"
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/auto/approve/{auto-approval-id}/disable": {
      "post": {
        "tags": [
          "consent-management-data-flow-phr"
        ],
        "operationId": "abdm-consent-management 13",
        "summary": "This is ABDM HIE-CM API called to disable the auto-approval policy.",
        "description": "This API endpoint is used to disable an existing auto-approval policy. By invoking this API, users can deactivate the automatic approval of consent requests for the specified Health Information User (HIU). This functionality is essential for maintaining control over consent management, allowing users to modify or revoke auto-approval settings as needed.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "required": true,
            "description": "JWT Authentication token which was issued by ABDM after successful validation of username and password",
            "schema": {
              "type": "string",
              "format": "bearer",
              "minimum": 1,
              "maximum": 100,
              "example": "eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJ2YXNhbnRoYWt1bWFyLmtlc2F2"
            }
          },
          {
            "name": "auto-approval-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The auto approval id"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "nullable": true,
                      "example": "Successfully disabled auto approval policy"
                    },
                    "error": {
                      "type": "object",
                      "nullable": true,
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "nullable": false,
                          "example": "ABDM-1001",
                          "description": "The code for the error to uniquely identify"
                        },
                        "message": {
                          "type": "string",
                          "nullable": false,
                          "example": "unable to connect database",
                          "description": "The appropriate error message"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1065"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid X Auth token"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/hiecm/consent/v3/auto/approve/{auto-approval-id}/enable": {
      "post": {
        "tags": [
          "consent-management-data-flow-phr"
        ],
        "operationId": "abdm-consent-management 14",
        "summary": "This is ABDM HIE-CM API called to enable the auto-approval policy.",
        "description": "This API endpoint is used to enable an existing auto-approval policy. By invoking this API, users can activate the automatic approval of consent requests for the specified Health Information User (HIU). This functionality is essential for streamlining the consent management process, allowing consent requests to be automatically approved without manual intervention. The API supports secure and compliant health information exchange, ensuring that auto-approval policies are implemented in accordance with user preferences and regulatory requirements.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "REQUEST-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "18235d89-cb13-479d-ad71-7a57d5f669a8",
            "description": "Unique UUID for track the end to end request transaction"
          },
          {
            "name": "TIMESTAMP",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "2022-10-06T15:10:00.587Z",
            "description": "Actual time of the request was initiated, ISO 8601 represents date and time by starting with the year, followed by the month, the day, the hour, the minutes, seconds and milliseconds"
          },
          {
            "name": "X-CM-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "sbx",
            "description": "Suffix of the consent manager to which the request was intended"
          },
          {
            "name": "X-AUTH-TOKEN",
            "in": "header",
            "required": true,
            "description": "JWT Authentication token which was issued by ABDM after successful validation of username and password",
            "schema": {
              "type": "string",
              "format": "bearer",
              "minimum": 1,
              "maximum": 100,
              "example": "eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJ2YXNhbnRoYWt1bWFyLmtlc2F2"
            }
          },
          {
            "name": "auto-approval-id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The auto approval id"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "nullable": true,
                      "example": "Successfully enabled auto approval policy"
                    },
                    "error": {
                      "type": "object",
                      "nullable": true,
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "nullable": false,
                          "example": "ABDM-1001",
                          "description": "The code for the error to uniquely identify"
                        },
                        "message": {
                          "type": "string",
                          "nullable": false,
                          "example": "unable to connect database",
                          "description": "The appropriate error message"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1065"
                        },
                        "message": {
                          "type": "string",
                          "example": "Invalid X Auth token"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900901"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    },
                    "description": {
                      "type": "string",
                      "example": "Invalid Credentials. Make sure your API invocation call has a header: 'Authorization : Bearer ACCESS_TOKEN' or 'Authorization : Basic ACCESS_TOKEN' or 'apikey: API_KEY'"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": " Access Denied"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "ABDM-1001: "
                        },
                        "message": {
                          "type": "string",
                          "example": "No data found"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "900900"
                    },
                    "message": {
                      "type": "string",
                      "example": "Unclassified Authentication Failure"
                    },
                    "description": {
                      "type": "string",
                      "example": "Access failure for API: /hiecm/api/v3, version: v3 status: (900900) - Unclassified Authentication Failure"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "nullable": false,
                      "example": "ABDM-1024"
                    },
                    "message": {
                      "type": "string",
                      "nullable": false,
                      "example": "Dependent service unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}