/*
 * Ayushman Bharat Digital Mission - Consent Management
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model.phr;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.*;

/**
 * AbdmDataFlow8RequestNotificationStatusNotification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-12T19:03:49.762814+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class AbdmDataFlow8RequestNotificationStatusNotification {
  public static final String SERIALIZED_NAME_SESSION_STATUS = "sessionStatus";
  @SerializedName(SERIALIZED_NAME_SESSION_STATUS)
  @javax.annotation.Nonnull
  private String sessionStatus;

  public static final String SERIALIZED_NAME_HIP_ID = "hipId";
  @SerializedName(SERIALIZED_NAME_HIP_ID)
  @javax.annotation.Nonnull
  private String hipId;

  public static final String SERIALIZED_NAME_STATUS_RESPONSES = "statusResponses";
  @SerializedName(SERIALIZED_NAME_STATUS_RESPONSES)
  @javax.annotation.Nonnull
  private List<AbdmDataFlow8RequestNotificationStatusNotificationStatusResponsesInner> statusResponses = new ArrayList<>();

  public AbdmDataFlow8RequestNotificationStatusNotification() {
  }

  public AbdmDataFlow8RequestNotificationStatusNotification sessionStatus(@javax.annotation.Nonnull String sessionStatus) {
    this.sessionStatus = sessionStatus;
    return this;
  }

  /**
   * The status of the health information request that was initiated. Allows alpha numeric characters and special characters like \&quot;^[a-zA-Z0-9_\\\\-@,. \\\&quot;:/]{0,255}$\&quot;
   * @return sessionStatus
   */
  @javax.annotation.Nonnull
  public String getSessionStatus() {
    return sessionStatus;
  }

  public void setSessionStatus(@javax.annotation.Nonnull String sessionStatus) {
    this.sessionStatus = sessionStatus;
  }


  public AbdmDataFlow8RequestNotificationStatusNotification hipId(@javax.annotation.Nonnull String hipId) {
    this.hipId = hipId;
    return this;
  }

  /**
   * The service ID of the health information provider. Allows alpha numeric characters and special characters like \&quot;^[a-zA-Z0-9_\\\\-@,. \\\&quot;:/]{0,255}$\&quot;
   * @return hipId
   */
  @javax.annotation.Nonnull
  public String getHipId() {
    return hipId;
  }

  public void setHipId(@javax.annotation.Nonnull String hipId) {
    this.hipId = hipId;
  }


  public AbdmDataFlow8RequestNotificationStatusNotification statusResponses(@javax.annotation.Nonnull List<AbdmDataFlow8RequestNotificationStatusNotificationStatusResponsesInner> statusResponses) {
    this.statusResponses = statusResponses;
    return this;
  }

  public AbdmDataFlow8RequestNotificationStatusNotification addStatusResponsesItem(AbdmDataFlow8RequestNotificationStatusNotificationStatusResponsesInner statusResponsesItem) {
    if (this.statusResponses == null) {
      this.statusResponses = new ArrayList<>();
    }
    this.statusResponses.add(statusResponsesItem);
    return this;
  }

  /**
   * Get statusResponses
   * @return statusResponses
   */
  @javax.annotation.Nonnull
  public List<AbdmDataFlow8RequestNotificationStatusNotificationStatusResponsesInner> getStatusResponses() {
    return statusResponses;
  }

  public void setStatusResponses(@javax.annotation.Nonnull List<AbdmDataFlow8RequestNotificationStatusNotificationStatusResponsesInner> statusResponses) {
    this.statusResponses = statusResponses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbdmDataFlow8RequestNotificationStatusNotification abdmDataFlow8RequestNotificationStatusNotification = (AbdmDataFlow8RequestNotificationStatusNotification) o;
    return Objects.equals(this.sessionStatus, abdmDataFlow8RequestNotificationStatusNotification.sessionStatus) &&
        Objects.equals(this.hipId, abdmDataFlow8RequestNotificationStatusNotification.hipId) &&
        Objects.equals(this.statusResponses, abdmDataFlow8RequestNotificationStatusNotification.statusResponses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessionStatus, hipId, statusResponses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbdmDataFlow8RequestNotificationStatusNotification {\n");
    sb.append("    sessionStatus: ").append(toIndentedString(sessionStatus)).append("\n");
    sb.append("    hipId: ").append(toIndentedString(hipId)).append("\n");
    sb.append("    statusResponses: ").append(toIndentedString(statusResponses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("sessionStatus");
    openapiFields.add("hipId");
    openapiFields.add("statusResponses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("sessionStatus");
    openapiRequiredFields.add("hipId");
    openapiRequiredFields.add("statusResponses");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AbdmDataFlow8RequestNotificationStatusNotification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AbdmDataFlow8RequestNotificationStatusNotification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AbdmDataFlow8RequestNotificationStatusNotification is not found in the empty JSON string", AbdmDataFlow8RequestNotificationStatusNotification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AbdmDataFlow8RequestNotificationStatusNotification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AbdmDataFlow8RequestNotificationStatusNotification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AbdmDataFlow8RequestNotificationStatusNotification.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("sessionStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sessionStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sessionStatus").toString()));
      }
      if (!jsonObj.get("hipId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hipId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hipId").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("statusResponses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusResponses` to be an array in the JSON string but got `%s`", jsonObj.get("statusResponses").toString()));
      }

      JsonArray jsonArraystatusResponses = jsonObj.getAsJsonArray("statusResponses");
      // validate the required field `statusResponses` (array)
      for (int i = 0; i < jsonArraystatusResponses.size(); i++) {
        AbdmDataFlow8RequestNotificationStatusNotificationStatusResponsesInner.validateJsonElement(jsonArraystatusResponses.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AbdmDataFlow8RequestNotificationStatusNotification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AbdmDataFlow8RequestNotificationStatusNotification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AbdmDataFlow8RequestNotificationStatusNotification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AbdmDataFlow8RequestNotificationStatusNotification.class));

       return (TypeAdapter<T>) new TypeAdapter<AbdmDataFlow8RequestNotificationStatusNotification>() {
           @Override
           public void write(JsonWriter out, AbdmDataFlow8RequestNotificationStatusNotification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AbdmDataFlow8RequestNotificationStatusNotification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AbdmDataFlow8RequestNotificationStatusNotification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AbdmDataFlow8RequestNotificationStatusNotification
   * @throws IOException if the JSON string is invalid with respect to AbdmDataFlow8RequestNotificationStatusNotification
   */
  public static AbdmDataFlow8RequestNotificationStatusNotification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AbdmDataFlow8RequestNotificationStatusNotification.class);
  }

  /**
   * Convert an instance of AbdmDataFlow8RequestNotificationStatusNotification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

