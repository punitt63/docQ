/*
 * PHR V3 Swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.*;

/**
 * SearchAuthMethodsAbhaaddress200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-10T18:02:09.764020+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class SearchAuthMethodsAbhaaddress200Response {
  public static final String SERIALIZED_NAME_ABHA_ADDRESS = "abhaAddress";
  @SerializedName(SERIALIZED_NAME_ABHA_ADDRESS)
  @javax.annotation.Nullable
  private String abhaAddress;

  public static final String SERIALIZED_NAME_AUTH_METHODS = "authMethods";
  @SerializedName(SERIALIZED_NAME_AUTH_METHODS)
  @javax.annotation.Nullable
  private List<String> authMethods = new ArrayList<>();

  public static final String SERIALIZED_NAME_BLOCKED_AUTH_METHODS = "blockedAuthMethods";
  @SerializedName(SERIALIZED_NAME_BLOCKED_AUTH_METHODS)
  @javax.annotation.Nullable
  private List<Object> blockedAuthMethods = new ArrayList<>();

  public static final String SERIALIZED_NAME_FULL_NAME = "fullName";
  @SerializedName(SERIALIZED_NAME_FULL_NAME)
  @javax.annotation.Nullable
  private String fullName;

  public static final String SERIALIZED_NAME_HEALTH_ID_NUMBER = "healthIdNumber";
  @SerializedName(SERIALIZED_NAME_HEALTH_ID_NUMBER)
  @javax.annotation.Nullable
  private String healthIdNumber;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  @javax.annotation.Nullable
  private Object message = null;

  public static final String SERIALIZED_NAME_MOBILE = "mobile";
  @SerializedName(SERIALIZED_NAME_MOBILE)
  @javax.annotation.Nullable
  private String mobile;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private String status;

  public SearchAuthMethodsAbhaaddress200Response() {
  }

  public SearchAuthMethodsAbhaaddress200Response abhaAddress(@javax.annotation.Nullable String abhaAddress) {
    this.abhaAddress = abhaAddress;
    return this;
  }

  /**
   * Get abhaAddress
   * @return abhaAddress
   */
  @javax.annotation.Nullable
  public String getAbhaAddress() {
    return abhaAddress;
  }

  public void setAbhaAddress(@javax.annotation.Nullable String abhaAddress) {
    this.abhaAddress = abhaAddress;
  }


  public SearchAuthMethodsAbhaaddress200Response authMethods(@javax.annotation.Nullable List<String> authMethods) {
    this.authMethods = authMethods;
    return this;
  }

  public SearchAuthMethodsAbhaaddress200Response addAuthMethodsItem(String authMethodsItem) {
    if (this.authMethods == null) {
      this.authMethods = new ArrayList<>();
    }
    this.authMethods.add(authMethodsItem);
    return this;
  }

  /**
   * Get authMethods
   * @return authMethods
   */
  @javax.annotation.Nullable
  public List<String> getAuthMethods() {
    return authMethods;
  }

  public void setAuthMethods(@javax.annotation.Nullable List<String> authMethods) {
    this.authMethods = authMethods;
  }


  public SearchAuthMethodsAbhaaddress200Response blockedAuthMethods(@javax.annotation.Nullable List<Object> blockedAuthMethods) {
    this.blockedAuthMethods = blockedAuthMethods;
    return this;
  }

  public SearchAuthMethodsAbhaaddress200Response addBlockedAuthMethodsItem(Object blockedAuthMethodsItem) {
    if (this.blockedAuthMethods == null) {
      this.blockedAuthMethods = new ArrayList<>();
    }
    this.blockedAuthMethods.add(blockedAuthMethodsItem);
    return this;
  }

  /**
   * Get blockedAuthMethods
   * @return blockedAuthMethods
   */
  @javax.annotation.Nullable
  public List<Object> getBlockedAuthMethods() {
    return blockedAuthMethods;
  }

  public void setBlockedAuthMethods(@javax.annotation.Nullable List<Object> blockedAuthMethods) {
    this.blockedAuthMethods = blockedAuthMethods;
  }


  public SearchAuthMethodsAbhaaddress200Response fullName(@javax.annotation.Nullable String fullName) {
    this.fullName = fullName;
    return this;
  }

  /**
   * Get fullName
   * @return fullName
   */
  @javax.annotation.Nullable
  public String getFullName() {
    return fullName;
  }

  public void setFullName(@javax.annotation.Nullable String fullName) {
    this.fullName = fullName;
  }


  public SearchAuthMethodsAbhaaddress200Response healthIdNumber(@javax.annotation.Nullable String healthIdNumber) {
    this.healthIdNumber = healthIdNumber;
    return this;
  }

  /**
   * Get healthIdNumber
   * @return healthIdNumber
   */
  @javax.annotation.Nullable
  public String getHealthIdNumber() {
    return healthIdNumber;
  }

  public void setHealthIdNumber(@javax.annotation.Nullable String healthIdNumber) {
    this.healthIdNumber = healthIdNumber;
  }


  public SearchAuthMethodsAbhaaddress200Response message(@javax.annotation.Nullable Object message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public Object getMessage() {
    return message;
  }

  public void setMessage(@javax.annotation.Nullable Object message) {
    this.message = message;
  }


  public SearchAuthMethodsAbhaaddress200Response mobile(@javax.annotation.Nullable String mobile) {
    this.mobile = mobile;
    return this;
  }

  /**
   * Get mobile
   * @return mobile
   */
  @javax.annotation.Nullable
  public String getMobile() {
    return mobile;
  }

  public void setMobile(@javax.annotation.Nullable String mobile) {
    this.mobile = mobile;
  }


  public SearchAuthMethodsAbhaaddress200Response status(@javax.annotation.Nullable String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchAuthMethodsAbhaaddress200Response searchAuthMethodsAbhaaddress200Response = (SearchAuthMethodsAbhaaddress200Response) o;
    return Objects.equals(this.abhaAddress, searchAuthMethodsAbhaaddress200Response.abhaAddress) &&
        Objects.equals(this.authMethods, searchAuthMethodsAbhaaddress200Response.authMethods) &&
        Objects.equals(this.blockedAuthMethods, searchAuthMethodsAbhaaddress200Response.blockedAuthMethods) &&
        Objects.equals(this.fullName, searchAuthMethodsAbhaaddress200Response.fullName) &&
        Objects.equals(this.healthIdNumber, searchAuthMethodsAbhaaddress200Response.healthIdNumber) &&
        Objects.equals(this.message, searchAuthMethodsAbhaaddress200Response.message) &&
        Objects.equals(this.mobile, searchAuthMethodsAbhaaddress200Response.mobile) &&
        Objects.equals(this.status, searchAuthMethodsAbhaaddress200Response.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(abhaAddress, authMethods, blockedAuthMethods, fullName, healthIdNumber, message, mobile, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchAuthMethodsAbhaaddress200Response {\n");
    sb.append("    abhaAddress: ").append(toIndentedString(abhaAddress)).append("\n");
    sb.append("    authMethods: ").append(toIndentedString(authMethods)).append("\n");
    sb.append("    blockedAuthMethods: ").append(toIndentedString(blockedAuthMethods)).append("\n");
    sb.append("    fullName: ").append(toIndentedString(fullName)).append("\n");
    sb.append("    healthIdNumber: ").append(toIndentedString(healthIdNumber)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("abhaAddress");
    openapiFields.add("authMethods");
    openapiFields.add("blockedAuthMethods");
    openapiFields.add("fullName");
    openapiFields.add("healthIdNumber");
    openapiFields.add("message");
    openapiFields.add("mobile");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchAuthMethodsAbhaaddress200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchAuthMethodsAbhaaddress200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchAuthMethodsAbhaaddress200Response is not found in the empty JSON string", SearchAuthMethodsAbhaaddress200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchAuthMethodsAbhaaddress200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchAuthMethodsAbhaaddress200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("abhaAddress") != null && !jsonObj.get("abhaAddress").isJsonNull()) && !jsonObj.get("abhaAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `abhaAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("abhaAddress").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("authMethods") != null && !jsonObj.get("authMethods").isJsonNull() && !jsonObj.get("authMethods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `authMethods` to be an array in the JSON string but got `%s`", jsonObj.get("authMethods").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("blockedAuthMethods") != null && !jsonObj.get("blockedAuthMethods").isJsonNull() && !jsonObj.get("blockedAuthMethods").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `blockedAuthMethods` to be an array in the JSON string but got `%s`", jsonObj.get("blockedAuthMethods").toString()));
      }
      if ((jsonObj.get("fullName") != null && !jsonObj.get("fullName").isJsonNull()) && !jsonObj.get("fullName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullName").toString()));
      }
      if ((jsonObj.get("healthIdNumber") != null && !jsonObj.get("healthIdNumber").isJsonNull()) && !jsonObj.get("healthIdNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthIdNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthIdNumber").toString()));
      }
      if ((jsonObj.get("mobile") != null && !jsonObj.get("mobile").isJsonNull()) && !jsonObj.get("mobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mobile").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchAuthMethodsAbhaaddress200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchAuthMethodsAbhaaddress200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchAuthMethodsAbhaaddress200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchAuthMethodsAbhaaddress200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchAuthMethodsAbhaaddress200Response>() {
           @Override
           public void write(JsonWriter out, SearchAuthMethodsAbhaaddress200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchAuthMethodsAbhaaddress200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchAuthMethodsAbhaaddress200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchAuthMethodsAbhaaddress200Response
   * @throws IOException if the JSON string is invalid with respect to SearchAuthMethodsAbhaaddress200Response
   */
  public static SearchAuthMethodsAbhaaddress200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchAuthMethodsAbhaaddress200Response.class);
  }

  /**
   * Convert an instance of SearchAuthMethodsAbhaaddress200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

