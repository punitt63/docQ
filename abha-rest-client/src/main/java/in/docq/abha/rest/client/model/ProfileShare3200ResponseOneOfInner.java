/*
 * HIE-CM Profile Share
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * ProfileShare3200ResponseOneOfInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-12T12:11:20.742865+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class ProfileShare3200ResponseOneOfInner {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private Long id;

  public static final String SERIALIZED_NAME_PATIENT_ID = "patientId";
  @SerializedName(SERIALIZED_NAME_PATIENT_ID)
  @javax.annotation.Nullable
  private String patientId;

  public static final String SERIALIZED_NAME_TOKEN_NUMBER = "tokenNumber";
  @SerializedName(SERIALIZED_NAME_TOKEN_NUMBER)
  @javax.annotation.Nullable
  private String tokenNumber;

  public static final String SERIALIZED_NAME_HIP_ID = "hipId";
  @SerializedName(SERIALIZED_NAME_HIP_ID)
  @javax.annotation.Nullable
  private String hipId;

  public static final String SERIALIZED_NAME_HIP_NAME = "hipName";
  @SerializedName(SERIALIZED_NAME_HIP_NAME)
  @javax.annotation.Nullable
  private String hipName;

  public static final String SERIALIZED_NAME_HIP_ADDRESS = "hipAddress";
  @SerializedName(SERIALIZED_NAME_HIP_ADDRESS)
  @javax.annotation.Nullable
  private String hipAddress;

  public static final String SERIALIZED_NAME_EXPIRES_IN = "expiresIn";
  @SerializedName(SERIALIZED_NAME_EXPIRES_IN)
  @javax.annotation.Nullable
  private String expiresIn;

  public static final String SERIALIZED_NAME_CLIENT_ID = "clientId";
  @SerializedName(SERIALIZED_NAME_CLIENT_ID)
  @javax.annotation.Nullable
  private String clientId;

  public static final String SERIALIZED_NAME_DATE_CREATED = "dateCreated";
  @SerializedName(SERIALIZED_NAME_DATE_CREATED)
  @javax.annotation.Nullable
  private String dateCreated;

  public static final String SERIALIZED_NAME_COUNTER_CODE = "counterCode";
  @SerializedName(SERIALIZED_NAME_COUNTER_CODE)
  @javax.annotation.Nullable
  private String counterCode;

  public ProfileShare3200ResponseOneOfInner() {
  }

  public ProfileShare3200ResponseOneOfInner id(@javax.annotation.Nullable Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Long getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable Long id) {
    this.id = id;
  }


  public ProfileShare3200ResponseOneOfInner patientId(@javax.annotation.Nullable String patientId) {
    this.patientId = patientId;
    return this;
  }

  /**
   * Get patientId
   * @return patientId
   */
  @javax.annotation.Nullable
  public String getPatientId() {
    return patientId;
  }

  public void setPatientId(@javax.annotation.Nullable String patientId) {
    this.patientId = patientId;
  }


  public ProfileShare3200ResponseOneOfInner tokenNumber(@javax.annotation.Nullable String tokenNumber) {
    this.tokenNumber = tokenNumber;
    return this;
  }

  /**
   * Get tokenNumber
   * @return tokenNumber
   */
  @javax.annotation.Nullable
  public String getTokenNumber() {
    return tokenNumber;
  }

  public void setTokenNumber(@javax.annotation.Nullable String tokenNumber) {
    this.tokenNumber = tokenNumber;
  }


  public ProfileShare3200ResponseOneOfInner hipId(@javax.annotation.Nullable String hipId) {
    this.hipId = hipId;
    return this;
  }

  /**
   * Get hipId
   * @return hipId
   */
  @javax.annotation.Nullable
  public String getHipId() {
    return hipId;
  }

  public void setHipId(@javax.annotation.Nullable String hipId) {
    this.hipId = hipId;
  }


  public ProfileShare3200ResponseOneOfInner hipName(@javax.annotation.Nullable String hipName) {
    this.hipName = hipName;
    return this;
  }

  /**
   * Get hipName
   * @return hipName
   */
  @javax.annotation.Nullable
  public String getHipName() {
    return hipName;
  }

  public void setHipName(@javax.annotation.Nullable String hipName) {
    this.hipName = hipName;
  }


  public ProfileShare3200ResponseOneOfInner hipAddress(@javax.annotation.Nullable String hipAddress) {
    this.hipAddress = hipAddress;
    return this;
  }

  /**
   * Get hipAddress
   * @return hipAddress
   */
  @javax.annotation.Nullable
  public String getHipAddress() {
    return hipAddress;
  }

  public void setHipAddress(@javax.annotation.Nullable String hipAddress) {
    this.hipAddress = hipAddress;
  }


  public ProfileShare3200ResponseOneOfInner expiresIn(@javax.annotation.Nullable String expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

  /**
   * Get expiresIn
   * @return expiresIn
   */
  @javax.annotation.Nullable
  public String getExpiresIn() {
    return expiresIn;
  }

  public void setExpiresIn(@javax.annotation.Nullable String expiresIn) {
    this.expiresIn = expiresIn;
  }


  public ProfileShare3200ResponseOneOfInner clientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
    return this;
  }

  /**
   * Get clientId
   * @return clientId
   */
  @javax.annotation.Nullable
  public String getClientId() {
    return clientId;
  }

  public void setClientId(@javax.annotation.Nullable String clientId) {
    this.clientId = clientId;
  }


  public ProfileShare3200ResponseOneOfInner dateCreated(@javax.annotation.Nullable String dateCreated) {
    this.dateCreated = dateCreated;
    return this;
  }

  /**
   * Get dateCreated
   * @return dateCreated
   */
  @javax.annotation.Nullable
  public String getDateCreated() {
    return dateCreated;
  }

  public void setDateCreated(@javax.annotation.Nullable String dateCreated) {
    this.dateCreated = dateCreated;
  }


  public ProfileShare3200ResponseOneOfInner counterCode(@javax.annotation.Nullable String counterCode) {
    this.counterCode = counterCode;
    return this;
  }

  /**
   * Get counterCode
   * @return counterCode
   */
  @javax.annotation.Nullable
  public String getCounterCode() {
    return counterCode;
  }

  public void setCounterCode(@javax.annotation.Nullable String counterCode) {
    this.counterCode = counterCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfileShare3200ResponseOneOfInner profileShare3200ResponseOneOfInner = (ProfileShare3200ResponseOneOfInner) o;
    return Objects.equals(this.id, profileShare3200ResponseOneOfInner.id) &&
        Objects.equals(this.patientId, profileShare3200ResponseOneOfInner.patientId) &&
        Objects.equals(this.tokenNumber, profileShare3200ResponseOneOfInner.tokenNumber) &&
        Objects.equals(this.hipId, profileShare3200ResponseOneOfInner.hipId) &&
        Objects.equals(this.hipName, profileShare3200ResponseOneOfInner.hipName) &&
        Objects.equals(this.hipAddress, profileShare3200ResponseOneOfInner.hipAddress) &&
        Objects.equals(this.expiresIn, profileShare3200ResponseOneOfInner.expiresIn) &&
        Objects.equals(this.clientId, profileShare3200ResponseOneOfInner.clientId) &&
        Objects.equals(this.dateCreated, profileShare3200ResponseOneOfInner.dateCreated) &&
        Objects.equals(this.counterCode, profileShare3200ResponseOneOfInner.counterCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, patientId, tokenNumber, hipId, hipName, hipAddress, expiresIn, clientId, dateCreated, counterCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfileShare3200ResponseOneOfInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    patientId: ").append(toIndentedString(patientId)).append("\n");
    sb.append("    tokenNumber: ").append(toIndentedString(tokenNumber)).append("\n");
    sb.append("    hipId: ").append(toIndentedString(hipId)).append("\n");
    sb.append("    hipName: ").append(toIndentedString(hipName)).append("\n");
    sb.append("    hipAddress: ").append(toIndentedString(hipAddress)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    counterCode: ").append(toIndentedString(counterCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("patientId");
    openapiFields.add("tokenNumber");
    openapiFields.add("hipId");
    openapiFields.add("hipName");
    openapiFields.add("hipAddress");
    openapiFields.add("expiresIn");
    openapiFields.add("clientId");
    openapiFields.add("dateCreated");
    openapiFields.add("counterCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProfileShare3200ResponseOneOfInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProfileShare3200ResponseOneOfInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProfileShare3200ResponseOneOfInner is not found in the empty JSON string", ProfileShare3200ResponseOneOfInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProfileShare3200ResponseOneOfInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProfileShare3200ResponseOneOfInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("patientId") != null && !jsonObj.get("patientId").isJsonNull()) && !jsonObj.get("patientId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `patientId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("patientId").toString()));
      }
      if ((jsonObj.get("tokenNumber") != null && !jsonObj.get("tokenNumber").isJsonNull()) && !jsonObj.get("tokenNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tokenNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tokenNumber").toString()));
      }
      if ((jsonObj.get("hipId") != null && !jsonObj.get("hipId").isJsonNull()) && !jsonObj.get("hipId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hipId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hipId").toString()));
      }
      if ((jsonObj.get("hipName") != null && !jsonObj.get("hipName").isJsonNull()) && !jsonObj.get("hipName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hipName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hipName").toString()));
      }
      if ((jsonObj.get("hipAddress") != null && !jsonObj.get("hipAddress").isJsonNull()) && !jsonObj.get("hipAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hipAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hipAddress").toString()));
      }
      if ((jsonObj.get("expiresIn") != null && !jsonObj.get("expiresIn").isJsonNull()) && !jsonObj.get("expiresIn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `expiresIn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("expiresIn").toString()));
      }
      if ((jsonObj.get("clientId") != null && !jsonObj.get("clientId").isJsonNull()) && !jsonObj.get("clientId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientId").toString()));
      }
      if ((jsonObj.get("dateCreated") != null && !jsonObj.get("dateCreated").isJsonNull()) && !jsonObj.get("dateCreated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateCreated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateCreated").toString()));
      }
      if ((jsonObj.get("counterCode") != null && !jsonObj.get("counterCode").isJsonNull()) && !jsonObj.get("counterCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `counterCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("counterCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProfileShare3200ResponseOneOfInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProfileShare3200ResponseOneOfInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProfileShare3200ResponseOneOfInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProfileShare3200ResponseOneOfInner.class));

       return (TypeAdapter<T>) new TypeAdapter<ProfileShare3200ResponseOneOfInner>() {
           @Override
           public void write(JsonWriter out, ProfileShare3200ResponseOneOfInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProfileShare3200ResponseOneOfInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProfileShare3200ResponseOneOfInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProfileShare3200ResponseOneOfInner
   * @throws IOException if the JSON string is invalid with respect to ProfileShare3200ResponseOneOfInner
   */
  public static ProfileShare3200ResponseOneOfInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProfileShare3200ResponseOneOfInner.class);
  }

  /**
   * Convert an instance of ProfileShare3200ResponseOneOfInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

