/*
 * User Initiated Linking Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.*;

/**
 * AbdmUserInitiatedLinkingPhr2200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-12T17:25:36.087359+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class AbdmUserInitiatedLinkingPhr2200Response {
  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  @javax.annotation.Nullable
  private String transactionId;

  public static final String SERIALIZED_NAME_PATIENT = "patient";
  @SerializedName(SERIALIZED_NAME_PATIENT)
  @javax.annotation.Nullable
  private List<AbdmUserInitiatedLinkingPhr2200ResponsePatientInner> patient = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  @javax.annotation.Nullable
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_RESPONSE = "response";
  @SerializedName(SERIALIZED_NAME_RESPONSE)
  @javax.annotation.Nullable
  private AbdmUserInitiatedLinkingPhr2200ResponseResponse response;

  public AbdmUserInitiatedLinkingPhr2200Response() {
  }

  public AbdmUserInitiatedLinkingPhr2200Response transactionId(@javax.annotation.Nullable String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(@javax.annotation.Nullable String transactionId) {
    this.transactionId = transactionId;
  }


  public AbdmUserInitiatedLinkingPhr2200Response patient(@javax.annotation.Nullable List<AbdmUserInitiatedLinkingPhr2200ResponsePatientInner> patient) {
    this.patient = patient;
    return this;
  }

  public AbdmUserInitiatedLinkingPhr2200Response addPatientItem(AbdmUserInitiatedLinkingPhr2200ResponsePatientInner patientItem) {
    if (this.patient == null) {
      this.patient = new ArrayList<>();
    }
    this.patient.add(patientItem);
    return this;
  }

  /**
   * Get patient
   * @return patient
   */
  @javax.annotation.Nullable
  public List<AbdmUserInitiatedLinkingPhr2200ResponsePatientInner> getPatient() {
    return patient;
  }

  public void setPatient(@javax.annotation.Nullable List<AbdmUserInitiatedLinkingPhr2200ResponsePatientInner> patient) {
    this.patient = patient;
  }


  public AbdmUserInitiatedLinkingPhr2200Response createdAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(@javax.annotation.Nullable OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public AbdmUserInitiatedLinkingPhr2200Response response(@javax.annotation.Nullable AbdmUserInitiatedLinkingPhr2200ResponseResponse response) {
    this.response = response;
    return this;
  }

  /**
   * Get response
   * @return response
   */
  @javax.annotation.Nullable
  public AbdmUserInitiatedLinkingPhr2200ResponseResponse getResponse() {
    return response;
  }

  public void setResponse(@javax.annotation.Nullable AbdmUserInitiatedLinkingPhr2200ResponseResponse response) {
    this.response = response;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbdmUserInitiatedLinkingPhr2200Response abdmUserInitiatedLinkingPhr2200Response = (AbdmUserInitiatedLinkingPhr2200Response) o;
    return Objects.equals(this.transactionId, abdmUserInitiatedLinkingPhr2200Response.transactionId) &&
        Objects.equals(this.patient, abdmUserInitiatedLinkingPhr2200Response.patient) &&
        Objects.equals(this.createdAt, abdmUserInitiatedLinkingPhr2200Response.createdAt) &&
        Objects.equals(this.response, abdmUserInitiatedLinkingPhr2200Response.response);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionId, patient, createdAt, response);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbdmUserInitiatedLinkingPhr2200Response {\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    patient: ").append(toIndentedString(patient)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("transactionId");
    openapiFields.add("patient");
    openapiFields.add("createdAt");
    openapiFields.add("response");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AbdmUserInitiatedLinkingPhr2200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AbdmUserInitiatedLinkingPhr2200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AbdmUserInitiatedLinkingPhr2200Response is not found in the empty JSON string", AbdmUserInitiatedLinkingPhr2200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AbdmUserInitiatedLinkingPhr2200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AbdmUserInitiatedLinkingPhr2200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("transactionId") != null && !jsonObj.get("transactionId").isJsonNull()) && !jsonObj.get("transactionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionId").toString()));
      }
      if (jsonObj.get("patient") != null && !jsonObj.get("patient").isJsonNull()) {
        JsonArray jsonArraypatient = jsonObj.getAsJsonArray("patient");
        if (jsonArraypatient != null) {
          // ensure the json data is an array
          if (!jsonObj.get("patient").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `patient` to be an array in the JSON string but got `%s`", jsonObj.get("patient").toString()));
          }

          // validate the optional field `patient` (array)
          for (int i = 0; i < jsonArraypatient.size(); i++) {
            AbdmUserInitiatedLinkingPhr2200ResponsePatientInner.validateJsonElement(jsonArraypatient.get(i));
          };
        }
      }
      // validate the optional field `response`
      if (jsonObj.get("response") != null && !jsonObj.get("response").isJsonNull()) {
        AbdmUserInitiatedLinkingPhr2200ResponseResponse.validateJsonElement(jsonObj.get("response"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AbdmUserInitiatedLinkingPhr2200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AbdmUserInitiatedLinkingPhr2200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AbdmUserInitiatedLinkingPhr2200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AbdmUserInitiatedLinkingPhr2200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<AbdmUserInitiatedLinkingPhr2200Response>() {
           @Override
           public void write(JsonWriter out, AbdmUserInitiatedLinkingPhr2200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AbdmUserInitiatedLinkingPhr2200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AbdmUserInitiatedLinkingPhr2200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AbdmUserInitiatedLinkingPhr2200Response
   * @throws IOException if the JSON string is invalid with respect to AbdmUserInitiatedLinkingPhr2200Response
   */
  public static AbdmUserInitiatedLinkingPhr2200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AbdmUserInitiatedLinkingPhr2200Response.class);
  }

  /**
   * Convert an instance of AbdmUserInitiatedLinkingPhr2200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

