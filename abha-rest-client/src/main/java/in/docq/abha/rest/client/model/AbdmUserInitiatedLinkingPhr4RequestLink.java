/*
 * User Initiated Linking Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model;

import com.google.gson.*;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.*;

/**
 * AbdmUserInitiatedLinkingPhr4RequestLink
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-12T17:25:36.087359+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class AbdmUserInitiatedLinkingPhr4RequestLink {
  public static final String SERIALIZED_NAME_REFERENCE_NUMBER = "referenceNumber";
  @SerializedName(SERIALIZED_NAME_REFERENCE_NUMBER)
  @javax.annotation.Nonnull
  private UUID referenceNumber;

  /**
   * The authenticationType. Allows alpha numeric characters and special characters like \&quot;^[a-zA-Z0-9_\\\\-@,. \\\&quot;&#39;:|()/]{0,255}$\&quot;
   */
  @JsonAdapter(AuthenticationTypeEnum.Adapter.class)
  public enum AuthenticationTypeEnum {
    DIRECT("DIRECT"),
    
    MEDIATED("MEDIATED");

    private String value;

    AuthenticationTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AuthenticationTypeEnum fromValue(String value) {
      for (AuthenticationTypeEnum b : AuthenticationTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AuthenticationTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AuthenticationTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AuthenticationTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AuthenticationTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      AuthenticationTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_AUTHENTICATION_TYPE = "authenticationType";
  @SerializedName(SERIALIZED_NAME_AUTHENTICATION_TYPE)
  @javax.annotation.Nonnull
  private AuthenticationTypeEnum authenticationType;

  public static final String SERIALIZED_NAME_META = "meta";
  @SerializedName(SERIALIZED_NAME_META)
  @javax.annotation.Nonnull
  private AbdmUserInitiatedLinkingPhr4RequestLinkMeta meta;

  public AbdmUserInitiatedLinkingPhr4RequestLink() {
  }

  public AbdmUserInitiatedLinkingPhr4RequestLink referenceNumber(@javax.annotation.Nonnull UUID referenceNumber) {
    this.referenceNumber = referenceNumber;
    return this;
  }

  /**
   * The link reference number. Allows alpha numeric characters and special characters like \&quot;^[a-zA-Z0-9_\\\\-@,. ()/:\\\\\\\\]{0,255}$\&quot;
   * @return referenceNumber
   */
  @javax.annotation.Nonnull
  public UUID getReferenceNumber() {
    return referenceNumber;
  }

  public void setReferenceNumber(@javax.annotation.Nonnull UUID referenceNumber) {
    this.referenceNumber = referenceNumber;
  }


  public AbdmUserInitiatedLinkingPhr4RequestLink authenticationType(@javax.annotation.Nonnull AuthenticationTypeEnum authenticationType) {
    this.authenticationType = authenticationType;
    return this;
  }

  /**
   * The authenticationType. Allows alpha numeric characters and special characters like \&quot;^[a-zA-Z0-9_\\\\-@,. \\\&quot;&#39;:|()/]{0,255}$\&quot;
   * @return authenticationType
   */
  @javax.annotation.Nonnull
  public AuthenticationTypeEnum getAuthenticationType() {
    return authenticationType;
  }

  public void setAuthenticationType(@javax.annotation.Nonnull AuthenticationTypeEnum authenticationType) {
    this.authenticationType = authenticationType;
  }


  public AbdmUserInitiatedLinkingPhr4RequestLink meta(@javax.annotation.Nonnull AbdmUserInitiatedLinkingPhr4RequestLinkMeta meta) {
    this.meta = meta;
    return this;
  }

  /**
   * Get meta
   * @return meta
   */
  @javax.annotation.Nonnull
  public AbdmUserInitiatedLinkingPhr4RequestLinkMeta getMeta() {
    return meta;
  }

  public void setMeta(@javax.annotation.Nonnull AbdmUserInitiatedLinkingPhr4RequestLinkMeta meta) {
    this.meta = meta;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbdmUserInitiatedLinkingPhr4RequestLink abdmUserInitiatedLinkingPhr4RequestLink = (AbdmUserInitiatedLinkingPhr4RequestLink) o;
    return Objects.equals(this.referenceNumber, abdmUserInitiatedLinkingPhr4RequestLink.referenceNumber) &&
        Objects.equals(this.authenticationType, abdmUserInitiatedLinkingPhr4RequestLink.authenticationType) &&
        Objects.equals(this.meta, abdmUserInitiatedLinkingPhr4RequestLink.meta);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceNumber, authenticationType, meta);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbdmUserInitiatedLinkingPhr4RequestLink {\n");
    sb.append("    referenceNumber: ").append(toIndentedString(referenceNumber)).append("\n");
    sb.append("    authenticationType: ").append(toIndentedString(authenticationType)).append("\n");
    sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("referenceNumber");
    openapiFields.add("authenticationType");
    openapiFields.add("meta");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("referenceNumber");
    openapiRequiredFields.add("authenticationType");
    openapiRequiredFields.add("meta");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AbdmUserInitiatedLinkingPhr4RequestLink
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AbdmUserInitiatedLinkingPhr4RequestLink.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AbdmUserInitiatedLinkingPhr4RequestLink is not found in the empty JSON string", AbdmUserInitiatedLinkingPhr4RequestLink.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AbdmUserInitiatedLinkingPhr4RequestLink.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AbdmUserInitiatedLinkingPhr4RequestLink` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AbdmUserInitiatedLinkingPhr4RequestLink.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("referenceNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `referenceNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("referenceNumber").toString()));
      }
      if (!jsonObj.get("authenticationType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authenticationType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authenticationType").toString()));
      }
      // validate the required field `authenticationType`
      AuthenticationTypeEnum.validateJsonElement(jsonObj.get("authenticationType"));
      // validate the required field `meta`
      AbdmUserInitiatedLinkingPhr4RequestLinkMeta.validateJsonElement(jsonObj.get("meta"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AbdmUserInitiatedLinkingPhr4RequestLink.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AbdmUserInitiatedLinkingPhr4RequestLink' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AbdmUserInitiatedLinkingPhr4RequestLink> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AbdmUserInitiatedLinkingPhr4RequestLink.class));

       return (TypeAdapter<T>) new TypeAdapter<AbdmUserInitiatedLinkingPhr4RequestLink>() {
           @Override
           public void write(JsonWriter out, AbdmUserInitiatedLinkingPhr4RequestLink value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AbdmUserInitiatedLinkingPhr4RequestLink read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AbdmUserInitiatedLinkingPhr4RequestLink given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AbdmUserInitiatedLinkingPhr4RequestLink
   * @throws IOException if the JSON string is invalid with respect to AbdmUserInitiatedLinkingPhr4RequestLink
   */
  public static AbdmUserInitiatedLinkingPhr4RequestLink fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AbdmUserInitiatedLinkingPhr4RequestLink.class);
  }

  /**
   * Convert an instance of AbdmUserInitiatedLinkingPhr4RequestLink to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

