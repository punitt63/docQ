/*
 * ABHA
 * It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent. <br><br><b>API Security</b> <br> You need Authorization Token and X-HIP-ID to consume APIs. <br><br> <b>Notes:</b> <ol> <li><b>In order to have access to HealthID APIs, your clientId must have hid role in gateway. So if you want access to these APIs then please request it in your ABDM on-boarding request.</b></li> <li><b>In order to have access to Integrated Programs HealthID APIs, your clientId must have integrated_program role in gateway. So if you want access to these APIs then please request it in your ABDM on-boarding request. Also, you will need to share integrated program benefit name to be used in this case.</b></li> <li><b>When calling APIs, please ensure that Authorization header must have format as <i>Bearer {Token_Value}</i>. Please note the prefix Bearer followed by space before token value.</b></li> <li><b>Check the state and district codes from LGD directory <a href=\"https://lgdirectory.gov.in/\">here.</a></b></li> <li><b>Highlighted Changes in the API Version 3:</b> <ul> <li>Sensitive data (Data like OTP, Aadhaar Number, Password, Username etc.) have to be encrypted.</li> <li>Data is encrypted by the public certificate. The certificate can be downloaded from the <code>/v3/auth/cert</code> API under the <b>Authentication</b> tag in version 3.</li> <li>RSA Encryption to encrypt the data. Cipher Type - <b>RSA/ECB/PKCS1Padding</b>. An online tool to encrypt data is available <a href=\"https://www.devglan.com/online-tools/rsa-encryption-decryption\">here.</a></li> </ul> </li> </ol> <br> <b> <font size=\"3\">Validations Regex Patterns </font> </b> <ol><li> Mobile Number  Validation :<code>  <b>(\\\\+91|0)?[1-9][0-9]{9}</b></code> </li> <li>Date of Birth Validation : <code> <b>\\d{4}\\-(0[0-9]|1[012])\\-(0[0-9]|[12][0-9]|3[01])$</b> </code> </li> <li>Abha Address Validation: <code><b>(^[a-zA-Z0-9]+[.]?[a-zA-Z0-9]*[_]?[a-zA-Z0-9]+$)|(^[a-zA-Z0-9]+[_]?[a-zA-Z0-9]*[.]?[a-zA-Z0-9]+$)</b></code></li> <li> ABHA Number Validation: <code><b>\\d{2}-\\d{4}-\\d{4}-\\d{4}</b></code> <li> OTP Validation: <b><code>[0-9]{6}</code></b></li> <li>Password Validation: <b><code>^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$^*_-])[A-Za-z\\d!@#$%^&*_-]{8,}$</b></code></li> <li>UUID Validation: <code>^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$</code></li> <li>Email  Validation: <code>^[a-zA-Z0-9_-]+(?:\\.[a-zA-Z0-9_-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$ </code></li> <li>Driving License Validation: <code>^[a-zA-Z0-9_-]+(?:\\.[a-zA-Z0-9_-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$</code></li> <li> Transaction Id Validation: <code>^[a-zA-Z0-9_-]+(?:\\.[a-zA-Z0-9_-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$</code></li><br><br> </ol><b> <font size=\"3\"> Brief Description about Regex Patterns </b> <ol><li><b>Mobile Number Validation</b><ol type=\"a\"><li>Optional Country Code or Leading Zero: Matches either +91 (country code for India) or 0, or neither, at the beginning of the string.</li><li>First Digit Non-Zero: Ensures the first digit after the country code or zero is a digit from 1 to 9 (non-zero).</li><li>Phone Number Length: Validates that the phone number part is exactly 10 digits long.</li><li>For example: <code>9876543210,+911234567890 </code></li></ol></li><li><b>Date of Birth Validation</b><ol type=\"a\"><li>Year Validation: Matches exactly 4 digits. Ensures the year is a 4-digit number.</li><li>Month Validation: Matches a hyphen followed by either a digit from 0-9 (for months 01 to 09), a digit from 10 to 12 (for months 10 to 12). Ensures the month is between 01 and 12.</li><li>Day Validation: Matches a hyphen followed by either a digit from 0-9 (for days 01 to 09), a digit from 10 to 29 (for days 10 to 29), a digit from 30 to 31 (for days 30 and 31). Ensures the day is between 01 and 31.</li><li>For Example: <code>2023-04-15</code></li></ol></li></ol><ol start=\"3\"><li><b>Abha Address Validation</b><ol type=\"a\"><li>Start and End with Alphanumeric Characters: Ensures the address starts with one or more alphanumeric characters. Ensures the address ends with one or more alphanumeric characters.</li><li>Optional Period (.): Allows for an optional period (.) anywhere within the address.</li><li>Optional Underscore: Allows for an optional underscore (_) in between the alphanumeric characters.</li><li>Length Validation: Ensures the ABHA address is between 8 to 18 characters long.</li><li>For Example: <code>john.doe_123, alice_smith.456, user.name_1</code></li></ol></li></ol><ol start=\"4\"><li><b>ABHA Number Validation</b><ol type=\"a\"><li>Two Digit Prefix: Matches exactly 2 digits at the beginning.</li><li>Four Digit Groups: Matches exactly 4 digits, separated by hyphens.</li><li>Hyphen Separation: Each group of digits is separated by a hyphen.</li><li>Complete Format: Ensures the ABHA number is in the format 11-XXXX-XXXX-XXXX.</li></ol></li></ol> <ol start=\"5\"><li><b>OTP Validation</b><ol type=\"a\"><li>Digit Only: Ensures that only numeric digits (0-9) are used.</li><li>Exact Length: Ensures the OTP is exactly 6 digits long.</li><li>Complete Format: The OTP must match the format [0-9]{6}.</li><li>For Example: <code>123456, 654321, 000123</code></li></ol> <li><b>Password Validation</b><ol type=\"a\"><li>Uppercase Letter: Ensures the password contains at least one uppercase letter (A-Z).</li><li>Digit: Ensures the password contains at least one digit (0-9).</li><li>Special Character: Ensures the password contains at least one special character from <code>!@#$%^&*-</code>.</li><li>Length: Ensures the password is at least 8 characters long.</li><li>Allowed Characters: The password can contain uppercase letters, lowercase letters, digits, and the specified special characters.</li><li>Complete Format: The password must match the pattern ^(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*-])[A-Za-z\\d!@#$%^&*-]{8,}$.</li><li>For Example: <code>Password1!, Secure#123, My_Pass4$ </code></li></ol></li> <li><b>UUID Validation</b><ol type=\"a\"><li><b>8</b> Hexadecimal Characters: Ensures the UUID starts with exactly 8 hexadecimal characters (0-9, a-f).</li><li><b>4</b> Hexadecimal Characters: Ensures the next segment contains exactly 4 hexadecimal characters.</li><li>Version Indicator: Ensures the next segment starts with a digit between 1 and 5, followed by 3 hexadecimal characters.</li><li>Variant Indicator: Ensures the next segment starts with a digit from 8, 9, a, or b, followed by 3 hexadecimal characters.</li><li><b>12</b> Hexadecimal Characters: Ensures the UUID ends with exactly 12 hexadecimal characters.</li><li>Hyphen Separation: Each segment is separated by a hyphen (-).</li><li>Complete Format: The UUID must match the pattern ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$.</li><li>For Example: <code>123e4567-e89b-12d3-a456-426614174000, 550e8400-e29b-41d4-a716-446655440000</code></li></ol></li><li><b>Email Validation</b><ol type = \"a\"><li>Alphanumeric Characters: Allows letters (a-z, A-Z) and numbers (0-9), as well as underscores (_) and hyphens (-).</li><li>Dot Separator: Allows dots (.) within the local part of the email.</li><li>At Symbol: Requires an @ symbol separating the local part and the domain part.</li><li>Domain: Allows letters (a-z, A-Z), numbers (0-9), and hyphens (-).</li><li>Domain Extension: Requires a domain extension with only letters, ranging from 2 to 7 characters.</li><li>Complete Format: The email must match the pattern ^[a-zA-Z0-9_-]+(?:\\\\.[a-zA-Z0-9_-]+)*@(?:[a-zA-Z0-9-]+\\\\.)+[a-zA-Z]{2,7}$.</li><li>For Example: <code>user.name@example.com, username_123@domain.org</code></li></ol></li><li><b>Driving License Validation</b><ol type = \"a\"><li>Alphanumeric Characters: The license must start with letters (a-z, A-Z) or numbers (0-9).</li><li>Optional Separator: Allows for an optional hyphen (-) or space ( ) as a separator, but only one.</li><li>Continuation: After the optional separator, the license continues with letters (a-z, A-Z) or numbers (0-9).</li><li>Complete Format: The license must match the pattern ^[a-zA-Z0-9]+([-\\s]{0,1})[a-zA-Z0-9]+$.</li><li>For Example: <code>ABC123, ABC-123, ABC 123</code></li></ol></li><li><b>Transaction Id Validation</b><ol type=\"a\"><li>8 Hexadecimal Characters: Ensures the Txn Id starts with exactly 8 hexadecimal characters (0-9, a-f).</li><li>4 Hexadecimal Characters: Ensures the next segment contains exactly 4 hexadecimal characters.</li><li>Version Indicator: Ensures the next segment starts with a digit between 1 and 5, followed by 3 hexadecimal characters.</li><li>Variant Indicator: Ensures the next segment starts with a digit from 8, 9, a, or b, followed by 3 hexadecimal characters.</li><li>12 Hexadecimal Characters: Ensures the Txn Id ends with exactly 12 hexadecimal characters.</li><li>Hyphen Separation: Each segment is separated by a hyphen (-).</li><li>Complete Format: The Txn Id must match the pattern ^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$.</li><li>For Example: <code>123e4567-e89b-12d3-a456-426614174000, 550e8400-e29b-41d4-a716-446655440000</code></li></ol></li>
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.api;


import com.google.gson.reflect.TypeToken;
import in.docq.abha.rest.client.*;
import in.docq.abha.rest.client.model.AbhaApiV3EnrollmentAuthByAbdmPost200Response;
import in.docq.abha.rest.client.model.AbhaApiV3EnrollmentAuthByAbdmPostRequest;
import in.docq.abha.rest.client.model.AbhaApiV3EnrollmentRequestOtpPost200Response;
import in.docq.abha.rest.client.model.AbhaApiV3EnrollmentRequestOtpPostRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AbhaEnrollmentViaDlApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AbhaEnrollmentViaDlApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AbhaEnrollmentViaDlApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for abhaApiV3EnrollmentAuthByAbdmPost
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param abhaApiV3EnrollmentAuthByAbdmPostRequest &lt;b&gt;Below is the Request Body description:&lt;br&gt;&lt;/b&gt;&lt;br&gt; &lt;!--&lt;br&gt; &lt;div&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;loginHint &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;Aadhaar,Abha And Mobile Number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;encrypted mobile-number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;Aadhaar/Abha/mobile&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;hr&gt; --&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;authData&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Contains the authentication methods and OTP details.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;authMethods:&lt;/strong&gt; Specifies the method of authentication. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;OTP\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;otp:&lt;/strong&gt; Contains the OTP value and transaction ID. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;otpValue:&lt;/strong&gt; The encrypted OTP provided by the user. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted OTP}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;txnId:&lt;/strong&gt; The transaction ID associated with the OTP request. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP verification.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-enrol\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-enrol&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;,&lt;code&gt;email-verify&lt;/code&gt;, &lt;code&gt;dl-flow&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt; Mobile Update-Verify OTP-Positive flow:&lt;/strong&gt; Indicates a successful request. The response includes a message indicating that the OTP has been verified successfully.&lt;/li&gt; &lt;/ol&gt;  &lt;ol start &#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update-Verify OTP-OTP Expired:&lt;/strong&gt; This error occurs when the OTP provided for verification has expired. The OTP must be used within the valid time frame to ensure secure authentication.&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) verification process.&lt;br&gt;&lt;br&gt;    &lt;ol&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid OTP Value:&lt;/strong&gt; This error occurs when the OTP value provided for verification is invalid. The OTP must be correctly formatted and match the one sent to the user’s registered mobile number&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;2\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid Transaction Id:&lt;/strong&gt;  This error occurs when the transaction ID provided in the request is invalid. The transaction ID is essential for tracking the OTP request and ensuring that the correct OTP is verified.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;3\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid Scope:&lt;/strong&gt; This error occurs when the scope provided in the OTP verification request for mobile update is invalid. The scope specifies the purpose of the OTP verification, such as abha-enrol, mobile-verify, etc.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;4\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid AuthMethod - :&lt;/strong&gt;  This error occurs when the authentication method provided in the OTP verification request for mobile update is invalid. The authMethods field must contain valid authentication methods such as otp.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Credentials </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The 500 response code indicates an Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call abhaApiV3EnrollmentAuthByAbdmPostCall(String REQUEST_ID, String TIMESTAMP, AbhaApiV3EnrollmentAuthByAbdmPostRequest abhaApiV3EnrollmentAuthByAbdmPostRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = abhaApiV3EnrollmentAuthByAbdmPostRequest;

        // create path and map variables
        String localVarPath = "/abha/api/v3/enrollment/auth/byAbdm";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (REQUEST_ID != null) {
            localVarHeaderParams.put("REQUEST-ID", localVarApiClient.parameterToString(REQUEST_ID));
        }


        if (TIMESTAMP != null) {
            localVarHeaderParams.put("TIMESTAMP", localVarApiClient.parameterToString(TIMESTAMP));
        }


        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call abhaApiV3EnrollmentAuthByAbdmPostValidateBeforeCall(String REQUEST_ID, String TIMESTAMP, AbhaApiV3EnrollmentAuthByAbdmPostRequest abhaApiV3EnrollmentAuthByAbdmPostRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'REQUEST_ID' is set
        if (REQUEST_ID == null) {
            throw new ApiException("Missing the required parameter 'REQUEST_ID' when calling abhaApiV3EnrollmentAuthByAbdmPost(Async)");
        }

        // verify the required parameter 'TIMESTAMP' is set
        if (TIMESTAMP == null) {
            throw new ApiException("Missing the required parameter 'TIMESTAMP' when calling abhaApiV3EnrollmentAuthByAbdmPost(Async)");
        }

        return abhaApiV3EnrollmentAuthByAbdmPostCall(REQUEST_ID, TIMESTAMP, abhaApiV3EnrollmentAuthByAbdmPostRequest, _callback);

    }

    /**
     * UseCase : Verify- Mobile OTP, Email OTP, DL OTP
     * This API verifies via Mobile OTP. After verifying OTP successfully mobile will be mobile number will be updated for further communication for perticular ABHA number.   &lt;br&gt; &lt;br&gt;**Example of OTP Request**&lt;br&gt;  **Mobile Update - Verify OTP:** When the user wants to verify the Mobile Number for communication purpose.&lt;br&gt; **ABHA Enrolment via DL-Verify OTP:**  When the user wants to enroll using their DL Number, an OTP is sent to the mobile number registered with their DL.&lt;br&gt; &lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;br&gt; **1.**OTP will be valid for 10 minute only &lt;br&gt;&lt;br&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param abhaApiV3EnrollmentAuthByAbdmPostRequest &lt;b&gt;Below is the Request Body description:&lt;br&gt;&lt;/b&gt;&lt;br&gt; &lt;!--&lt;br&gt; &lt;div&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;loginHint &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;Aadhaar,Abha And Mobile Number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;encrypted mobile-number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;Aadhaar/Abha/mobile&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;hr&gt; --&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;authData&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Contains the authentication methods and OTP details.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;authMethods:&lt;/strong&gt; Specifies the method of authentication. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;OTP\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;otp:&lt;/strong&gt; Contains the OTP value and transaction ID. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;otpValue:&lt;/strong&gt; The encrypted OTP provided by the user. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted OTP}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;txnId:&lt;/strong&gt; The transaction ID associated with the OTP request. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP verification.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-enrol\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-enrol&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;,&lt;code&gt;email-verify&lt;/code&gt;, &lt;code&gt;dl-flow&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @return AbhaApiV3EnrollmentAuthByAbdmPost200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt; Mobile Update-Verify OTP-Positive flow:&lt;/strong&gt; Indicates a successful request. The response includes a message indicating that the OTP has been verified successfully.&lt;/li&gt; &lt;/ol&gt;  &lt;ol start &#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update-Verify OTP-OTP Expired:&lt;/strong&gt; This error occurs when the OTP provided for verification has expired. The OTP must be used within the valid time frame to ensure secure authentication.&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) verification process.&lt;br&gt;&lt;br&gt;    &lt;ol&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid OTP Value:&lt;/strong&gt; This error occurs when the OTP value provided for verification is invalid. The OTP must be correctly formatted and match the one sent to the user’s registered mobile number&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;2\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid Transaction Id:&lt;/strong&gt;  This error occurs when the transaction ID provided in the request is invalid. The transaction ID is essential for tracking the OTP request and ensuring that the correct OTP is verified.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;3\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid Scope:&lt;/strong&gt; This error occurs when the scope provided in the OTP verification request for mobile update is invalid. The scope specifies the purpose of the OTP verification, such as abha-enrol, mobile-verify, etc.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;4\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid AuthMethod - :&lt;/strong&gt;  This error occurs when the authentication method provided in the OTP verification request for mobile update is invalid. The authMethods field must contain valid authentication methods such as otp.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Credentials </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The 500 response code indicates an Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public AbhaApiV3EnrollmentAuthByAbdmPost200Response abhaApiV3EnrollmentAuthByAbdmPost(String REQUEST_ID, String TIMESTAMP, AbhaApiV3EnrollmentAuthByAbdmPostRequest abhaApiV3EnrollmentAuthByAbdmPostRequest) throws ApiException {
        ApiResponse<AbhaApiV3EnrollmentAuthByAbdmPost200Response> localVarResp = abhaApiV3EnrollmentAuthByAbdmPostWithHttpInfo(REQUEST_ID, TIMESTAMP, abhaApiV3EnrollmentAuthByAbdmPostRequest);
        return localVarResp.getData();
    }

    /**
     * UseCase : Verify- Mobile OTP, Email OTP, DL OTP
     * This API verifies via Mobile OTP. After verifying OTP successfully mobile will be mobile number will be updated for further communication for perticular ABHA number.   &lt;br&gt; &lt;br&gt;**Example of OTP Request**&lt;br&gt;  **Mobile Update - Verify OTP:** When the user wants to verify the Mobile Number for communication purpose.&lt;br&gt; **ABHA Enrolment via DL-Verify OTP:**  When the user wants to enroll using their DL Number, an OTP is sent to the mobile number registered with their DL.&lt;br&gt; &lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;br&gt; **1.**OTP will be valid for 10 minute only &lt;br&gt;&lt;br&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param abhaApiV3EnrollmentAuthByAbdmPostRequest &lt;b&gt;Below is the Request Body description:&lt;br&gt;&lt;/b&gt;&lt;br&gt; &lt;!--&lt;br&gt; &lt;div&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;loginHint &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;Aadhaar,Abha And Mobile Number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;encrypted mobile-number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;Aadhaar/Abha/mobile&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;hr&gt; --&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;authData&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Contains the authentication methods and OTP details.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;authMethods:&lt;/strong&gt; Specifies the method of authentication. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;OTP\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;otp:&lt;/strong&gt; Contains the OTP value and transaction ID. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;otpValue:&lt;/strong&gt; The encrypted OTP provided by the user. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted OTP}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;txnId:&lt;/strong&gt; The transaction ID associated with the OTP request. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP verification.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-enrol\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-enrol&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;,&lt;code&gt;email-verify&lt;/code&gt;, &lt;code&gt;dl-flow&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @return ApiResponse&lt;AbhaApiV3EnrollmentAuthByAbdmPost200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt; Mobile Update-Verify OTP-Positive flow:&lt;/strong&gt; Indicates a successful request. The response includes a message indicating that the OTP has been verified successfully.&lt;/li&gt; &lt;/ol&gt;  &lt;ol start &#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update-Verify OTP-OTP Expired:&lt;/strong&gt; This error occurs when the OTP provided for verification has expired. The OTP must be used within the valid time frame to ensure secure authentication.&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) verification process.&lt;br&gt;&lt;br&gt;    &lt;ol&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid OTP Value:&lt;/strong&gt; This error occurs when the OTP value provided for verification is invalid. The OTP must be correctly formatted and match the one sent to the user’s registered mobile number&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;2\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid Transaction Id:&lt;/strong&gt;  This error occurs when the transaction ID provided in the request is invalid. The transaction ID is essential for tracking the OTP request and ensuring that the correct OTP is verified.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;3\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid Scope:&lt;/strong&gt; This error occurs when the scope provided in the OTP verification request for mobile update is invalid. The scope specifies the purpose of the OTP verification, such as abha-enrol, mobile-verify, etc.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;4\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid AuthMethod - :&lt;/strong&gt;  This error occurs when the authentication method provided in the OTP verification request for mobile update is invalid. The authMethods field must contain valid authentication methods such as otp.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Credentials </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The 500 response code indicates an Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AbhaApiV3EnrollmentAuthByAbdmPost200Response> abhaApiV3EnrollmentAuthByAbdmPostWithHttpInfo(String REQUEST_ID, String TIMESTAMP, AbhaApiV3EnrollmentAuthByAbdmPostRequest abhaApiV3EnrollmentAuthByAbdmPostRequest) throws ApiException {
        okhttp3.Call localVarCall = abhaApiV3EnrollmentAuthByAbdmPostValidateBeforeCall(REQUEST_ID, TIMESTAMP, abhaApiV3EnrollmentAuthByAbdmPostRequest, null);
        Type localVarReturnType = new TypeToken<AbhaApiV3EnrollmentAuthByAbdmPost200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * UseCase : Verify- Mobile OTP, Email OTP, DL OTP (asynchronously)
     * This API verifies via Mobile OTP. After verifying OTP successfully mobile will be mobile number will be updated for further communication for perticular ABHA number.   &lt;br&gt; &lt;br&gt;**Example of OTP Request**&lt;br&gt;  **Mobile Update - Verify OTP:** When the user wants to verify the Mobile Number for communication purpose.&lt;br&gt; **ABHA Enrolment via DL-Verify OTP:**  When the user wants to enroll using their DL Number, an OTP is sent to the mobile number registered with their DL.&lt;br&gt; &lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;br&gt; **1.**OTP will be valid for 10 minute only &lt;br&gt;&lt;br&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param abhaApiV3EnrollmentAuthByAbdmPostRequest &lt;b&gt;Below is the Request Body description:&lt;br&gt;&lt;/b&gt;&lt;br&gt; &lt;!--&lt;br&gt; &lt;div&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;loginHint &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;Aadhaar,Abha And Mobile Number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;encrypted mobile-number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;Aadhaar/Abha/mobile&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;hr&gt; --&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;authData&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Contains the authentication methods and OTP details.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;authMethods:&lt;/strong&gt; Specifies the method of authentication. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;OTP\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;otp:&lt;/strong&gt; Contains the OTP value and transaction ID. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;otpValue:&lt;/strong&gt; The encrypted OTP provided by the user. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted OTP}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;txnId:&lt;/strong&gt; The transaction ID associated with the OTP request. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP verification.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-enrol\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-enrol&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;,&lt;code&gt;email-verify&lt;/code&gt;, &lt;code&gt;dl-flow&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt; Mobile Update-Verify OTP-Positive flow:&lt;/strong&gt; Indicates a successful request. The response includes a message indicating that the OTP has been verified successfully.&lt;/li&gt; &lt;/ol&gt;  &lt;ol start &#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update-Verify OTP-OTP Expired:&lt;/strong&gt; This error occurs when the OTP provided for verification has expired. The OTP must be used within the valid time frame to ensure secure authentication.&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) verification process.&lt;br&gt;&lt;br&gt;    &lt;ol&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid OTP Value:&lt;/strong&gt; This error occurs when the OTP value provided for verification is invalid. The OTP must be correctly formatted and match the one sent to the user’s registered mobile number&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;2\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid Transaction Id:&lt;/strong&gt;  This error occurs when the transaction ID provided in the request is invalid. The transaction ID is essential for tracking the OTP request and ensuring that the correct OTP is verified.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;3\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid Scope:&lt;/strong&gt; This error occurs when the scope provided in the OTP verification request for mobile update is invalid. The scope specifies the purpose of the OTP verification, such as abha-enrol, mobile-verify, etc.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;4\&quot;&gt;    &lt;li&gt;    &lt;p&gt;&lt;strong&gt;Invalid AuthMethod - :&lt;/strong&gt;  This error occurs when the authentication method provided in the OTP verification request for mobile update is invalid. The authMethods field must contain valid authentication methods such as otp.&lt;/p&gt;    &lt;/li&gt;    &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Credentials </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> The 500 response code indicates an Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call abhaApiV3EnrollmentAuthByAbdmPostAsync(String REQUEST_ID, String TIMESTAMP, AbhaApiV3EnrollmentAuthByAbdmPostRequest abhaApiV3EnrollmentAuthByAbdmPostRequest, final ApiCallback<AbhaApiV3EnrollmentAuthByAbdmPost200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = abhaApiV3EnrollmentAuthByAbdmPostValidateBeforeCall(REQUEST_ID, TIMESTAMP, abhaApiV3EnrollmentAuthByAbdmPostRequest, _callback);
        Type localVarReturnType = new TypeToken<AbhaApiV3EnrollmentAuthByAbdmPost200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for abhaApiV3EnrollmentEnrolByDocumentPost
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param body &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt; &lt;div&gt; &lt;table&gt;  &lt;body&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create Enrolment Number&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt;  This API endpoint is used to create a CHILD ABHA number for a minor using their demographic details. The CHILD ABHA number helps in uniquely identifying minors and linking their health records across multiple systems:&lt;/strong&gt; &lt;ul&gt;  &lt;/li&gt; &lt;li&gt;&lt;strong&gt;documentType:&lt;/strong&gt;  The user personal document.. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;DRIVING_LICENCE&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;documentId:(required)&lt;/strong&gt; The user&#39;s document Id. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;DL number&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;firstName :(required)&lt;/strong&gt;The user first name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;John&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;gender:(required)&lt;/strong&gt; The user’s gender. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;M&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;middleName:(required)&lt;/strong&gt; The user’s middle name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Doe&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Full Name :&lt;/strong&gt; The user’s full name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt; JOHN Doe Xyz&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;LastName:&lt;/strong&gt; The user’s Last name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt; xyz&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;dob:(required)&lt;/strong&gt; The user date of birth. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;27-07-2000&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;frontSidePhoto:(required)&lt;/strong&gt; The user front side photo. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;base 64 photo&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;backSidePhoto:(required)&lt;/strong&gt;The back front side photo. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;base 64 photo&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;address:(required)&lt;/strong&gt; The user’s residential address. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Street number 4, Sector 12&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;state:(required)&lt;/strong&gt;the user’s state. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Delhi&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;statecode:(required)&lt;/strong&gt;  The code of the user’s state code. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;27&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;district:(required)&lt;/strong&gt;  the user’s district. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Pune&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;&lt;li&gt;&lt;strong&gt;pinCode:(required)&lt;/strong&gt;  The user’s postal code&lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;208564&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &#39; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Create Enrolment Number - Account Already Exists:&lt;/strong&gt; This scenario occurs when an attempt is made to create an enrollment number for a user who already has an existing ABHA number&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Create Enrolment Number - Positive Flow:&lt;/strong&gt; This scenario occurs when the enrollment number is successfully created for a new user.&lt;/li&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Transaction Id </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The 422 response code indicates an Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> &lt;b&gt;Internal Server Error&lt;/b&gt;&lt;br&gt;&lt;br&gt;  An Internal Server Error (500) indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call abhaApiV3EnrollmentEnrolByDocumentPostCall(String REQUEST_ID, String TIMESTAMP, Object body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/abha/api/v3/enrollment/enrol/byDocument";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (REQUEST_ID != null) {
            localVarHeaderParams.put("REQUEST-ID", localVarApiClient.parameterToString(REQUEST_ID));
        }


        if (TIMESTAMP != null) {
            localVarHeaderParams.put("TIMESTAMP", localVarApiClient.parameterToString(TIMESTAMP));
        }


        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call abhaApiV3EnrollmentEnrolByDocumentPostValidateBeforeCall(String REQUEST_ID, String TIMESTAMP, Object body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'REQUEST_ID' is set
        if (REQUEST_ID == null) {
            throw new ApiException("Missing the required parameter 'REQUEST_ID' when calling abhaApiV3EnrollmentEnrolByDocumentPost(Async)");
        }

        // verify the required parameter 'TIMESTAMP' is set
        if (TIMESTAMP == null) {
            throw new ApiException("Missing the required parameter 'TIMESTAMP' when calling abhaApiV3EnrollmentEnrolByDocumentPost(Async)");
        }

        return abhaApiV3EnrollmentEnrolByDocumentPostCall(REQUEST_ID, TIMESTAMP, body, _callback);

    }

    /**
     * UseCase: Create ABHA using DL
     * This API endpoint is used to create an ABHA (Ayushman Bharat Health Account) enrollment number using a document such as a Driving License (DL). It allows users to register for an ABHA number by providing their document details and other necessary information. This process ensures that the user’s identity is verified and linked to their health records.&lt;br&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param body &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt; &lt;div&gt; &lt;table&gt;  &lt;body&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create Enrolment Number&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt;  This API endpoint is used to create a CHILD ABHA number for a minor using their demographic details. The CHILD ABHA number helps in uniquely identifying minors and linking their health records across multiple systems:&lt;/strong&gt; &lt;ul&gt;  &lt;/li&gt; &lt;li&gt;&lt;strong&gt;documentType:&lt;/strong&gt;  The user personal document.. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;DRIVING_LICENCE&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;documentId:(required)&lt;/strong&gt; The user&#39;s document Id. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;DL number&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;firstName :(required)&lt;/strong&gt;The user first name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;John&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;gender:(required)&lt;/strong&gt; The user’s gender. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;M&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;middleName:(required)&lt;/strong&gt; The user’s middle name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Doe&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Full Name :&lt;/strong&gt; The user’s full name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt; JOHN Doe Xyz&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;LastName:&lt;/strong&gt; The user’s Last name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt; xyz&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;dob:(required)&lt;/strong&gt; The user date of birth. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;27-07-2000&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;frontSidePhoto:(required)&lt;/strong&gt; The user front side photo. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;base 64 photo&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;backSidePhoto:(required)&lt;/strong&gt;The back front side photo. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;base 64 photo&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;address:(required)&lt;/strong&gt; The user’s residential address. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Street number 4, Sector 12&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;state:(required)&lt;/strong&gt;the user’s state. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Delhi&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;statecode:(required)&lt;/strong&gt;  The code of the user’s state code. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;27&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;district:(required)&lt;/strong&gt;  the user’s district. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Pune&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;&lt;li&gt;&lt;strong&gt;pinCode:(required)&lt;/strong&gt;  The user’s postal code&lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;208564&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &#39; (optional)
     * @return Object
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Create Enrolment Number - Account Already Exists:&lt;/strong&gt; This scenario occurs when an attempt is made to create an enrollment number for a user who already has an existing ABHA number&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Create Enrolment Number - Positive Flow:&lt;/strong&gt; This scenario occurs when the enrollment number is successfully created for a new user.&lt;/li&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Transaction Id </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The 422 response code indicates an Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> &lt;b&gt;Internal Server Error&lt;/b&gt;&lt;br&gt;&lt;br&gt;  An Internal Server Error (500) indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. </td><td>  -  </td></tr>
     </table>
     */
    public Object abhaApiV3EnrollmentEnrolByDocumentPost(String REQUEST_ID, String TIMESTAMP, Object body) throws ApiException {
        ApiResponse<Object> localVarResp = abhaApiV3EnrollmentEnrolByDocumentPostWithHttpInfo(REQUEST_ID, TIMESTAMP, body);
        return localVarResp.getData();
    }

    /**
     * UseCase: Create ABHA using DL
     * This API endpoint is used to create an ABHA (Ayushman Bharat Health Account) enrollment number using a document such as a Driving License (DL). It allows users to register for an ABHA number by providing their document details and other necessary information. This process ensures that the user’s identity is verified and linked to their health records.&lt;br&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param body &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt; &lt;div&gt; &lt;table&gt;  &lt;body&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create Enrolment Number&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt;  This API endpoint is used to create a CHILD ABHA number for a minor using their demographic details. The CHILD ABHA number helps in uniquely identifying minors and linking their health records across multiple systems:&lt;/strong&gt; &lt;ul&gt;  &lt;/li&gt; &lt;li&gt;&lt;strong&gt;documentType:&lt;/strong&gt;  The user personal document.. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;DRIVING_LICENCE&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;documentId:(required)&lt;/strong&gt; The user&#39;s document Id. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;DL number&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;firstName :(required)&lt;/strong&gt;The user first name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;John&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;gender:(required)&lt;/strong&gt; The user’s gender. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;M&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;middleName:(required)&lt;/strong&gt; The user’s middle name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Doe&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Full Name :&lt;/strong&gt; The user’s full name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt; JOHN Doe Xyz&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;LastName:&lt;/strong&gt; The user’s Last name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt; xyz&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;dob:(required)&lt;/strong&gt; The user date of birth. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;27-07-2000&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;frontSidePhoto:(required)&lt;/strong&gt; The user front side photo. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;base 64 photo&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;backSidePhoto:(required)&lt;/strong&gt;The back front side photo. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;base 64 photo&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;address:(required)&lt;/strong&gt; The user’s residential address. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Street number 4, Sector 12&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;state:(required)&lt;/strong&gt;the user’s state. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Delhi&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;statecode:(required)&lt;/strong&gt;  The code of the user’s state code. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;27&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;district:(required)&lt;/strong&gt;  the user’s district. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Pune&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;&lt;li&gt;&lt;strong&gt;pinCode:(required)&lt;/strong&gt;  The user’s postal code&lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;208564&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &#39; (optional)
     * @return ApiResponse&lt;Object&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Create Enrolment Number - Account Already Exists:&lt;/strong&gt; This scenario occurs when an attempt is made to create an enrollment number for a user who already has an existing ABHA number&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Create Enrolment Number - Positive Flow:&lt;/strong&gt; This scenario occurs when the enrollment number is successfully created for a new user.&lt;/li&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Transaction Id </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The 422 response code indicates an Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> &lt;b&gt;Internal Server Error&lt;/b&gt;&lt;br&gt;&lt;br&gt;  An Internal Server Error (500) indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Object> abhaApiV3EnrollmentEnrolByDocumentPostWithHttpInfo(String REQUEST_ID, String TIMESTAMP, Object body) throws ApiException {
        okhttp3.Call localVarCall = abhaApiV3EnrollmentEnrolByDocumentPostValidateBeforeCall(REQUEST_ID, TIMESTAMP, body, null);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * UseCase: Create ABHA using DL (asynchronously)
     * This API endpoint is used to create an ABHA (Ayushman Bharat Health Account) enrollment number using a document such as a Driving License (DL). It allows users to register for an ABHA number by providing their document details and other necessary information. This process ensures that the user’s identity is verified and linked to their health records.&lt;br&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param body &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt; &lt;div&gt; &lt;table&gt;  &lt;body&gt; &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create Enrolment Number&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt;  This API endpoint is used to create a CHILD ABHA number for a minor using their demographic details. The CHILD ABHA number helps in uniquely identifying minors and linking their health records across multiple systems:&lt;/strong&gt; &lt;ul&gt;  &lt;/li&gt; &lt;li&gt;&lt;strong&gt;documentType:&lt;/strong&gt;  The user personal document.. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;DRIVING_LICENCE&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;documentId:(required)&lt;/strong&gt; The user&#39;s document Id. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;DL number&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;firstName :(required)&lt;/strong&gt;The user first name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;John&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;gender:(required)&lt;/strong&gt; The user’s gender. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;M&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;middleName:(required)&lt;/strong&gt; The user’s middle name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Doe&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;Full Name :&lt;/strong&gt; The user’s full name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt; JOHN Doe Xyz&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;LastName:&lt;/strong&gt; The user’s Last name. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt; xyz&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;dob:(required)&lt;/strong&gt; The user date of birth. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;27-07-2000&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;frontSidePhoto:(required)&lt;/strong&gt; The user front side photo. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;base 64 photo&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;backSidePhoto:(required)&lt;/strong&gt;The back front side photo. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;base 64 photo&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;address:(required)&lt;/strong&gt; The user’s residential address. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Street number 4, Sector 12&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;state:(required)&lt;/strong&gt;the user’s state. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Delhi&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;statecode:(required)&lt;/strong&gt;  The code of the user’s state code. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;27&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;district:(required)&lt;/strong&gt;  the user’s district. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;Pune&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;&lt;li&gt;&lt;strong&gt;pinCode:(required)&lt;/strong&gt;  The user’s postal code&lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;208564&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &#39; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;Create Enrolment Number - Account Already Exists:&lt;/strong&gt; This scenario occurs when an attempt is made to create an enrollment number for a user who already has an existing ABHA number&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Create Enrolment Number - Positive Flow:&lt;/strong&gt; This scenario occurs when the enrollment number is successfully created for a new user.&lt;/li&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Transaction Id </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> The 422 response code indicates an Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> &lt;b&gt;Internal Server Error&lt;/b&gt;&lt;br&gt;&lt;br&gt;  An Internal Server Error (500) indicates that the server encountered an unexpected condition that prevented it from fulfilling the request. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call abhaApiV3EnrollmentEnrolByDocumentPostAsync(String REQUEST_ID, String TIMESTAMP, Object body, final ApiCallback<Object> _callback) throws ApiException {

        okhttp3.Call localVarCall = abhaApiV3EnrollmentEnrolByDocumentPostValidateBeforeCall(REQUEST_ID, TIMESTAMP, body, _callback);
        Type localVarReturnType = new TypeToken<Object>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for abhaApiV3EnrollmentRequestOtpPost
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param abhaApiV3EnrollmentRequestOtpPostRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt;     &lt;!--&lt;div&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;Aadhaar/Abha/mobile&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginHint &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;Aadhaar,Abha And Mobile Number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;encrypted mobile-number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;hr&gt; --&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null.. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-enrol\&quot;, \&quot;mobile-verify\&quot;,]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-enrol&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;dl-flow&lt;/code&gt; ,&lt;code&gt;email-verify&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginHint&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Indicates the type of identifier being used for the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt;&lt;code&gt;aadhaar&lt;/code&gt;, &lt;code&gt;mobile&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;strong&gt;loginId&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The encrypted identifier (ABHA Number, or Mobile Number) for which the OTP is being requested.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted aadhaar number}}&lt;/code&gt;, &lt;code&gt;{{encrypted mobile number}}&lt;/code&gt;,&lt;code&gt;{{encrypted email address}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;otpSystem&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the system used for OTP generation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;, &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt; Possilbe Values:&lt;/strong&gt; &lt;code&gt;aadhaar, abdm&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;ol&gt; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;AADHAAR OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to AADHAAR, the unique identification number issued by the Indian government.&lt;/li&gt; &lt;/ol&gt;  &lt;ol start &#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to ABHA (Ayushman Bharat Health Account), which is part of India’s health ID system&lt;/li&gt; &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile OTP Response.&lt;/strong&gt; This OTP is generated for general mobile number verification purposes, such as logging into an account, completing a transaction, or verifying identity&lt;/li&gt; &lt;/ol&gt; &lt;ol start &#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;DL OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to DL, the unique identification number issued by the Indian government&lt;/li&gt; &lt;/ol&gt;&lt;ol start &#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;Email OTP Response:&lt;/strong&gt; This OTP is generated for verification purposes of Email, the OTP is send to the registered email address &lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) generation or validation process.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Response Errors:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar - Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request is invalid. The scope specifies the purpose of the OTP request, such as abha-enrol, mobile-verify, etc.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar  -Send OTP- Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the Aadhaar OTP is invalid. The login ID should be the encrypted Aadhaar number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid Scope&lt;/strong&gt;:  This error occurs when the scope provided in the OTP request for mobile update is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the mobile OTP is invalid. The login ID should be the encrypted mobile number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid LoginHint&lt;/strong&gt;: This error occurs when the login hint provided for the mobile OTP is invalid. The login hint should indicate the type of identifier being used, such as mobile.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;6\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL - Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for DL (Driving License) enrolment is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;7\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL - Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the DL OTP is invalid. The login ID should be the encrypted DL number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;8\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL -  Invalid LoginHint&lt;/strong&gt;: This error occurs when the login hint provided for the DL OTP is invalid. The login hint should indicate the type of identifier being used, such as DL.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;9\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhar- Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for ABHA creation via Aadhaar is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;10\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhar- Invalid Login Hint&lt;/strong&gt;: This error occurs when the login hint provided for the Aadhaar OTP is invalid. The login hint should indicate the type of identifier being used, such as aadhaar.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;11\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar  - Invalid Scope&lt;/strong&gt;: The scope of the OTP response is invalid.&lt;/li&gt; &lt;/ol&gt;&lt;ol start&#x3D;\&quot;12\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email- Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for ABHA creation via email is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;13\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email- Invalid Login Hint&lt;/strong&gt;: This error occurs when the login hint provided for the email OTP is invalid. The login hint should indicate the type of identifier being used, such as aadhaar.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;14\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email  - Invalid LoginHint&lt;/strong&gt;: This error occurs when the email ID provided for the email OTP is invalid. The login ID should be the encrypted email address..&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Credentials &lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Response Errors:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;ABHA Enrolment via Aadhaar - Invalid Access Token&lt;/strong&gt;: This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update - Send OTP - Invalid Access Token&lt;/strong&gt;: This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhaar OTP - Invalid Access Token&lt;/strong&gt;:  This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;EMail verification via  OTP - Invalid Access Token&lt;/strong&gt;:  This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call abhaApiV3EnrollmentRequestOtpPostCall(String REQUEST_ID, String TIMESTAMP, AbhaApiV3EnrollmentRequestOtpPostRequest abhaApiV3EnrollmentRequestOtpPostRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = abhaApiV3EnrollmentRequestOtpPostRequest;

        // create path and map variables
        String localVarPath = "/abha/api/v3/enrollment/request/otp";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (REQUEST_ID != null) {
            localVarHeaderParams.put("REQUEST-ID", localVarApiClient.parameterToString(REQUEST_ID));
        }


        if (TIMESTAMP != null) {
            localVarHeaderParams.put("TIMESTAMP", localVarApiClient.parameterToString(TIMESTAMP));
        }


        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call abhaApiV3EnrollmentRequestOtpPostValidateBeforeCall(String REQUEST_ID, String TIMESTAMP, AbhaApiV3EnrollmentRequestOtpPostRequest abhaApiV3EnrollmentRequestOtpPostRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'REQUEST_ID' is set
        if (REQUEST_ID == null) {
            throw new ApiException("Missing the required parameter 'REQUEST_ID' when calling abhaApiV3EnrollmentRequestOtpPost(Async)");
        }

        // verify the required parameter 'TIMESTAMP' is set
        if (TIMESTAMP == null) {
            throw new ApiException("Missing the required parameter 'TIMESTAMP' when calling abhaApiV3EnrollmentRequestOtpPost(Async)");
        }

        return abhaApiV3EnrollmentRequestOtpPostCall(REQUEST_ID, TIMESTAMP, abhaApiV3EnrollmentRequestOtpPostRequest, _callback);

    }

    /**
     * Use Case: ABHA enrollment - Send OTP using Aadhaar number Mobile number, ABHA number, Driving Licence number and Email address
     * This API endpoint is used to generate and send an OTP (One-Time Password) to the user’s registered mobile number. The OTP is essential for verifying the user’s identity and ensuring secure access to the ABHA (Ayushman Bharat Health Account) enrollment process. Depending on the type of identifier provided (Aadhaar Number, ABHA Number, or Mobile Number), the OTP will be generated and sent to the corresponding registered mobile number.  &lt;br&gt; &lt;br&gt; &lt;/ol&gt;**Usage of this API for below scenarios: OTP Request**&lt;br&gt;&lt;br&gt; **1. AADHAR OTP:**When the user wants to enroll using their Aadhar Number, an OTP is sent to the mobile number registered with their Aadhar linked mobile number. For this pass loginHint as \&quot;Aadhar-number\&quot;.   &lt;br&gt;  **2. Mobile OTP:** When the user wants to enroll using their Mobile Number, an OTP is sent to the provided mobile number. For this pass loginHint as \&quot;mobile-number\&quot;.&lt;br&gt; **3. DL OTP:** When the user wants to enroll using their DL, an OTP is sent to the mobile number registered with their DL. For this pass loginHint as \&quot;Mobile\&quot;.&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;br&gt; **1.**OTP will be valid for 10 minute only &lt;br&gt;&lt;br&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param abhaApiV3EnrollmentRequestOtpPostRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt;     &lt;!--&lt;div&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;Aadhaar/Abha/mobile&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginHint &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;Aadhaar,Abha And Mobile Number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;encrypted mobile-number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;hr&gt; --&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null.. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-enrol\&quot;, \&quot;mobile-verify\&quot;,]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-enrol&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;dl-flow&lt;/code&gt; ,&lt;code&gt;email-verify&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginHint&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Indicates the type of identifier being used for the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt;&lt;code&gt;aadhaar&lt;/code&gt;, &lt;code&gt;mobile&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;strong&gt;loginId&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The encrypted identifier (ABHA Number, or Mobile Number) for which the OTP is being requested.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted aadhaar number}}&lt;/code&gt;, &lt;code&gt;{{encrypted mobile number}}&lt;/code&gt;,&lt;code&gt;{{encrypted email address}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;otpSystem&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the system used for OTP generation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;, &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt; Possilbe Values:&lt;/strong&gt; &lt;code&gt;aadhaar, abdm&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;ol&gt; (optional)
     * @return AbhaApiV3EnrollmentRequestOtpPost200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;AADHAAR OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to AADHAAR, the unique identification number issued by the Indian government.&lt;/li&gt; &lt;/ol&gt;  &lt;ol start &#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to ABHA (Ayushman Bharat Health Account), which is part of India’s health ID system&lt;/li&gt; &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile OTP Response.&lt;/strong&gt; This OTP is generated for general mobile number verification purposes, such as logging into an account, completing a transaction, or verifying identity&lt;/li&gt; &lt;/ol&gt; &lt;ol start &#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;DL OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to DL, the unique identification number issued by the Indian government&lt;/li&gt; &lt;/ol&gt;&lt;ol start &#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;Email OTP Response:&lt;/strong&gt; This OTP is generated for verification purposes of Email, the OTP is send to the registered email address &lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) generation or validation process.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Response Errors:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar - Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request is invalid. The scope specifies the purpose of the OTP request, such as abha-enrol, mobile-verify, etc.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar  -Send OTP- Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the Aadhaar OTP is invalid. The login ID should be the encrypted Aadhaar number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid Scope&lt;/strong&gt;:  This error occurs when the scope provided in the OTP request for mobile update is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the mobile OTP is invalid. The login ID should be the encrypted mobile number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid LoginHint&lt;/strong&gt;: This error occurs when the login hint provided for the mobile OTP is invalid. The login hint should indicate the type of identifier being used, such as mobile.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;6\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL - Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for DL (Driving License) enrolment is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;7\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL - Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the DL OTP is invalid. The login ID should be the encrypted DL number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;8\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL -  Invalid LoginHint&lt;/strong&gt;: This error occurs when the login hint provided for the DL OTP is invalid. The login hint should indicate the type of identifier being used, such as DL.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;9\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhar- Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for ABHA creation via Aadhaar is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;10\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhar- Invalid Login Hint&lt;/strong&gt;: This error occurs when the login hint provided for the Aadhaar OTP is invalid. The login hint should indicate the type of identifier being used, such as aadhaar.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;11\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar  - Invalid Scope&lt;/strong&gt;: The scope of the OTP response is invalid.&lt;/li&gt; &lt;/ol&gt;&lt;ol start&#x3D;\&quot;12\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email- Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for ABHA creation via email is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;13\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email- Invalid Login Hint&lt;/strong&gt;: This error occurs when the login hint provided for the email OTP is invalid. The login hint should indicate the type of identifier being used, such as aadhaar.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;14\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email  - Invalid LoginHint&lt;/strong&gt;: This error occurs when the email ID provided for the email OTP is invalid. The login ID should be the encrypted email address..&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Credentials &lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Response Errors:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;ABHA Enrolment via Aadhaar - Invalid Access Token&lt;/strong&gt;: This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update - Send OTP - Invalid Access Token&lt;/strong&gt;: This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhaar OTP - Invalid Access Token&lt;/strong&gt;:  This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;EMail verification via  OTP - Invalid Access Token&lt;/strong&gt;:  This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public AbhaApiV3EnrollmentRequestOtpPost200Response abhaApiV3EnrollmentRequestOtpPost(String REQUEST_ID, String TIMESTAMP, AbhaApiV3EnrollmentRequestOtpPostRequest abhaApiV3EnrollmentRequestOtpPostRequest) throws ApiException {
        ApiResponse<AbhaApiV3EnrollmentRequestOtpPost200Response> localVarResp = abhaApiV3EnrollmentRequestOtpPostWithHttpInfo(REQUEST_ID, TIMESTAMP, abhaApiV3EnrollmentRequestOtpPostRequest);
        return localVarResp.getData();
    }

    /**
     * Use Case: ABHA enrollment - Send OTP using Aadhaar number Mobile number, ABHA number, Driving Licence number and Email address
     * This API endpoint is used to generate and send an OTP (One-Time Password) to the user’s registered mobile number. The OTP is essential for verifying the user’s identity and ensuring secure access to the ABHA (Ayushman Bharat Health Account) enrollment process. Depending on the type of identifier provided (Aadhaar Number, ABHA Number, or Mobile Number), the OTP will be generated and sent to the corresponding registered mobile number.  &lt;br&gt; &lt;br&gt; &lt;/ol&gt;**Usage of this API for below scenarios: OTP Request**&lt;br&gt;&lt;br&gt; **1. AADHAR OTP:**When the user wants to enroll using their Aadhar Number, an OTP is sent to the mobile number registered with their Aadhar linked mobile number. For this pass loginHint as \&quot;Aadhar-number\&quot;.   &lt;br&gt;  **2. Mobile OTP:** When the user wants to enroll using their Mobile Number, an OTP is sent to the provided mobile number. For this pass loginHint as \&quot;mobile-number\&quot;.&lt;br&gt; **3. DL OTP:** When the user wants to enroll using their DL, an OTP is sent to the mobile number registered with their DL. For this pass loginHint as \&quot;Mobile\&quot;.&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;br&gt; **1.**OTP will be valid for 10 minute only &lt;br&gt;&lt;br&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param abhaApiV3EnrollmentRequestOtpPostRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt;     &lt;!--&lt;div&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;Aadhaar/Abha/mobile&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginHint &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;Aadhaar,Abha And Mobile Number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;encrypted mobile-number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;hr&gt; --&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null.. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-enrol\&quot;, \&quot;mobile-verify\&quot;,]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-enrol&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;dl-flow&lt;/code&gt; ,&lt;code&gt;email-verify&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginHint&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Indicates the type of identifier being used for the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt;&lt;code&gt;aadhaar&lt;/code&gt;, &lt;code&gt;mobile&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;strong&gt;loginId&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The encrypted identifier (ABHA Number, or Mobile Number) for which the OTP is being requested.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted aadhaar number}}&lt;/code&gt;, &lt;code&gt;{{encrypted mobile number}}&lt;/code&gt;,&lt;code&gt;{{encrypted email address}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;otpSystem&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the system used for OTP generation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;, &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt; Possilbe Values:&lt;/strong&gt; &lt;code&gt;aadhaar, abdm&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;ol&gt; (optional)
     * @return ApiResponse&lt;AbhaApiV3EnrollmentRequestOtpPost200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;AADHAAR OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to AADHAAR, the unique identification number issued by the Indian government.&lt;/li&gt; &lt;/ol&gt;  &lt;ol start &#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to ABHA (Ayushman Bharat Health Account), which is part of India’s health ID system&lt;/li&gt; &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile OTP Response.&lt;/strong&gt; This OTP is generated for general mobile number verification purposes, such as logging into an account, completing a transaction, or verifying identity&lt;/li&gt; &lt;/ol&gt; &lt;ol start &#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;DL OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to DL, the unique identification number issued by the Indian government&lt;/li&gt; &lt;/ol&gt;&lt;ol start &#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;Email OTP Response:&lt;/strong&gt; This OTP is generated for verification purposes of Email, the OTP is send to the registered email address &lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) generation or validation process.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Response Errors:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar - Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request is invalid. The scope specifies the purpose of the OTP request, such as abha-enrol, mobile-verify, etc.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar  -Send OTP- Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the Aadhaar OTP is invalid. The login ID should be the encrypted Aadhaar number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid Scope&lt;/strong&gt;:  This error occurs when the scope provided in the OTP request for mobile update is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the mobile OTP is invalid. The login ID should be the encrypted mobile number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid LoginHint&lt;/strong&gt;: This error occurs when the login hint provided for the mobile OTP is invalid. The login hint should indicate the type of identifier being used, such as mobile.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;6\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL - Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for DL (Driving License) enrolment is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;7\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL - Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the DL OTP is invalid. The login ID should be the encrypted DL number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;8\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL -  Invalid LoginHint&lt;/strong&gt;: This error occurs when the login hint provided for the DL OTP is invalid. The login hint should indicate the type of identifier being used, such as DL.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;9\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhar- Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for ABHA creation via Aadhaar is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;10\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhar- Invalid Login Hint&lt;/strong&gt;: This error occurs when the login hint provided for the Aadhaar OTP is invalid. The login hint should indicate the type of identifier being used, such as aadhaar.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;11\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar  - Invalid Scope&lt;/strong&gt;: The scope of the OTP response is invalid.&lt;/li&gt; &lt;/ol&gt;&lt;ol start&#x3D;\&quot;12\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email- Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for ABHA creation via email is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;13\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email- Invalid Login Hint&lt;/strong&gt;: This error occurs when the login hint provided for the email OTP is invalid. The login hint should indicate the type of identifier being used, such as aadhaar.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;14\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email  - Invalid LoginHint&lt;/strong&gt;: This error occurs when the email ID provided for the email OTP is invalid. The login ID should be the encrypted email address..&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Credentials &lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Response Errors:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;ABHA Enrolment via Aadhaar - Invalid Access Token&lt;/strong&gt;: This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update - Send OTP - Invalid Access Token&lt;/strong&gt;: This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhaar OTP - Invalid Access Token&lt;/strong&gt;:  This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;EMail verification via  OTP - Invalid Access Token&lt;/strong&gt;:  This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AbhaApiV3EnrollmentRequestOtpPost200Response> abhaApiV3EnrollmentRequestOtpPostWithHttpInfo(String REQUEST_ID, String TIMESTAMP, AbhaApiV3EnrollmentRequestOtpPostRequest abhaApiV3EnrollmentRequestOtpPostRequest) throws ApiException {
        okhttp3.Call localVarCall = abhaApiV3EnrollmentRequestOtpPostValidateBeforeCall(REQUEST_ID, TIMESTAMP, abhaApiV3EnrollmentRequestOtpPostRequest, null);
        Type localVarReturnType = new TypeToken<AbhaApiV3EnrollmentRequestOtpPost200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Use Case: ABHA enrollment - Send OTP using Aadhaar number Mobile number, ABHA number, Driving Licence number and Email address (asynchronously)
     * This API endpoint is used to generate and send an OTP (One-Time Password) to the user’s registered mobile number. The OTP is essential for verifying the user’s identity and ensuring secure access to the ABHA (Ayushman Bharat Health Account) enrollment process. Depending on the type of identifier provided (Aadhaar Number, ABHA Number, or Mobile Number), the OTP will be generated and sent to the corresponding registered mobile number.  &lt;br&gt; &lt;br&gt; &lt;/ol&gt;**Usage of this API for below scenarios: OTP Request**&lt;br&gt;&lt;br&gt; **1. AADHAR OTP:**When the user wants to enroll using their Aadhar Number, an OTP is sent to the mobile number registered with their Aadhar linked mobile number. For this pass loginHint as \&quot;Aadhar-number\&quot;.   &lt;br&gt;  **2. Mobile OTP:** When the user wants to enroll using their Mobile Number, an OTP is sent to the provided mobile number. For this pass loginHint as \&quot;mobile-number\&quot;.&lt;br&gt; **3. DL OTP:** When the user wants to enroll using their DL, an OTP is sent to the mobile number registered with their DL. For this pass loginHint as \&quot;Mobile\&quot;.&lt;br&gt;&lt;b&gt;Note:&lt;/b&gt;&lt;br&gt; **1.**OTP will be valid for 10 minute only &lt;br&gt;&lt;br&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param abhaApiV3EnrollmentRequestOtpPostRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt;     &lt;!--&lt;div&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;Aadhaar/Abha/mobile&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginHint &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;Aadhaar,Abha And Mobile Number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;encrypted mobile-number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;hr&gt; --&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null.. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-enrol\&quot;, \&quot;mobile-verify\&quot;,]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-enrol&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;dl-flow&lt;/code&gt; ,&lt;code&gt;email-verify&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginHint&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Indicates the type of identifier being used for the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt;&lt;code&gt;aadhaar&lt;/code&gt;, &lt;code&gt;mobile&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;  &lt;p&gt;&lt;strong&gt;loginId&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The encrypted identifier (ABHA Number, or Mobile Number) for which the OTP is being requested.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted aadhaar number}}&lt;/code&gt;, &lt;code&gt;{{encrypted mobile number}}&lt;/code&gt;,&lt;code&gt;{{encrypted email address}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt;  &lt;li&gt; &lt;p&gt;&lt;strong&gt;otpSystem&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the system used for OTP generation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;, &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt; Possilbe Values:&lt;/strong&gt; &lt;code&gt;aadhaar, abdm&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; &lt;ol&gt; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Responses:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;AADHAAR OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to AADHAAR, the unique identification number issued by the Indian government.&lt;/li&gt; &lt;/ol&gt;  &lt;ol start &#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to ABHA (Ayushman Bharat Health Account), which is part of India’s health ID system&lt;/li&gt; &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile OTP Response.&lt;/strong&gt; This OTP is generated for general mobile number verification purposes, such as logging into an account, completing a transaction, or verifying identity&lt;/li&gt; &lt;/ol&gt; &lt;ol start &#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;DL OTP Response:&lt;/strong&gt; This OTP is generated for authentication or verification purposes related to DL, the unique identification number issued by the Indian government&lt;/li&gt; &lt;/ol&gt;&lt;ol start &#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;Email OTP Response:&lt;/strong&gt; This OTP is generated for verification purposes of Email, the OTP is send to the registered email address &lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) generation or validation process.&lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Response Errors:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar - Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request is invalid. The scope specifies the purpose of the OTP request, such as abha-enrol, mobile-verify, etc.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar  -Send OTP- Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the Aadhaar OTP is invalid. The login ID should be the encrypted Aadhaar number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid Scope&lt;/strong&gt;:  This error occurs when the scope provided in the OTP request for mobile update is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the mobile OTP is invalid. The login ID should be the encrypted mobile number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update -Send OTP- Invalid LoginHint&lt;/strong&gt;: This error occurs when the login hint provided for the mobile OTP is invalid. The login hint should indicate the type of identifier being used, such as mobile.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;6\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL - Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for DL (Driving License) enrolment is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;7\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL - Invalid LoginId&lt;/strong&gt;: This error occurs when the login ID provided for the DL OTP is invalid. The login ID should be the encrypted DL number.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;8\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via DL -  Invalid LoginHint&lt;/strong&gt;: This error occurs when the login hint provided for the DL OTP is invalid. The login hint should indicate the type of identifier being used, such as DL.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;9\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhar- Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for ABHA creation via Aadhaar is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;10\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhar- Invalid Login Hint&lt;/strong&gt;: This error occurs when the login hint provided for the Aadhaar OTP is invalid. The login hint should indicate the type of identifier being used, such as aadhaar.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;11\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA enrolment via Aadhar  - Invalid Scope&lt;/strong&gt;: The scope of the OTP response is invalid.&lt;/li&gt; &lt;/ol&gt;&lt;ol start&#x3D;\&quot;12\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email- Invalid Scope&lt;/strong&gt;: This error occurs when the scope provided in the OTP request for ABHA creation via email is invalid.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;13\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email- Invalid Login Hint&lt;/strong&gt;: This error occurs when the login hint provided for the email OTP is invalid. The login hint should indicate the type of identifier being used, such as aadhaar.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;14\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Verify via Email  - Invalid LoginHint&lt;/strong&gt;: This error occurs when the email ID provided for the email OTP is invalid. The login ID should be the encrypted email address..&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the operation of the Invalid Credentials &lt;br&gt;&lt;br&gt; &lt;strong&gt;Types of OTP Response Errors:&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;ABHA Enrolment via Aadhaar - Invalid Access Token&lt;/strong&gt;: This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;Mobile Update - Send OTP - Invalid Access Token&lt;/strong&gt;: This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;ABHA Creation via Aadhaar OTP - Invalid Access Token&lt;/strong&gt;:  This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;EMail verification via  OTP - Invalid Access Token&lt;/strong&gt;:  This error occurs when the access token provided for authorization is invalid. The access token is essential for authenticating the request, and an invalid token means the server cannot verify the user’s identity.&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call abhaApiV3EnrollmentRequestOtpPostAsync(String REQUEST_ID, String TIMESTAMP, AbhaApiV3EnrollmentRequestOtpPostRequest abhaApiV3EnrollmentRequestOtpPostRequest, final ApiCallback<AbhaApiV3EnrollmentRequestOtpPost200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = abhaApiV3EnrollmentRequestOtpPostValidateBeforeCall(REQUEST_ID, TIMESTAMP, abhaApiV3EnrollmentRequestOtpPostRequest, _callback);
        Type localVarReturnType = new TypeToken<AbhaApiV3EnrollmentRequestOtpPost200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
