/*
 * Health Facility Registry APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model.phr;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * DeduplicateResponseDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-04T14:58:27.910059+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class DeduplicateResponseDto {
  public static final String SERIALIZED_NAME_FACILITY_NAME = "facility_name";
  @SerializedName(SERIALIZED_NAME_FACILITY_NAME)
  @javax.annotation.Nullable
  private String facilityName;

  public static final String SERIALIZED_NAME_ALTERNATE_ID = "alternate_id";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_ID)
  @javax.annotation.Nullable
  private String alternateId;

  public static final String SERIALIZED_NAME_SUB_DISTRICT = "sub_district";
  @SerializedName(SERIALIZED_NAME_SUB_DISTRICT)
  @javax.annotation.Nullable
  private String subDistrict;

  public static final String SERIALIZED_NAME_DISTRICT = "district";
  @SerializedName(SERIALIZED_NAME_DISTRICT)
  @javax.annotation.Nullable
  private String district;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  @javax.annotation.Nullable
  private String state;

  public static final String SERIALIZED_NAME_DISTANCES = "distances";
  @SerializedName(SERIALIZED_NAME_DISTANCES)
  @javax.annotation.Nullable
  private String distances;

  public DeduplicateResponseDto() {
  }

  public DeduplicateResponseDto facilityName(@javax.annotation.Nullable String facilityName) {
    this.facilityName = facilityName;
    return this;
  }

  /**
   * Get facilityName
   * @return facilityName
   */
  @javax.annotation.Nullable
  public String getFacilityName() {
    return facilityName;
  }

  public void setFacilityName(@javax.annotation.Nullable String facilityName) {
    this.facilityName = facilityName;
  }


  public DeduplicateResponseDto alternateId(@javax.annotation.Nullable String alternateId) {
    this.alternateId = alternateId;
    return this;
  }

  /**
   * Get alternateId
   * @return alternateId
   */
  @javax.annotation.Nullable
  public String getAlternateId() {
    return alternateId;
  }

  public void setAlternateId(@javax.annotation.Nullable String alternateId) {
    this.alternateId = alternateId;
  }


  public DeduplicateResponseDto subDistrict(@javax.annotation.Nullable String subDistrict) {
    this.subDistrict = subDistrict;
    return this;
  }

  /**
   * Get subDistrict
   * @return subDistrict
   */
  @javax.annotation.Nullable
  public String getSubDistrict() {
    return subDistrict;
  }

  public void setSubDistrict(@javax.annotation.Nullable String subDistrict) {
    this.subDistrict = subDistrict;
  }


  public DeduplicateResponseDto district(@javax.annotation.Nullable String district) {
    this.district = district;
    return this;
  }

  /**
   * Get district
   * @return district
   */
  @javax.annotation.Nullable
  public String getDistrict() {
    return district;
  }

  public void setDistrict(@javax.annotation.Nullable String district) {
    this.district = district;
  }


  public DeduplicateResponseDto state(@javax.annotation.Nullable String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(@javax.annotation.Nullable String state) {
    this.state = state;
  }


  public DeduplicateResponseDto distances(@javax.annotation.Nullable String distances) {
    this.distances = distances;
    return this;
  }

  /**
   * Get distances
   * @return distances
   */
  @javax.annotation.Nullable
  public String getDistances() {
    return distances;
  }

  public void setDistances(@javax.annotation.Nullable String distances) {
    this.distances = distances;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeduplicateResponseDto deduplicateResponseDto = (DeduplicateResponseDto) o;
    return Objects.equals(this.facilityName, deduplicateResponseDto.facilityName) &&
        Objects.equals(this.alternateId, deduplicateResponseDto.alternateId) &&
        Objects.equals(this.subDistrict, deduplicateResponseDto.subDistrict) &&
        Objects.equals(this.district, deduplicateResponseDto.district) &&
        Objects.equals(this.state, deduplicateResponseDto.state) &&
        Objects.equals(this.distances, deduplicateResponseDto.distances);
  }

  @Override
  public int hashCode() {
    return Objects.hash(facilityName, alternateId, subDistrict, district, state, distances);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeduplicateResponseDto {\n");
    sb.append("    facilityName: ").append(toIndentedString(facilityName)).append("\n");
    sb.append("    alternateId: ").append(toIndentedString(alternateId)).append("\n");
    sb.append("    subDistrict: ").append(toIndentedString(subDistrict)).append("\n");
    sb.append("    district: ").append(toIndentedString(district)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    distances: ").append(toIndentedString(distances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("facility_name");
    openapiFields.add("alternate_id");
    openapiFields.add("sub_district");
    openapiFields.add("district");
    openapiFields.add("state");
    openapiFields.add("distances");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DeduplicateResponseDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DeduplicateResponseDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DeduplicateResponseDto is not found in the empty JSON string", DeduplicateResponseDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DeduplicateResponseDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DeduplicateResponseDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("facility_name") != null && !jsonObj.get("facility_name").isJsonNull()) && !jsonObj.get("facility_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facility_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facility_name").toString()));
      }
      if ((jsonObj.get("alternate_id") != null && !jsonObj.get("alternate_id").isJsonNull()) && !jsonObj.get("alternate_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternate_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternate_id").toString()));
      }
      if ((jsonObj.get("sub_district") != null && !jsonObj.get("sub_district").isJsonNull()) && !jsonObj.get("sub_district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sub_district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sub_district").toString()));
      }
      if ((jsonObj.get("district") != null && !jsonObj.get("district").isJsonNull()) && !jsonObj.get("district").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `district` to be a primitive type in the JSON string but got `%s`", jsonObj.get("district").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("distances") != null && !jsonObj.get("distances").isJsonNull()) && !jsonObj.get("distances").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distances` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distances").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DeduplicateResponseDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DeduplicateResponseDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DeduplicateResponseDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DeduplicateResponseDto.class));

       return (TypeAdapter<T>) new TypeAdapter<DeduplicateResponseDto>() {
           @Override
           public void write(JsonWriter out, DeduplicateResponseDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DeduplicateResponseDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DeduplicateResponseDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DeduplicateResponseDto
   * @throws IOException if the JSON string is invalid with respect to DeduplicateResponseDto
   */
  public static DeduplicateResponseDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DeduplicateResponseDto.class);
  }

  /**
   * Convert an instance of DeduplicateResponseDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

