/*
 * PHR V3 Swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model;

import com.google.gson.*;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;
import in.docq.abha.rest.client.model.AbstractOpenApiSchema;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-10T18:02:09.764020+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class SendOtpUpdateEmail400Response extends AbstractOpenApiSchema {
    private static final Logger log = Logger.getLogger(SendOtpUpdateEmail400Response.class.getName());

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!SendOtpUpdateEmail400Response.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'SendOtpUpdateEmail400Response' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);

            final Type typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner = new TypeToken<List<OtpRequestMobileLogin400ResponseAnyOf1Inner>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner>> adapterListOtpRequestMobileLogin400ResponseAnyOf1Inner = (TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner));
            final TypeAdapter<OtpRequestMobile400ResponseAnyOf> adapterOtpRequestMobile400ResponseAnyOf = gson.getDelegateAdapter(this, TypeToken.get(OtpRequestMobile400ResponseAnyOf.class));

            final Type typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner = new TypeToken<List<OtpRequestMobile400ResponseAnyOf1Inner>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner>> adapterListOtpRequestMobile400ResponseAnyOf1Inner = (TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner));

            final Type typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner1 = new TypeToken<List<OtpRequestMobile400ResponseAnyOf1Inner1>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner1>> adapterListOtpRequestMobile400ResponseAnyOf1Inner1 = (TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner1>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner1));

            final Type typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner2 = new TypeToken<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>> adapterListOtpRequestMobileLogin400ResponseAnyOf1Inner2 = (TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner2));

            final Type typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner5 = new TypeToken<List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>> adapterListOtpRequestMobileLogin400ResponseAnyOf1Inner5 = (TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner5));

            final Type typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner12 = new TypeToken<List<OtpRequestMobile400ResponseAnyOf1Inner>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner>> adapterListOtpRequestMobile400ResponseAnyOf1Inner12 = (TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner12));

            final Type typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner112 = new TypeToken<List<OtpRequestMobile400ResponseAnyOf1Inner1>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner1>> adapterListOtpRequestMobile400ResponseAnyOf1Inner112 = (TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner1>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner112));

            final Type typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner212 = new TypeToken<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>> adapterListOtpRequestMobileLogin400ResponseAnyOf1Inner221 = (TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner212));

            final Type typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner122 = new TypeToken<List<OtpRequestMobile400ResponseAnyOf1Inner>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner>> adapterListOtpRequestMobile400ResponseAnyOf1Inner321 = (TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner122));

            final Type typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner1444 = new TypeToken<List<OtpRequestMobile400ResponseAnyOf1Inner1>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner1>> adapterListOtpRequestMobile400ResponseAnyOf1Inner1322 = (TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner1>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner1444));

            final Type typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner2232 = new TypeToken<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>> adapterListOtpRequestMobileLogin400ResponseAnyOf1Inner22312 = (TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner2232));

            final Type typeInstanceListOtpRequestMobileLogin400ResponseAnyOfInner = new TypeToken<List<OtpRequestMobileLogin400ResponseAnyOfInner>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOfInner>> adapterListOtpRequestMobileLogin400ResponseAnyOfInner = (TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOfInner>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobileLogin400ResponseAnyOfInner));

            final Type typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner2312 = new TypeToken<List<OtpRequestMobile400ResponseAnyOf1Inner>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner>> adapterListOtpRequestMobile400ResponseAnyOf1Inner23121 = (TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner2312));

            final Type typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner121321 = new TypeToken<List<OtpRequestMobile400ResponseAnyOf1Inner1>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner1>> adapterListOtpRequestMobile400ResponseAnyOf1Inner112321 = (TypeAdapter<List<OtpRequestMobile400ResponseAnyOf1Inner1>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobile400ResponseAnyOf1Inner121321));

            final Type typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner22312 = new TypeToken<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>>(){}.getType();
            final TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>> adapterListOtpRequestMobileLogin400ResponseAnyOf1Inner21232 = (TypeAdapter<List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListOtpRequestMobileLogin400ResponseAnyOf1Inner22312));

            return (TypeAdapter<T>) new TypeAdapter<SendOtpUpdateEmail400Response>() {
                @Override
                public void write(JsonWriter out, SendOtpUpdateEmail400Response value) throws IOException {
                    if (value == null || value.getActualInstance() == null) {
                        elementAdapter.write(out, null);
                        return;
                    }

                    // check if the actual instance is of the type `List<OtpRequestMobileLogin400ResponseAnyOf1Inner>`
                    if (value.getActualInstance() instanceof List<?>) {
                        List<?> list = (List<?>) value.getActualInstance();
                        if (list.get(0) instanceof OtpRequestMobileLogin400ResponseAnyOf1Inner) {
                            JsonArray array = adapterListOtpRequestMobileLogin400ResponseAnyOf1Inner.toJsonTree((List<OtpRequestMobileLogin400ResponseAnyOf1Inner>)value.getActualInstance()).getAsJsonArray();
                            elementAdapter.write(out, array);
                            return;
                        }
                    }
                    // check if the actual instance is of the type `OtpRequestMobile400ResponseAnyOf`
                    if (value.getActualInstance() instanceof OtpRequestMobile400ResponseAnyOf) {
                        JsonElement element = adapterOtpRequestMobile400ResponseAnyOf.toJsonTree((OtpRequestMobile400ResponseAnyOf)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    throw new IOException("Failed to serialize as the type doesn't match anyOf schemas: List<OtpRequestMobile400ResponseAnyOf1Inner1>, List<OtpRequestMobile400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOfInner>, OtpRequestMobile400ResponseAnyOf");
                }

                @Override
                public SendOtpUpdateEmail400Response read(JsonReader in) throws IOException {
                    Object deserialized = null;
                    JsonElement jsonElement = elementAdapter.read(in);

                    ArrayList<String> errorMessages = new ArrayList<>();
                    TypeAdapter actualAdapter = elementAdapter;

                    // deserialize List<OtpRequestMobileLogin400ResponseAnyOf1Inner>
                    try {
                        // validate the JSON object to see if any exception is thrown
                        if (!jsonElement.isJsonArray()) {
                            throw new IllegalArgumentException(String.format("Expected json element to be a array type in the JSON string but got `%s`", jsonElement.toString()));
                        }

                        JsonArray array = jsonElement.getAsJsonArray();
                        // validate array items
                        for(JsonElement element : array) {
                            OtpRequestMobileLogin400ResponseAnyOf1Inner.validateJsonElement(element);
                        }
                        actualAdapter = adapterListOtpRequestMobileLogin400ResponseAnyOf1Inner;
                        SendOtpUpdateEmail400Response ret = new SendOtpUpdateEmail400Response();
                        ret.setActualInstance(actualAdapter.fromJsonTree(jsonElement));
                        return ret;
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for List<OtpRequestMobileLogin400ResponseAnyOf1Inner> failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'List<OtpRequestMobileLogin400ResponseAnyOf1Inner>'", e);
                    }
                    // deserialize OtpRequestMobile400ResponseAnyOf
                    try {
                        // validate the JSON object to see if any exception is thrown
                        OtpRequestMobile400ResponseAnyOf.validateJsonElement(jsonElement);
                        actualAdapter = adapterOtpRequestMobile400ResponseAnyOf;
                        SendOtpUpdateEmail400Response ret = new SendOtpUpdateEmail400Response();
                        ret.setActualInstance(actualAdapter.fromJsonTree(jsonElement));
                        return ret;
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for OtpRequestMobile400ResponseAnyOf failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'OtpRequestMobile400ResponseAnyOf'", e);
                    }

                    throw new IOException(String.format("Failed deserialization for SendOtpUpdateEmail400Response: no class matches result, expected at least 1. Detailed failure message for anyOf schemas: %s. JSON: %s", errorMessages, jsonElement.toString()));
                }
            }.nullSafe();
        }
    }

    // store a list of schema names defined in anyOf
    public static final Map<String, Class<?>> schemas = new HashMap<String, Class<?>>();

    public SendOtpUpdateEmail400Response() {
        super("anyOf", Boolean.FALSE);
    }

    public SendOtpUpdateEmail400Response(Object o) {
        super("anyOf", Boolean.FALSE);
        setActualInstance(o);
    }

    static {
        schemas.put("List<OtpRequestMobileLogin400ResponseAnyOf1Inner>", List.class);
        schemas.put("OtpRequestMobile400ResponseAnyOf", OtpRequestMobile400ResponseAnyOf.class);
    }

    @Override
    public Map<String, Class<?>> getSchemas() {
        return SendOtpUpdateEmail400Response.schemas;
    }

    /**
     * Set the instance that matches the anyOf child schema, check
     * the instance parameter is valid against the anyOf child schemas:
     * List<OtpRequestMobile400ResponseAnyOf1Inner1>, List<OtpRequestMobile400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOfInner>, OtpRequestMobile400ResponseAnyOf
     *
     * It could be an instance of the 'anyOf' schemas.
     */
    @Override
    public void setActualInstance(Object instance) {
        if (instance instanceof List<?>) {
            List<?> list = (List<?>) instance;
            if (list.get(0) instanceof OtpRequestMobileLogin400ResponseAnyOf1Inner) {
                super.setActualInstance(instance);
                return;
            }
        }

        if (instance instanceof OtpRequestMobile400ResponseAnyOf) {
            super.setActualInstance(instance);
            return;
        }

        throw new RuntimeException("Invalid instance type. Must be List<OtpRequestMobile400ResponseAnyOf1Inner1>, List<OtpRequestMobile400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOfInner>, OtpRequestMobile400ResponseAnyOf");
    }

    /**
     * Get the actual instance, which can be the following:
     * List<OtpRequestMobile400ResponseAnyOf1Inner1>, List<OtpRequestMobile400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOfInner>, OtpRequestMobile400ResponseAnyOf
     *
     * @return The actual instance (List<OtpRequestMobile400ResponseAnyOf1Inner1>, List<OtpRequestMobile400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOfInner>, OtpRequestMobile400ResponseAnyOf)
     */
    @SuppressWarnings("unchecked")
    @Override
    public Object getActualInstance() {
        return super.getActualInstance();
    }

    /**
     * Get the actual instance of `List<OtpRequestMobileLogin400ResponseAnyOf1Inner>`. If the actual instance is not `List<OtpRequestMobileLogin400ResponseAnyOf1Inner>`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `List<OtpRequestMobileLogin400ResponseAnyOf1Inner>`
     * @throws ClassCastException if the instance is not `List<OtpRequestMobileLogin400ResponseAnyOf1Inner>`
     */
    public List<OtpRequestMobileLogin400ResponseAnyOf1Inner> getListOtpRequestMobileLogin400ResponseAnyOf1Inner() throws ClassCastException {
        return (List<OtpRequestMobileLogin400ResponseAnyOf1Inner>)super.getActualInstance();
    }

    /**
     * Get the actual instance of `OtpRequestMobile400ResponseAnyOf`. If the actual instance is not `OtpRequestMobile400ResponseAnyOf`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `OtpRequestMobile400ResponseAnyOf`
     * @throws ClassCastException if the instance is not `OtpRequestMobile400ResponseAnyOf`
     */
    public OtpRequestMobile400ResponseAnyOf getOtpRequestMobile400ResponseAnyOf() throws ClassCastException {
        return (OtpRequestMobile400ResponseAnyOf)super.getActualInstance();
    }

    /**
     * Get the actual instance of `List<OtpRequestMobile400ResponseAnyOf1Inner>`. If the actual instance is not `List<OtpRequestMobile400ResponseAnyOf1Inner>`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `List<OtpRequestMobile400ResponseAnyOf1Inner>`
     * @throws ClassCastException if the instance is not `List<OtpRequestMobile400ResponseAnyOf1Inner>`
     */
    public List<OtpRequestMobile400ResponseAnyOf1Inner> getListOtpRequestMobile400ResponseAnyOf1Inner() throws ClassCastException {
        return (List<OtpRequestMobile400ResponseAnyOf1Inner>)super.getActualInstance();
    }

    /**
     * Get the actual instance of `List<OtpRequestMobile400ResponseAnyOf1Inner1>`. If the actual instance is not `List<OtpRequestMobile400ResponseAnyOf1Inner1>`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `List<OtpRequestMobile400ResponseAnyOf1Inner1>`
     * @throws ClassCastException if the instance is not `List<OtpRequestMobile400ResponseAnyOf1Inner1>`
     */
    public List<OtpRequestMobile400ResponseAnyOf1Inner1> getListOtpRequestMobile400ResponseAnyOf1Inner1() throws ClassCastException {
        return (List<OtpRequestMobile400ResponseAnyOf1Inner1>)super.getActualInstance();
    }

    /**
     * Get the actual instance of `List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>`. If the actual instance is not `List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>`
     * @throws ClassCastException if the instance is not `List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>`
     */
    public List<OtpRequestMobileLogin400ResponseAnyOf1Inner2> getListOtpRequestMobileLogin400ResponseAnyOf1Inner2() throws ClassCastException {
        return (List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>)super.getActualInstance();
    }

    /**
     * Get the actual instance of `List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>`. If the actual instance is not `List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>`
     * @throws ClassCastException if the instance is not `List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>`
     */
    public List<OtpRequestMobileLogin400ResponseAnyOf1Inner5> getListOtpRequestMobileLogin400ResponseAnyOf1Inner5() throws ClassCastException {
        return (List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>)super.getActualInstance();
    }

    /**
     * Get the actual instance of `List<OtpRequestMobileLogin400ResponseAnyOfInner>`. If the actual instance is not `List<OtpRequestMobileLogin400ResponseAnyOfInner>`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `List<OtpRequestMobileLogin400ResponseAnyOfInner>`
     * @throws ClassCastException if the instance is not `List<OtpRequestMobileLogin400ResponseAnyOfInner>`
     */
    public List<OtpRequestMobileLogin400ResponseAnyOfInner> getListOtpRequestMobileLogin400ResponseAnyOfInner() throws ClassCastException {
        return (List<OtpRequestMobileLogin400ResponseAnyOfInner>)super.getActualInstance();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to SendOtpUpdateEmail400Response
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        // validate anyOf schemas one by one
        ArrayList<String> errorMessages = new ArrayList<>();
        // validate the json string with List<OtpRequestMobileLogin400ResponseAnyOf1Inner>
        try {
            if (!jsonElement.isJsonArray()) {
                throw new IllegalArgumentException(String.format("Expected json element to be a array type in the JSON string but got `%s`", jsonElement.toString()));
            }
            JsonArray array = jsonElement.getAsJsonArray();
            // validate array items
            for(JsonElement element : array) {
                OtpRequestMobileLogin400ResponseAnyOf1Inner.validateJsonElement(element);
            }
            return;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for List<OtpRequestMobileLogin400ResponseAnyOf1Inner> failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with OtpRequestMobile400ResponseAnyOf
        try {
            OtpRequestMobile400ResponseAnyOf.validateJsonElement(jsonElement);
            return;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for OtpRequestMobile400ResponseAnyOf failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        throw new IOException(String.format("The JSON string is invalid for SendOtpUpdateEmail400Response with anyOf schemas: List<OtpRequestMobile400ResponseAnyOf1Inner1>, List<OtpRequestMobile400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner2>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner5>, List<OtpRequestMobileLogin400ResponseAnyOf1Inner>, List<OtpRequestMobileLogin400ResponseAnyOfInner>, OtpRequestMobile400ResponseAnyOf. no class match the result, expected at least 1. Detailed failure message for anyOf schemas: %s. JSON: %s", errorMessages, jsonElement.toString()));
    }

    /**
     * Create an instance of SendOtpUpdateEmail400Response given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of SendOtpUpdateEmail400Response
     * @throws IOException if the JSON string is invalid with respect to SendOtpUpdateEmail400Response
     */
    public static SendOtpUpdateEmail400Response fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, SendOtpUpdateEmail400Response.class);
    }

    /**
     * Convert an instance of SendOtpUpdateEmail400Response to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

