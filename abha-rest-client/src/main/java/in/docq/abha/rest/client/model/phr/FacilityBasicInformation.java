/*
 * Health Facility Registry APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model.phr;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.*;

/**
 * FacilityBasicInformation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-04T14:58:27.910059+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class FacilityBasicInformation {
  public static final String SERIALIZED_NAME_FACILITY_NAME = "facilityName";
  @SerializedName(SERIALIZED_NAME_FACILITY_NAME)
  @javax.annotation.Nullable
  private String facilityName;

  public static final String SERIALIZED_NAME_FACILITY_ADDRESS_DETAILS = "facilityAddressDetails";
  @SerializedName(SERIALIZED_NAME_FACILITY_ADDRESS_DETAILS)
  @javax.annotation.Nullable
  private FacilityBasicInfoAddress facilityAddressDetails;

  public static final String SERIALIZED_NAME_FACILITY_CONTACT_INFORMATION = "facilityContactInformation";
  @SerializedName(SERIALIZED_NAME_FACILITY_CONTACT_INFORMATION)
  @javax.annotation.Nullable
  private FacilityBasicInfoContact facilityContactInformation;

  public static final String SERIALIZED_NAME_OWNERSHIP_CODE = "ownershipCode";
  @SerializedName(SERIALIZED_NAME_OWNERSHIP_CODE)
  @javax.annotation.Nullable
  private String ownershipCode;

  public static final String SERIALIZED_NAME_OWNERSHIP_SUB_TYPE_CODE = "ownershipSubTypeCode";
  @SerializedName(SERIALIZED_NAME_OWNERSHIP_SUB_TYPE_CODE)
  @javax.annotation.Nullable
  private String ownershipSubTypeCode;

  public static final String SERIALIZED_NAME_OWNERSHIP_SUB_TYPE_CODE2 = "ownershipSubTypeCode2";
  @SerializedName(SERIALIZED_NAME_OWNERSHIP_SUB_TYPE_CODE2)
  @javax.annotation.Nullable
  private String ownershipSubTypeCode2;

  public static final String SERIALIZED_NAME_TYPE_OF_SERVICE_CODE = "typeOfServiceCode";
  @SerializedName(SERIALIZED_NAME_TYPE_OF_SERVICE_CODE)
  @javax.annotation.Nullable
  private String typeOfServiceCode;

  public static final String SERIALIZED_NAME_SYSTEM_OF_MEDICINE_CODE = "systemOfMedicineCode";
  @SerializedName(SERIALIZED_NAME_SYSTEM_OF_MEDICINE_CODE)
  @javax.annotation.Nullable
  private String systemOfMedicineCode;

  public static final String SERIALIZED_NAME_FACILITY_TYPE_CODE = "facilityTypeCode";
  @SerializedName(SERIALIZED_NAME_FACILITY_TYPE_CODE)
  @javax.annotation.Nullable
  private String facilityTypeCode;

  public static final String SERIALIZED_NAME_SPECIALITY_TYPE_CODE = "specialityTypeCode";
  @SerializedName(SERIALIZED_NAME_SPECIALITY_TYPE_CODE)
  @javax.annotation.Nullable
  private String specialityTypeCode;

  public static final String SERIALIZED_NAME_FACILITY_UPLOADS = "facilityUploads";
  @SerializedName(SERIALIZED_NAME_FACILITY_UPLOADS)
  @javax.annotation.Nullable
  private FacilityBasicInfoUploads facilityUploads;

  public static final String SERIALIZED_NAME_FACILITY_ADDRESS_PROOF = "facilityAddressProof";
  @SerializedName(SERIALIZED_NAME_FACILITY_ADDRESS_PROOF)
  @javax.annotation.Nullable
  private List<FacilityBasicInfoAddressProof> facilityAddressProof = new ArrayList<>();

  public static final String SERIALIZED_NAME_FACILITY_SUB_TYPE = "facilitySubType";
  @SerializedName(SERIALIZED_NAME_FACILITY_SUB_TYPE)
  @javax.annotation.Nullable
  private String facilitySubType;

  public static final String SERIALIZED_NAME_FACILITY_OPERATIONAL_STATUS = "facilityOperationalStatus";
  @SerializedName(SERIALIZED_NAME_FACILITY_OPERATIONAL_STATUS)
  @javax.annotation.Nullable
  private String facilityOperationalStatus;

  public static final String SERIALIZED_NAME_TIMINGS_OF_FACILITY = "timingsOfFacility";
  @SerializedName(SERIALIZED_NAME_TIMINGS_OF_FACILITY)
  @javax.annotation.Nullable
  private List<FacilityTimings> timingsOfFacility = new ArrayList<>();

  public static final String SERIALIZED_NAME_ABDM_COMPLIANT_SOFTWARE = "abdmCompliantSoftware";
  @SerializedName(SERIALIZED_NAME_ABDM_COMPLIANT_SOFTWARE)
  @javax.annotation.Nullable
  private List<AbdmCompliantSoftware> abdmCompliantSoftware = new ArrayList<>();

  public FacilityBasicInformation() {
  }

  public FacilityBasicInformation facilityName(@javax.annotation.Nullable String facilityName) {
    this.facilityName = facilityName;
    return this;
  }

  /**
   * Get facilityName
   * @return facilityName
   */
  @javax.annotation.Nullable
  public String getFacilityName() {
    return facilityName;
  }

  public void setFacilityName(@javax.annotation.Nullable String facilityName) {
    this.facilityName = facilityName;
  }


  public FacilityBasicInformation facilityAddressDetails(@javax.annotation.Nullable FacilityBasicInfoAddress facilityAddressDetails) {
    this.facilityAddressDetails = facilityAddressDetails;
    return this;
  }

  /**
   * Get facilityAddressDetails
   * @return facilityAddressDetails
   */
  @javax.annotation.Nullable
  public FacilityBasicInfoAddress getFacilityAddressDetails() {
    return facilityAddressDetails;
  }

  public void setFacilityAddressDetails(@javax.annotation.Nullable FacilityBasicInfoAddress facilityAddressDetails) {
    this.facilityAddressDetails = facilityAddressDetails;
  }


  public FacilityBasicInformation facilityContactInformation(@javax.annotation.Nullable FacilityBasicInfoContact facilityContactInformation) {
    this.facilityContactInformation = facilityContactInformation;
    return this;
  }

  /**
   * Get facilityContactInformation
   * @return facilityContactInformation
   */
  @javax.annotation.Nullable
  public FacilityBasicInfoContact getFacilityContactInformation() {
    return facilityContactInformation;
  }

  public void setFacilityContactInformation(@javax.annotation.Nullable FacilityBasicInfoContact facilityContactInformation) {
    this.facilityContactInformation = facilityContactInformation;
  }


  public FacilityBasicInformation ownershipCode(@javax.annotation.Nullable String ownershipCode) {
    this.ownershipCode = ownershipCode;
    return this;
  }

  /**
   * Get ownershipCode
   * @return ownershipCode
   */
  @javax.annotation.Nullable
  public String getOwnershipCode() {
    return ownershipCode;
  }

  public void setOwnershipCode(@javax.annotation.Nullable String ownershipCode) {
    this.ownershipCode = ownershipCode;
  }


  public FacilityBasicInformation ownershipSubTypeCode(@javax.annotation.Nullable String ownershipSubTypeCode) {
    this.ownershipSubTypeCode = ownershipSubTypeCode;
    return this;
  }

  /**
   * Get ownershipSubTypeCode
   * @return ownershipSubTypeCode
   */
  @javax.annotation.Nullable
  public String getOwnershipSubTypeCode() {
    return ownershipSubTypeCode;
  }

  public void setOwnershipSubTypeCode(@javax.annotation.Nullable String ownershipSubTypeCode) {
    this.ownershipSubTypeCode = ownershipSubTypeCode;
  }


  public FacilityBasicInformation ownershipSubTypeCode2(@javax.annotation.Nullable String ownershipSubTypeCode2) {
    this.ownershipSubTypeCode2 = ownershipSubTypeCode2;
    return this;
  }

  /**
   * Get ownershipSubTypeCode2
   * @return ownershipSubTypeCode2
   */
  @javax.annotation.Nullable
  public String getOwnershipSubTypeCode2() {
    return ownershipSubTypeCode2;
  }

  public void setOwnershipSubTypeCode2(@javax.annotation.Nullable String ownershipSubTypeCode2) {
    this.ownershipSubTypeCode2 = ownershipSubTypeCode2;
  }


  public FacilityBasicInformation typeOfServiceCode(@javax.annotation.Nullable String typeOfServiceCode) {
    this.typeOfServiceCode = typeOfServiceCode;
    return this;
  }

  /**
   * Get typeOfServiceCode
   * @return typeOfServiceCode
   */
  @javax.annotation.Nullable
  public String getTypeOfServiceCode() {
    return typeOfServiceCode;
  }

  public void setTypeOfServiceCode(@javax.annotation.Nullable String typeOfServiceCode) {
    this.typeOfServiceCode = typeOfServiceCode;
  }


  public FacilityBasicInformation systemOfMedicineCode(@javax.annotation.Nullable String systemOfMedicineCode) {
    this.systemOfMedicineCode = systemOfMedicineCode;
    return this;
  }

  /**
   * Get systemOfMedicineCode
   * @return systemOfMedicineCode
   */
  @javax.annotation.Nullable
  public String getSystemOfMedicineCode() {
    return systemOfMedicineCode;
  }

  public void setSystemOfMedicineCode(@javax.annotation.Nullable String systemOfMedicineCode) {
    this.systemOfMedicineCode = systemOfMedicineCode;
  }


  public FacilityBasicInformation facilityTypeCode(@javax.annotation.Nullable String facilityTypeCode) {
    this.facilityTypeCode = facilityTypeCode;
    return this;
  }

  /**
   * Get facilityTypeCode
   * @return facilityTypeCode
   */
  @javax.annotation.Nullable
  public String getFacilityTypeCode() {
    return facilityTypeCode;
  }

  public void setFacilityTypeCode(@javax.annotation.Nullable String facilityTypeCode) {
    this.facilityTypeCode = facilityTypeCode;
  }


  public FacilityBasicInformation specialityTypeCode(@javax.annotation.Nullable String specialityTypeCode) {
    this.specialityTypeCode = specialityTypeCode;
    return this;
  }

  /**
   * Get specialityTypeCode
   * @return specialityTypeCode
   */
  @javax.annotation.Nullable
  public String getSpecialityTypeCode() {
    return specialityTypeCode;
  }

  public void setSpecialityTypeCode(@javax.annotation.Nullable String specialityTypeCode) {
    this.specialityTypeCode = specialityTypeCode;
  }


  public FacilityBasicInformation facilityUploads(@javax.annotation.Nullable FacilityBasicInfoUploads facilityUploads) {
    this.facilityUploads = facilityUploads;
    return this;
  }

  /**
   * Get facilityUploads
   * @return facilityUploads
   */
  @javax.annotation.Nullable
  public FacilityBasicInfoUploads getFacilityUploads() {
    return facilityUploads;
  }

  public void setFacilityUploads(@javax.annotation.Nullable FacilityBasicInfoUploads facilityUploads) {
    this.facilityUploads = facilityUploads;
  }


  public FacilityBasicInformation facilityAddressProof(@javax.annotation.Nullable List<FacilityBasicInfoAddressProof> facilityAddressProof) {
    this.facilityAddressProof = facilityAddressProof;
    return this;
  }

  public FacilityBasicInformation addFacilityAddressProofItem(FacilityBasicInfoAddressProof facilityAddressProofItem) {
    if (this.facilityAddressProof == null) {
      this.facilityAddressProof = new ArrayList<>();
    }
    this.facilityAddressProof.add(facilityAddressProofItem);
    return this;
  }

  /**
   * Get facilityAddressProof
   * @return facilityAddressProof
   */
  @javax.annotation.Nullable
  public List<FacilityBasicInfoAddressProof> getFacilityAddressProof() {
    return facilityAddressProof;
  }

  public void setFacilityAddressProof(@javax.annotation.Nullable List<FacilityBasicInfoAddressProof> facilityAddressProof) {
    this.facilityAddressProof = facilityAddressProof;
  }


  public FacilityBasicInformation facilitySubType(@javax.annotation.Nullable String facilitySubType) {
    this.facilitySubType = facilitySubType;
    return this;
  }

  /**
   * Get facilitySubType
   * @return facilitySubType
   */
  @javax.annotation.Nullable
  public String getFacilitySubType() {
    return facilitySubType;
  }

  public void setFacilitySubType(@javax.annotation.Nullable String facilitySubType) {
    this.facilitySubType = facilitySubType;
  }


  public FacilityBasicInformation facilityOperationalStatus(@javax.annotation.Nullable String facilityOperationalStatus) {
    this.facilityOperationalStatus = facilityOperationalStatus;
    return this;
  }

  /**
   * Get facilityOperationalStatus
   * @return facilityOperationalStatus
   */
  @javax.annotation.Nullable
  public String getFacilityOperationalStatus() {
    return facilityOperationalStatus;
  }

  public void setFacilityOperationalStatus(@javax.annotation.Nullable String facilityOperationalStatus) {
    this.facilityOperationalStatus = facilityOperationalStatus;
  }


  public FacilityBasicInformation timingsOfFacility(@javax.annotation.Nullable List<FacilityTimings> timingsOfFacility) {
    this.timingsOfFacility = timingsOfFacility;
    return this;
  }

  public FacilityBasicInformation addTimingsOfFacilityItem(FacilityTimings timingsOfFacilityItem) {
    if (this.timingsOfFacility == null) {
      this.timingsOfFacility = new ArrayList<>();
    }
    this.timingsOfFacility.add(timingsOfFacilityItem);
    return this;
  }

  /**
   * Get timingsOfFacility
   * @return timingsOfFacility
   */
  @javax.annotation.Nullable
  public List<FacilityTimings> getTimingsOfFacility() {
    return timingsOfFacility;
  }

  public void setTimingsOfFacility(@javax.annotation.Nullable List<FacilityTimings> timingsOfFacility) {
    this.timingsOfFacility = timingsOfFacility;
  }


  public FacilityBasicInformation abdmCompliantSoftware(@javax.annotation.Nullable List<AbdmCompliantSoftware> abdmCompliantSoftware) {
    this.abdmCompliantSoftware = abdmCompliantSoftware;
    return this;
  }

  public FacilityBasicInformation addAbdmCompliantSoftwareItem(AbdmCompliantSoftware abdmCompliantSoftwareItem) {
    if (this.abdmCompliantSoftware == null) {
      this.abdmCompliantSoftware = new ArrayList<>();
    }
    this.abdmCompliantSoftware.add(abdmCompliantSoftwareItem);
    return this;
  }

  /**
   * Get abdmCompliantSoftware
   * @return abdmCompliantSoftware
   */
  @javax.annotation.Nullable
  public List<AbdmCompliantSoftware> getAbdmCompliantSoftware() {
    return abdmCompliantSoftware;
  }

  public void setAbdmCompliantSoftware(@javax.annotation.Nullable List<AbdmCompliantSoftware> abdmCompliantSoftware) {
    this.abdmCompliantSoftware = abdmCompliantSoftware;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FacilityBasicInformation facilityBasicInformation = (FacilityBasicInformation) o;
    return Objects.equals(this.facilityName, facilityBasicInformation.facilityName) &&
        Objects.equals(this.facilityAddressDetails, facilityBasicInformation.facilityAddressDetails) &&
        Objects.equals(this.facilityContactInformation, facilityBasicInformation.facilityContactInformation) &&
        Objects.equals(this.ownershipCode, facilityBasicInformation.ownershipCode) &&
        Objects.equals(this.ownershipSubTypeCode, facilityBasicInformation.ownershipSubTypeCode) &&
        Objects.equals(this.ownershipSubTypeCode2, facilityBasicInformation.ownershipSubTypeCode2) &&
        Objects.equals(this.typeOfServiceCode, facilityBasicInformation.typeOfServiceCode) &&
        Objects.equals(this.systemOfMedicineCode, facilityBasicInformation.systemOfMedicineCode) &&
        Objects.equals(this.facilityTypeCode, facilityBasicInformation.facilityTypeCode) &&
        Objects.equals(this.specialityTypeCode, facilityBasicInformation.specialityTypeCode) &&
        Objects.equals(this.facilityUploads, facilityBasicInformation.facilityUploads) &&
        Objects.equals(this.facilityAddressProof, facilityBasicInformation.facilityAddressProof) &&
        Objects.equals(this.facilitySubType, facilityBasicInformation.facilitySubType) &&
        Objects.equals(this.facilityOperationalStatus, facilityBasicInformation.facilityOperationalStatus) &&
        Objects.equals(this.timingsOfFacility, facilityBasicInformation.timingsOfFacility) &&
        Objects.equals(this.abdmCompliantSoftware, facilityBasicInformation.abdmCompliantSoftware);
  }

  @Override
  public int hashCode() {
    return Objects.hash(facilityName, facilityAddressDetails, facilityContactInformation, ownershipCode, ownershipSubTypeCode, ownershipSubTypeCode2, typeOfServiceCode, systemOfMedicineCode, facilityTypeCode, specialityTypeCode, facilityUploads, facilityAddressProof, facilitySubType, facilityOperationalStatus, timingsOfFacility, abdmCompliantSoftware);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FacilityBasicInformation {\n");
    sb.append("    facilityName: ").append(toIndentedString(facilityName)).append("\n");
    sb.append("    facilityAddressDetails: ").append(toIndentedString(facilityAddressDetails)).append("\n");
    sb.append("    facilityContactInformation: ").append(toIndentedString(facilityContactInformation)).append("\n");
    sb.append("    ownershipCode: ").append(toIndentedString(ownershipCode)).append("\n");
    sb.append("    ownershipSubTypeCode: ").append(toIndentedString(ownershipSubTypeCode)).append("\n");
    sb.append("    ownershipSubTypeCode2: ").append(toIndentedString(ownershipSubTypeCode2)).append("\n");
    sb.append("    typeOfServiceCode: ").append(toIndentedString(typeOfServiceCode)).append("\n");
    sb.append("    systemOfMedicineCode: ").append(toIndentedString(systemOfMedicineCode)).append("\n");
    sb.append("    facilityTypeCode: ").append(toIndentedString(facilityTypeCode)).append("\n");
    sb.append("    specialityTypeCode: ").append(toIndentedString(specialityTypeCode)).append("\n");
    sb.append("    facilityUploads: ").append(toIndentedString(facilityUploads)).append("\n");
    sb.append("    facilityAddressProof: ").append(toIndentedString(facilityAddressProof)).append("\n");
    sb.append("    facilitySubType: ").append(toIndentedString(facilitySubType)).append("\n");
    sb.append("    facilityOperationalStatus: ").append(toIndentedString(facilityOperationalStatus)).append("\n");
    sb.append("    timingsOfFacility: ").append(toIndentedString(timingsOfFacility)).append("\n");
    sb.append("    abdmCompliantSoftware: ").append(toIndentedString(abdmCompliantSoftware)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("facilityName");
    openapiFields.add("facilityAddressDetails");
    openapiFields.add("facilityContactInformation");
    openapiFields.add("ownershipCode");
    openapiFields.add("ownershipSubTypeCode");
    openapiFields.add("ownershipSubTypeCode2");
    openapiFields.add("typeOfServiceCode");
    openapiFields.add("systemOfMedicineCode");
    openapiFields.add("facilityTypeCode");
    openapiFields.add("specialityTypeCode");
    openapiFields.add("facilityUploads");
    openapiFields.add("facilityAddressProof");
    openapiFields.add("facilitySubType");
    openapiFields.add("facilityOperationalStatus");
    openapiFields.add("timingsOfFacility");
    openapiFields.add("abdmCompliantSoftware");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FacilityBasicInformation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FacilityBasicInformation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FacilityBasicInformation is not found in the empty JSON string", FacilityBasicInformation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FacilityBasicInformation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FacilityBasicInformation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("facilityName") != null && !jsonObj.get("facilityName").isJsonNull()) && !jsonObj.get("facilityName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilityName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facilityName").toString()));
      }
      // validate the optional field `facilityAddressDetails`
      if (jsonObj.get("facilityAddressDetails") != null && !jsonObj.get("facilityAddressDetails").isJsonNull()) {
        FacilityBasicInfoAddress.validateJsonElement(jsonObj.get("facilityAddressDetails"));
      }
      // validate the optional field `facilityContactInformation`
      if (jsonObj.get("facilityContactInformation") != null && !jsonObj.get("facilityContactInformation").isJsonNull()) {
        FacilityBasicInfoContact.validateJsonElement(jsonObj.get("facilityContactInformation"));
      }
      if ((jsonObj.get("ownershipCode") != null && !jsonObj.get("ownershipCode").isJsonNull()) && !jsonObj.get("ownershipCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownershipCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownershipCode").toString()));
      }
      if ((jsonObj.get("ownershipSubTypeCode") != null && !jsonObj.get("ownershipSubTypeCode").isJsonNull()) && !jsonObj.get("ownershipSubTypeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownershipSubTypeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownershipSubTypeCode").toString()));
      }
      if ((jsonObj.get("ownershipSubTypeCode2") != null && !jsonObj.get("ownershipSubTypeCode2").isJsonNull()) && !jsonObj.get("ownershipSubTypeCode2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownershipSubTypeCode2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownershipSubTypeCode2").toString()));
      }
      if ((jsonObj.get("typeOfServiceCode") != null && !jsonObj.get("typeOfServiceCode").isJsonNull()) && !jsonObj.get("typeOfServiceCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `typeOfServiceCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("typeOfServiceCode").toString()));
      }
      if ((jsonObj.get("systemOfMedicineCode") != null && !jsonObj.get("systemOfMedicineCode").isJsonNull()) && !jsonObj.get("systemOfMedicineCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `systemOfMedicineCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("systemOfMedicineCode").toString()));
      }
      if ((jsonObj.get("facilityTypeCode") != null && !jsonObj.get("facilityTypeCode").isJsonNull()) && !jsonObj.get("facilityTypeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilityTypeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facilityTypeCode").toString()));
      }
      if ((jsonObj.get("specialityTypeCode") != null && !jsonObj.get("specialityTypeCode").isJsonNull()) && !jsonObj.get("specialityTypeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `specialityTypeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("specialityTypeCode").toString()));
      }
      // validate the optional field `facilityUploads`
      if (jsonObj.get("facilityUploads") != null && !jsonObj.get("facilityUploads").isJsonNull()) {
        FacilityBasicInfoUploads.validateJsonElement(jsonObj.get("facilityUploads"));
      }
      if (jsonObj.get("facilityAddressProof") != null && !jsonObj.get("facilityAddressProof").isJsonNull()) {
        JsonArray jsonArrayfacilityAddressProof = jsonObj.getAsJsonArray("facilityAddressProof");
        if (jsonArrayfacilityAddressProof != null) {
          // ensure the json data is an array
          if (!jsonObj.get("facilityAddressProof").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `facilityAddressProof` to be an array in the JSON string but got `%s`", jsonObj.get("facilityAddressProof").toString()));
          }

          // validate the optional field `facilityAddressProof` (array)
          for (int i = 0; i < jsonArrayfacilityAddressProof.size(); i++) {
            FacilityBasicInfoAddressProof.validateJsonElement(jsonArrayfacilityAddressProof.get(i));
          };
        }
      }
      if ((jsonObj.get("facilitySubType") != null && !jsonObj.get("facilitySubType").isJsonNull()) && !jsonObj.get("facilitySubType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilitySubType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facilitySubType").toString()));
      }
      if ((jsonObj.get("facilityOperationalStatus") != null && !jsonObj.get("facilityOperationalStatus").isJsonNull()) && !jsonObj.get("facilityOperationalStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilityOperationalStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facilityOperationalStatus").toString()));
      }
      if (jsonObj.get("timingsOfFacility") != null && !jsonObj.get("timingsOfFacility").isJsonNull()) {
        JsonArray jsonArraytimingsOfFacility = jsonObj.getAsJsonArray("timingsOfFacility");
        if (jsonArraytimingsOfFacility != null) {
          // ensure the json data is an array
          if (!jsonObj.get("timingsOfFacility").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `timingsOfFacility` to be an array in the JSON string but got `%s`", jsonObj.get("timingsOfFacility").toString()));
          }

          // validate the optional field `timingsOfFacility` (array)
          for (int i = 0; i < jsonArraytimingsOfFacility.size(); i++) {
            FacilityTimings.validateJsonElement(jsonArraytimingsOfFacility.get(i));
          };
        }
      }
      if (jsonObj.get("abdmCompliantSoftware") != null && !jsonObj.get("abdmCompliantSoftware").isJsonNull()) {
        JsonArray jsonArrayabdmCompliantSoftware = jsonObj.getAsJsonArray("abdmCompliantSoftware");
        if (jsonArrayabdmCompliantSoftware != null) {
          // ensure the json data is an array
          if (!jsonObj.get("abdmCompliantSoftware").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `abdmCompliantSoftware` to be an array in the JSON string but got `%s`", jsonObj.get("abdmCompliantSoftware").toString()));
          }

          // validate the optional field `abdmCompliantSoftware` (array)
          for (int i = 0; i < jsonArrayabdmCompliantSoftware.size(); i++) {
            AbdmCompliantSoftware.validateJsonElement(jsonArrayabdmCompliantSoftware.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FacilityBasicInformation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FacilityBasicInformation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FacilityBasicInformation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FacilityBasicInformation.class));

       return (TypeAdapter<T>) new TypeAdapter<FacilityBasicInformation>() {
           @Override
           public void write(JsonWriter out, FacilityBasicInformation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FacilityBasicInformation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FacilityBasicInformation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FacilityBasicInformation
   * @throws IOException if the JSON string is invalid with respect to FacilityBasicInformation
   */
  public static FacilityBasicInformation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FacilityBasicInformation.class);
  }

  /**
   * Convert an instance of FacilityBasicInformation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

