/*
 * PHR V3 Swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.api.phr;

import com.google.gson.reflect.TypeToken;
import in.docq.abha.rest.client.*;
import in.docq.abha.rest.client.model.*;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.CompletionStage;

public class LoginApiCollectionApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public LoginApiCollectionApi() {
        this(Configuration.getDefaultApiClient());
    }

    public LoginApiCollectionApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for loginOtpVerifyMobile
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param otpVerifyMobileRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;authData&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Contains the authentication methods and OTP details.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;authMethods:&lt;/strong&gt; Specifies the method of authentication. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;otp\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;otp:&lt;/strong&gt; Contains the OTP value and transaction ID. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;otpValue:&lt;/strong&gt; The encrypted OTP provided by the user. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted OTP}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;txnId:&lt;/strong&gt; The transaction ID associated with the OTP request. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP verification.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-login\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-login&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;aadhaar-verify&lt;/code&gt;,&lt;code&gt;abha-address-login&lt;/code&gt;, &lt;code&gt;email-verify&lt;/code&gt;,&lt;code&gt;password-verify&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful verification of an OTP (One-Time Password) or password for various login services.   &lt;p&gt;&lt;strong&gt;Types of Login Verifications:&lt;/strong&gt;&lt;/p&gt;   &lt;ol&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;3\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for ABHA (Ayushman Bharat Health Account) address login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;4\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR:&lt;/strong&gt; This response indicates that the OTP sent for AADHAAR login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;5\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login Verify - Password:&lt;/strong&gt; This response indicates that the password provided for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;6\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Password:&lt;/strong&gt; This response indicates that the password provided for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;7\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email:&lt;/strong&gt; This response indicates that the OTP sent to an email address for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;8\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to an email address for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;9\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to an email address for ABHA (Ayushman Bharat Health Account) address login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;10\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA:&lt;/strong&gt; This response indicates that the OTP sent for ABHA login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;11\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent for ABHA login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) request process. &lt;p&gt;&lt;strong&gt;Types of Login OTP Verification Errors:&lt;/strong&gt;&lt;/p&gt;    &lt;ol&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for mobile OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;2\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for mobile OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;3\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the mobile OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;4\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA address mobile OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;5\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA address mobile OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;6\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address mobile OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;7\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for AADHAAR OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;8\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for AADHAAR OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;9\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;10\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for password verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;11\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Blank Password:&lt;/strong&gt; This error occurs when the password field is left blank during the login process.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;12\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the password verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;13\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for email OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;14\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for email OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;15\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the email OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;16\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA address email OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;17\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA address email OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;18\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address email OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;19\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;20\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;21\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates unauthorized access. This means the user is not authenticated to perform the requested operation. &lt;p&gt;&lt;strong&gt;Types of OTP Verification Errors:&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA address mobile OTP verification.&lt;/p&gt;     &lt;/ol&gt;   &lt;/li&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA address email OTP verification.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;3\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA OTP verification.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call loginOtpVerifyMobileCall(String REQUEST_ID, String TIMESTAMP, OtpVerifyMobileRequest otpVerifyMobileRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = otpVerifyMobileRequest;

        // create path and map variables
        String localVarPath = "/abha/api/v3/phr/app/login/verify";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (REQUEST_ID != null) {
            localVarHeaderParams.put("REQUEST-ID", localVarApiClient.parameterToString(REQUEST_ID));
        }


        if (TIMESTAMP != null) {
            localVarHeaderParams.put("TIMESTAMP", localVarApiClient.parameterToString(TIMESTAMP));
        }


        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call loginOtpVerifyMobileValidateBeforeCall(String REQUEST_ID, String TIMESTAMP, OtpVerifyMobileRequest otpVerifyMobileRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'REQUEST_ID' is set
        if (REQUEST_ID == null) {
            throw new ApiException("Missing the required parameter 'REQUEST_ID' when calling loginOtpVerifyMobile(Async)");
        }

        // verify the required parameter 'TIMESTAMP' is set
        if (TIMESTAMP == null) {
            throw new ApiException("Missing the required parameter 'TIMESTAMP' when calling loginOtpVerifyMobile(Async)");
        }

        return loginOtpVerifyMobileCall(REQUEST_ID, TIMESTAMP, otpVerifyMobileRequest, _callback);

    }

    /**
     * OTP Verify
     * API is used to verify the One-Time Password (OTP) provided by the user. This verification process ensures that the user is authenticated based on the OTP sent to their registered contact method. The API supports multiple scenarios for OTP verification, including the below example:&lt;br&gt;&lt;br&gt;**Example of OTP Verify**&lt;br&gt; &lt;br&gt;Example1:&lt;br&gt; **ABHA ADDRESS Verify Email OTP:** Verifies the OTP sent to the user’s registered email address associated with their ABHA address.&lt;br&gt; &lt;br&gt;Example2:&lt;br&gt; **ABHA ADDRESS Verify Mobile OTP:** Verifies the OTP sent to the mobile number linked to the user’s ABHA address.&lt;br&gt; &lt;br&gt;Example3:&lt;br&gt; **AADHAAR OTP:**  Verifies the OTP sent to the mobile number linked to the user’s Aadhaar number.&lt;br&gt; &lt;br&gt;Example4:&lt;br&gt; **ABHA Verify OTP:** Verifies the OTP sent to the mobile number linked to the user’s ABHA number.&lt;br&gt; &lt;br&gt;Example5:&lt;br&gt; **Email Verify OTP:** Verifies the OTP sent to the user’s registered email address.&lt;br&gt; &lt;br&gt;Example6:&lt;br&gt; **Mobile Verify OTP:** Verifies the OTP sent to the user’s registered mobile number.&lt;br&gt; &lt;br&gt;Example7:&lt;br&gt; **Password Verify OTP:** Verifies the OTP sent for password authentication.&lt;br&gt; &lt;br&gt;&lt;br&gt;Note:&lt;br&gt;**1. OTP will be valid for 10 minute only** &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/&gt; &lt;th&gt;Description&lt;/&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;txnId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;transactionId&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;Aadhaar/Abha/Abha Address Mobile/Abha Address Email/Email/Mobile/Password&lt;/td&gt; &lt;/tr&gt; &lt;/tbody &lt;/table&gt; --&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param otpVerifyMobileRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;authData&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Contains the authentication methods and OTP details.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;authMethods:&lt;/strong&gt; Specifies the method of authentication. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;otp\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;otp:&lt;/strong&gt; Contains the OTP value and transaction ID. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;otpValue:&lt;/strong&gt; The encrypted OTP provided by the user. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted OTP}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;txnId:&lt;/strong&gt; The transaction ID associated with the OTP request. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP verification.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-login\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-login&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;aadhaar-verify&lt;/code&gt;,&lt;code&gt;abha-address-login&lt;/code&gt;, &lt;code&gt;email-verify&lt;/code&gt;,&lt;code&gt;password-verify&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @return LoginOtpVerifyMobile200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful verification of an OTP (One-Time Password) or password for various login services.   &lt;p&gt;&lt;strong&gt;Types of Login Verifications:&lt;/strong&gt;&lt;/p&gt;   &lt;ol&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;3\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for ABHA (Ayushman Bharat Health Account) address login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;4\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR:&lt;/strong&gt; This response indicates that the OTP sent for AADHAAR login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;5\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login Verify - Password:&lt;/strong&gt; This response indicates that the password provided for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;6\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Password:&lt;/strong&gt; This response indicates that the password provided for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;7\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email:&lt;/strong&gt; This response indicates that the OTP sent to an email address for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;8\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to an email address for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;9\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to an email address for ABHA (Ayushman Bharat Health Account) address login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;10\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA:&lt;/strong&gt; This response indicates that the OTP sent for ABHA login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;11\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent for ABHA login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) request process. &lt;p&gt;&lt;strong&gt;Types of Login OTP Verification Errors:&lt;/strong&gt;&lt;/p&gt;    &lt;ol&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for mobile OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;2\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for mobile OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;3\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the mobile OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;4\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA address mobile OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;5\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA address mobile OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;6\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address mobile OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;7\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for AADHAAR OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;8\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for AADHAAR OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;9\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;10\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for password verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;11\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Blank Password:&lt;/strong&gt; This error occurs when the password field is left blank during the login process.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;12\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the password verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;13\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for email OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;14\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for email OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;15\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the email OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;16\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA address email OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;17\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA address email OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;18\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address email OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;19\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;20\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;21\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates unauthorized access. This means the user is not authenticated to perform the requested operation. &lt;p&gt;&lt;strong&gt;Types of OTP Verification Errors:&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA address mobile OTP verification.&lt;/p&gt;     &lt;/ol&gt;   &lt;/li&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA address email OTP verification.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;3\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA OTP verification.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public LoginOtpVerifyMobile200Response loginOtpVerifyMobile(String REQUEST_ID, String TIMESTAMP, OtpVerifyMobileRequest otpVerifyMobileRequest) throws ApiException {
        ApiResponse<LoginOtpVerifyMobile200Response> localVarResp = loginOtpVerifyMobileWithHttpInfo(REQUEST_ID, TIMESTAMP, otpVerifyMobileRequest);
        return localVarResp.getData();
    }

    /**
     * OTP Verify
     * API is used to verify the One-Time Password (OTP) provided by the user. This verification process ensures that the user is authenticated based on the OTP sent to their registered contact method. The API supports multiple scenarios for OTP verification, including the below example:&lt;br&gt;&lt;br&gt;**Example of OTP Verify**&lt;br&gt; &lt;br&gt;Example1:&lt;br&gt; **ABHA ADDRESS Verify Email OTP:** Verifies the OTP sent to the user’s registered email address associated with their ABHA address.&lt;br&gt; &lt;br&gt;Example2:&lt;br&gt; **ABHA ADDRESS Verify Mobile OTP:** Verifies the OTP sent to the mobile number linked to the user’s ABHA address.&lt;br&gt; &lt;br&gt;Example3:&lt;br&gt; **AADHAAR OTP:**  Verifies the OTP sent to the mobile number linked to the user’s Aadhaar number.&lt;br&gt; &lt;br&gt;Example4:&lt;br&gt; **ABHA Verify OTP:** Verifies the OTP sent to the mobile number linked to the user’s ABHA number.&lt;br&gt; &lt;br&gt;Example5:&lt;br&gt; **Email Verify OTP:** Verifies the OTP sent to the user’s registered email address.&lt;br&gt; &lt;br&gt;Example6:&lt;br&gt; **Mobile Verify OTP:** Verifies the OTP sent to the user’s registered mobile number.&lt;br&gt; &lt;br&gt;Example7:&lt;br&gt; **Password Verify OTP:** Verifies the OTP sent for password authentication.&lt;br&gt; &lt;br&gt;&lt;br&gt;Note:&lt;br&gt;**1. OTP will be valid for 10 minute only** &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/&gt; &lt;th&gt;Description&lt;/&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;txnId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;transactionId&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;Aadhaar/Abha/Abha Address Mobile/Abha Address Email/Email/Mobile/Password&lt;/td&gt; &lt;/tr&gt; &lt;/tbody &lt;/table&gt; --&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param otpVerifyMobileRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;authData&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Contains the authentication methods and OTP details.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;authMethods:&lt;/strong&gt; Specifies the method of authentication. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;otp\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;otp:&lt;/strong&gt; Contains the OTP value and transaction ID. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;otpValue:&lt;/strong&gt; The encrypted OTP provided by the user. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted OTP}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;txnId:&lt;/strong&gt; The transaction ID associated with the OTP request. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP verification.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-login\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-login&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;aadhaar-verify&lt;/code&gt;,&lt;code&gt;abha-address-login&lt;/code&gt;, &lt;code&gt;email-verify&lt;/code&gt;,&lt;code&gt;password-verify&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @return ApiResponse&lt;LoginOtpVerifyMobile200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful verification of an OTP (One-Time Password) or password for various login services.   &lt;p&gt;&lt;strong&gt;Types of Login Verifications:&lt;/strong&gt;&lt;/p&gt;   &lt;ol&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;3\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for ABHA (Ayushman Bharat Health Account) address login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;4\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR:&lt;/strong&gt; This response indicates that the OTP sent for AADHAAR login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;5\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login Verify - Password:&lt;/strong&gt; This response indicates that the password provided for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;6\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Password:&lt;/strong&gt; This response indicates that the password provided for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;7\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email:&lt;/strong&gt; This response indicates that the OTP sent to an email address for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;8\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to an email address for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;9\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to an email address for ABHA (Ayushman Bharat Health Account) address login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;10\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA:&lt;/strong&gt; This response indicates that the OTP sent for ABHA login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;11\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent for ABHA login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) request process. &lt;p&gt;&lt;strong&gt;Types of Login OTP Verification Errors:&lt;/strong&gt;&lt;/p&gt;    &lt;ol&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for mobile OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;2\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for mobile OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;3\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the mobile OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;4\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA address mobile OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;5\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA address mobile OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;6\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address mobile OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;7\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for AADHAAR OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;8\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for AADHAAR OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;9\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;10\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for password verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;11\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Blank Password:&lt;/strong&gt; This error occurs when the password field is left blank during the login process.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;12\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the password verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;13\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for email OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;14\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for email OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;15\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the email OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;16\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA address email OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;17\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA address email OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;18\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address email OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;19\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;20\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;21\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates unauthorized access. This means the user is not authenticated to perform the requested operation. &lt;p&gt;&lt;strong&gt;Types of OTP Verification Errors:&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA address mobile OTP verification.&lt;/p&gt;     &lt;/ol&gt;   &lt;/li&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA address email OTP verification.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;3\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA OTP verification.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<LoginOtpVerifyMobile200Response> loginOtpVerifyMobileWithHttpInfo(String REQUEST_ID, String TIMESTAMP, OtpVerifyMobileRequest otpVerifyMobileRequest) throws ApiException {
        okhttp3.Call localVarCall = loginOtpVerifyMobileValidateBeforeCall(REQUEST_ID, TIMESTAMP, otpVerifyMobileRequest, null);
        Type localVarReturnType = new TypeToken<LoginOtpVerifyMobile200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * OTP Verify (asynchronously)
     * API is used to verify the One-Time Password (OTP) provided by the user. This verification process ensures that the user is authenticated based on the OTP sent to their registered contact method. The API supports multiple scenarios for OTP verification, including the below example:&lt;br&gt;&lt;br&gt;**Example of OTP Verify**&lt;br&gt; &lt;br&gt;Example1:&lt;br&gt; **ABHA ADDRESS Verify Email OTP:** Verifies the OTP sent to the user’s registered email address associated with their ABHA address.&lt;br&gt; &lt;br&gt;Example2:&lt;br&gt; **ABHA ADDRESS Verify Mobile OTP:** Verifies the OTP sent to the mobile number linked to the user’s ABHA address.&lt;br&gt; &lt;br&gt;Example3:&lt;br&gt; **AADHAAR OTP:**  Verifies the OTP sent to the mobile number linked to the user’s Aadhaar number.&lt;br&gt; &lt;br&gt;Example4:&lt;br&gt; **ABHA Verify OTP:** Verifies the OTP sent to the mobile number linked to the user’s ABHA number.&lt;br&gt; &lt;br&gt;Example5:&lt;br&gt; **Email Verify OTP:** Verifies the OTP sent to the user’s registered email address.&lt;br&gt; &lt;br&gt;Example6:&lt;br&gt; **Mobile Verify OTP:** Verifies the OTP sent to the user’s registered mobile number.&lt;br&gt; &lt;br&gt;Example7:&lt;br&gt; **Password Verify OTP:** Verifies the OTP sent for password authentication.&lt;br&gt; &lt;br&gt;&lt;br&gt;Note:&lt;br&gt;**1. OTP will be valid for 10 minute only** &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/&gt; &lt;th&gt;Description&lt;/&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;txnId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;transactionId&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;Aadhaar/Abha/Abha Address Mobile/Abha Address Email/Email/Mobile/Password&lt;/td&gt; &lt;/tr&gt; &lt;/tbody &lt;/table&gt; --&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param otpVerifyMobileRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;authData&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Contains the authentication methods and OTP details.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;authMethods:&lt;/strong&gt; Specifies the method of authentication. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;otp\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;otp:&lt;/strong&gt; Contains the OTP value and transaction ID. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Properties:&lt;/strong&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;otpValue:&lt;/strong&gt; The encrypted OTP provided by the user. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted OTP}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;txnId:&lt;/strong&gt; The transaction ID associated with the OTP request. &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; String&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP verification.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Type:&lt;/strong&gt; Array of strings&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-login\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-login&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;aadhaar-verify&lt;/code&gt;,&lt;code&gt;abha-address-login&lt;/code&gt;, &lt;code&gt;email-verify&lt;/code&gt;,&lt;code&gt;password-verify&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful verification of an OTP (One-Time Password) or password for various login services.   &lt;p&gt;&lt;strong&gt;Types of Login Verifications:&lt;/strong&gt;&lt;/p&gt;   &lt;ol&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;3\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to a mobile number for ABHA (Ayushman Bharat Health Account) address login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;4\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR:&lt;/strong&gt; This response indicates that the OTP sent for AADHAAR login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;5\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login Verify - Password:&lt;/strong&gt; This response indicates that the password provided for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;6\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Password:&lt;/strong&gt; This response indicates that the password provided for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;7\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email:&lt;/strong&gt; This response indicates that the OTP sent to an email address for login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;8\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to an email address for login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;9\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent to an email address for ABHA (Ayushman Bharat Health Account) address login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;10\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA:&lt;/strong&gt; This response indicates that the OTP sent for ABHA login purposes has been successfully verified.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;11\&quot;&gt;     &lt;li&gt;       &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid OTP:&lt;/strong&gt; This response indicates that the OTP sent for ABHA login purposes is invalid.&lt;/p&gt;     &lt;/li&gt;   &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) request process. &lt;p&gt;&lt;strong&gt;Types of Login OTP Verification Errors:&lt;/strong&gt;&lt;/p&gt;    &lt;ol&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for mobile OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;2\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for mobile OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;3\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the mobile OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;4\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA address mobile OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;5\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA address mobile OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;6\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address mobile OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;7\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for AADHAAR OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;8\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for AADHAAR OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;9\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - AADHAAR - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;10\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for password verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;11\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Blank Password:&lt;/strong&gt; This error occurs when the password field is left blank during the login process.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;12\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login Verify - Password - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the password verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;13\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for email OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;14\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for email OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;15\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the email OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;16\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA address email OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;17\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA address email OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;18\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address email OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;19\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for ABHA OTP verification is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;20\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Auth Methods:&lt;/strong&gt; This error occurs when the authentication methods used for ABHA OTP verification are invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt;    &lt;ol start&#x3D;\&quot;21\&quot;&gt;      &lt;li&gt;        &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA OTP verification request is invalid.&lt;/p&gt;      &lt;/li&gt;    &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates unauthorized access. This means the user is not authenticated to perform the requested operation. &lt;p&gt;&lt;strong&gt;Types of OTP Verification Errors:&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Mobile - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA address mobile OTP verification.&lt;/p&gt;     &lt;/ol&gt;   &lt;/li&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA Address Email - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA address email OTP verification.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;3\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Login OTP Verify - ABHA - No Auth:&lt;/strong&gt; This error occurs when no authentication method is provided for ABHA OTP verification.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call loginOtpVerifyMobileAsync(String REQUEST_ID, String TIMESTAMP, OtpVerifyMobileRequest otpVerifyMobileRequest, final ApiCallback<LoginOtpVerifyMobile200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = loginOtpVerifyMobileValidateBeforeCall(REQUEST_ID, TIMESTAMP, otpVerifyMobileRequest, _callback);
        Type localVarReturnType = new TypeToken<LoginOtpVerifyMobile200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public CompletionStage<LoginOtpVerifyMobile200Response> loginOtpVerifyMobileAsyncCall(String token, String REQUEST_ID, String TIMESTAMP, OtpVerifyMobileRequest otpVerifyMobileRequest) throws ApiException {
        FutureApiCallBack<LoginOtpVerifyMobile200Response> callback = FutureApiCallBack.newCallback();
        okhttp3.Call localVarCall = loginOtpVerifyMobileValidateBeforeCall(token, REQUEST_ID, TIMESTAMP, otpVerifyMobileRequest, callback);
        Type localVarReturnType = new TypeToken<LoginOtpVerifyMobile200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, callback);
        return callback.getFuture();
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call loginOtpVerifyMobileValidateBeforeCall(String token, String REQUEST_ID, String TIMESTAMP, OtpVerifyMobileRequest otpVerifyMobileRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'REQUEST_ID' is set
        if (REQUEST_ID == null) {
            throw new ApiException("Missing the required parameter 'REQUEST_ID' when calling loginOtpVerifyMobile(Async)");
        }

        // verify the required parameter 'TIMESTAMP' is set
        if (TIMESTAMP == null) {
            throw new ApiException("Missing the required parameter 'TIMESTAMP' when calling loginOtpVerifyMobile(Async)");
        }

        return loginOtpVerifyMobileCall(token, REQUEST_ID, TIMESTAMP, otpVerifyMobileRequest, _callback);

    }

    public okhttp3.Call loginOtpVerifyMobileCall(String token, String REQUEST_ID, String TIMESTAMP, OtpVerifyMobileRequest otpVerifyMobileRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = otpVerifyMobileRequest;

        // create path and map variables
        String localVarPath = "/abha/api/v3/phr/app/login/verify";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (token != null) {
            localVarHeaderParams.put("Authorization", "Bearer " + localVarApiClient.parameterToString(token));
        }

        if (REQUEST_ID != null) {
            localVarHeaderParams.put("REQUEST-ID", localVarApiClient.parameterToString(REQUEST_ID));
        }


        if (TIMESTAMP != null) {
            localVarHeaderParams.put("TIMESTAMP", localVarApiClient.parameterToString(TIMESTAMP));
        }


        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }
    /**
     * Build call for otpRequestMobileLogin
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param otpRequestMobileLoginRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-login\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-login&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;aadhaar-verify&lt;/code&gt;, &lt;code&gt;email-verify&lt;/code&gt;,&lt;code&gt;abha-address-login&lt;/code&gt;,&lt;code&gt;aadhaar-face-verify&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginHint&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Indicates the type of identifier being used for the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abha-number&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt;&lt;code&gt;abha-number&lt;/code&gt;,&lt;code&gt;mobile-number&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;,  &lt;code&gt;abha-address&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginId&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The encrypted identifier (Aadhaar Number, ABHA Number, or Mobile Number) for which the OTP is being requested.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted abha number}}&lt;/code&gt;,&lt;code&gt;{{encrypted abha-address}}&lt;/code&gt;,&lt;code&gt;{{encrypted email}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;otpSystem&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the system used for OTP generation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;, &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;p&gt;&lt;strong&gt;Types of OTP Response:&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;OTP Response - Mobile:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to a mobile number for purposes such as logging into an account, completing a transaction, or verifying identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to a mobile number for purposes related to ABHA (Ayushman Bharat Health Account) address verification.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent for authentication or verification purposes related to AADHAAR, the unique identification number issued by the Indian government.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - Email:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to an email address for purposes such as logging into an account, completing a transaction, or verifying identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to an email address for purposes related to ABHA (Ayushman Bharat Health Account) address verification.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;6\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent for authentication or verification purposes related to ABHA (Ayushman Bharat Health Account).&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;7\&quot;&gt; &lt;li&gt;&lt;strong&gt;TXN Response - AADHAR-FACE-VERIFY:&lt;/strong&gt; This response will send transaction Id to verify the user using generate Transaction Id along with face Id to ABHA (Ayushman Bharat Health Account).&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) request process. &lt;p&gt;&lt;strong&gt;Types of OTP Request Errors:&lt;/strong&gt;&lt;/p&gt;  &lt;ol&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid mobile number:&lt;/strong&gt; This error occurs when the mobile number provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;2\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid LoginId:&lt;/strong&gt; This error occurs when the LoginId provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;3\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;4\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;5\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Abha Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;6\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA address OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;7\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Blank login hint:&lt;/strong&gt; This error occurs when the login hint field is left blank in the ABHA address OTP request.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;8\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;9\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid LoginId:&lt;/strong&gt; This error occurs when the LoginId provided for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;10\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;11\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;12\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;13\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Email Id:&lt;/strong&gt; This error occurs when the email ID provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;14\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;15\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;16\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;17\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Abha Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;18\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Blank LoginID:&lt;/strong&gt; This error occurs when the LoginID field is left blank in the ABHA address email OTP request.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;19\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;20\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;21\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;22\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid ABHA Number:&lt;/strong&gt; This error occurs when the ABHA number provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;23\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;24\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;25\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;   &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;26\&quot;&gt;  &lt;li&gt;&lt;strong&gt;TXN Response - AADHAAR-FACE-VERIFY - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR-FACE-VERIFY request is invalid.&lt;/li&gt;  &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the OTP (One-Time Password) request process. </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call otpRequestMobileLoginCall(String REQUEST_ID, String TIMESTAMP, OtpRequestMobileLoginRequest otpRequestMobileLoginRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = otpRequestMobileLoginRequest;

        // create path and map variables
        String localVarPath = "/abha/api/v3/phr/app/login/request/otp";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (REQUEST_ID != null) {
            localVarHeaderParams.put("REQUEST-ID", localVarApiClient.parameterToString(REQUEST_ID));
        }


        if (TIMESTAMP != null) {
            localVarHeaderParams.put("TIMESTAMP", localVarApiClient.parameterToString(TIMESTAMP));
        }


        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call otpRequestMobileLoginValidateBeforeCall(String REQUEST_ID, String TIMESTAMP, OtpRequestMobileLoginRequest otpRequestMobileLoginRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'REQUEST_ID' is set
        if (REQUEST_ID == null) {
            throw new ApiException("Missing the required parameter 'REQUEST_ID' when calling otpRequestMobileLogin(Async)");
        }

        // verify the required parameter 'TIMESTAMP' is set
        if (TIMESTAMP == null) {
            throw new ApiException("Missing the required parameter 'TIMESTAMP' when calling otpRequestMobileLogin(Async)");
        }

        return otpRequestMobileLoginCall(REQUEST_ID, TIMESTAMP, otpRequestMobileLoginRequest, _callback);

    }

    /**
     * OTP Request
     * API is designed to facilitate secure user authentication by sending a One-Time Password (OTP) to the user’s registered contact method. This ensures that only authorized users can access their accounts or perform sensitive actions. The API supports multiple scenario for sending OTP. In below there is a example of multiple scenario.&lt;br&gt; &lt;br&gt;**Example of OTP Request**&lt;br&gt; &lt;br&gt;Example1:&lt;br&gt; **ABHA ADDRESS Email OTP:** Sends an OTP to the user’s registered email address associated with their ABHA address.&lt;br&gt; &lt;br&gt;Example2:&lt;br&gt; **ABHA ADDRESS Mobile OTP:** Sends an OTP to the mobile number linked to the user’s ABHA number.&lt;br&gt; &lt;br&gt;Example3:&lt;br&gt; **AADHAAR OTP:** Sends an OTP to the mobile number linked to the user’s Aadhaar number.&lt;br&gt; &lt;br&gt;Example4:&lt;br&gt; **ABHA OTP:** Sends an OTP to the mobile number linked to the user’s ABHA number.&lt;br&gt; &lt;br&gt;Example5:&lt;br&gt; **Email OTP:** Sends an OTP to the user’s registered email address.&lt;br&gt; &lt;br&gt;Example6:&lt;br&gt; **Mobile OTP:** Sends an OTP to the user’s registered mobile number.&lt;br&gt;&lt;br&gt;Note:&lt;br&gt;**1. OTP will be valid for 10 minute only** &lt;br&gt; &lt;br&gt;Example7:&lt;br&gt; **AADHAR FACE VERIFY:** FACE authentication request successfully sent.&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt; &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes &lt;th&gt;Description &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;loginHint &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;AbhaAddress Email,Abhaaddress Mobile,Aadhaar OTP,Abha OTP,Email And Mobile&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;encrypted mobile-number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;AbhaAddress Email/Abhaaddress Mobile/Aadhaar OTP/Abha OTP/Email/Mobile&lt;/aadhar-face-verify/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; --&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param otpRequestMobileLoginRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-login\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-login&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;aadhaar-verify&lt;/code&gt;, &lt;code&gt;email-verify&lt;/code&gt;,&lt;code&gt;abha-address-login&lt;/code&gt;,&lt;code&gt;aadhaar-face-verify&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginHint&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Indicates the type of identifier being used for the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abha-number&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt;&lt;code&gt;abha-number&lt;/code&gt;,&lt;code&gt;mobile-number&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;,  &lt;code&gt;abha-address&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginId&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The encrypted identifier (Aadhaar Number, ABHA Number, or Mobile Number) for which the OTP is being requested.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted abha number}}&lt;/code&gt;,&lt;code&gt;{{encrypted abha-address}}&lt;/code&gt;,&lt;code&gt;{{encrypted email}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;otpSystem&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the system used for OTP generation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;, &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @return OtpRequestMobileLogin200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;p&gt;&lt;strong&gt;Types of OTP Response:&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;OTP Response - Mobile:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to a mobile number for purposes such as logging into an account, completing a transaction, or verifying identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to a mobile number for purposes related to ABHA (Ayushman Bharat Health Account) address verification.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent for authentication or verification purposes related to AADHAAR, the unique identification number issued by the Indian government.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - Email:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to an email address for purposes such as logging into an account, completing a transaction, or verifying identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to an email address for purposes related to ABHA (Ayushman Bharat Health Account) address verification.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;6\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent for authentication or verification purposes related to ABHA (Ayushman Bharat Health Account).&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;7\&quot;&gt; &lt;li&gt;&lt;strong&gt;TXN Response - AADHAR-FACE-VERIFY:&lt;/strong&gt; This response will send transaction Id to verify the user using generate Transaction Id along with face Id to ABHA (Ayushman Bharat Health Account).&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) request process. &lt;p&gt;&lt;strong&gt;Types of OTP Request Errors:&lt;/strong&gt;&lt;/p&gt;  &lt;ol&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid mobile number:&lt;/strong&gt; This error occurs when the mobile number provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;2\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid LoginId:&lt;/strong&gt; This error occurs when the LoginId provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;3\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;4\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;5\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Abha Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;6\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA address OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;7\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Blank login hint:&lt;/strong&gt; This error occurs when the login hint field is left blank in the ABHA address OTP request.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;8\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;9\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid LoginId:&lt;/strong&gt; This error occurs when the LoginId provided for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;10\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;11\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;12\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;13\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Email Id:&lt;/strong&gt; This error occurs when the email ID provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;14\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;15\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;16\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;17\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Abha Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;18\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Blank LoginID:&lt;/strong&gt; This error occurs when the LoginID field is left blank in the ABHA address email OTP request.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;19\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;20\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;21\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;22\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid ABHA Number:&lt;/strong&gt; This error occurs when the ABHA number provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;23\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;24\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;25\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;   &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;26\&quot;&gt;  &lt;li&gt;&lt;strong&gt;TXN Response - AADHAAR-FACE-VERIFY - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR-FACE-VERIFY request is invalid.&lt;/li&gt;  &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the OTP (One-Time Password) request process. </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public OtpRequestMobileLogin200Response otpRequestMobileLogin(String REQUEST_ID, String TIMESTAMP, OtpRequestMobileLoginRequest otpRequestMobileLoginRequest) throws ApiException {
        ApiResponse<OtpRequestMobileLogin200Response> localVarResp = otpRequestMobileLoginWithHttpInfo(REQUEST_ID, TIMESTAMP, otpRequestMobileLoginRequest);
        return localVarResp.getData();
    }

    /**
     * OTP Request
     * API is designed to facilitate secure user authentication by sending a One-Time Password (OTP) to the user’s registered contact method. This ensures that only authorized users can access their accounts or perform sensitive actions. The API supports multiple scenario for sending OTP. In below there is a example of multiple scenario.&lt;br&gt; &lt;br&gt;**Example of OTP Request**&lt;br&gt; &lt;br&gt;Example1:&lt;br&gt; **ABHA ADDRESS Email OTP:** Sends an OTP to the user’s registered email address associated with their ABHA address.&lt;br&gt; &lt;br&gt;Example2:&lt;br&gt; **ABHA ADDRESS Mobile OTP:** Sends an OTP to the mobile number linked to the user’s ABHA number.&lt;br&gt; &lt;br&gt;Example3:&lt;br&gt; **AADHAAR OTP:** Sends an OTP to the mobile number linked to the user’s Aadhaar number.&lt;br&gt; &lt;br&gt;Example4:&lt;br&gt; **ABHA OTP:** Sends an OTP to the mobile number linked to the user’s ABHA number.&lt;br&gt; &lt;br&gt;Example5:&lt;br&gt; **Email OTP:** Sends an OTP to the user’s registered email address.&lt;br&gt; &lt;br&gt;Example6:&lt;br&gt; **Mobile OTP:** Sends an OTP to the user’s registered mobile number.&lt;br&gt;&lt;br&gt;Note:&lt;br&gt;**1. OTP will be valid for 10 minute only** &lt;br&gt; &lt;br&gt;Example7:&lt;br&gt; **AADHAR FACE VERIFY:** FACE authentication request successfully sent.&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt; &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes &lt;th&gt;Description &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;loginHint &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;AbhaAddress Email,Abhaaddress Mobile,Aadhaar OTP,Abha OTP,Email And Mobile&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;encrypted mobile-number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;AbhaAddress Email/Abhaaddress Mobile/Aadhaar OTP/Abha OTP/Email/Mobile&lt;/aadhar-face-verify/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; --&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param otpRequestMobileLoginRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-login\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-login&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;aadhaar-verify&lt;/code&gt;, &lt;code&gt;email-verify&lt;/code&gt;,&lt;code&gt;abha-address-login&lt;/code&gt;,&lt;code&gt;aadhaar-face-verify&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginHint&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Indicates the type of identifier being used for the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abha-number&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt;&lt;code&gt;abha-number&lt;/code&gt;,&lt;code&gt;mobile-number&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;,  &lt;code&gt;abha-address&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginId&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The encrypted identifier (Aadhaar Number, ABHA Number, or Mobile Number) for which the OTP is being requested.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted abha number}}&lt;/code&gt;,&lt;code&gt;{{encrypted abha-address}}&lt;/code&gt;,&lt;code&gt;{{encrypted email}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;otpSystem&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the system used for OTP generation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;, &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @return ApiResponse&lt;OtpRequestMobileLogin200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;p&gt;&lt;strong&gt;Types of OTP Response:&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;OTP Response - Mobile:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to a mobile number for purposes such as logging into an account, completing a transaction, or verifying identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to a mobile number for purposes related to ABHA (Ayushman Bharat Health Account) address verification.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent for authentication or verification purposes related to AADHAAR, the unique identification number issued by the Indian government.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - Email:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to an email address for purposes such as logging into an account, completing a transaction, or verifying identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to an email address for purposes related to ABHA (Ayushman Bharat Health Account) address verification.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;6\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent for authentication or verification purposes related to ABHA (Ayushman Bharat Health Account).&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;7\&quot;&gt; &lt;li&gt;&lt;strong&gt;TXN Response - AADHAR-FACE-VERIFY:&lt;/strong&gt; This response will send transaction Id to verify the user using generate Transaction Id along with face Id to ABHA (Ayushman Bharat Health Account).&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) request process. &lt;p&gt;&lt;strong&gt;Types of OTP Request Errors:&lt;/strong&gt;&lt;/p&gt;  &lt;ol&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid mobile number:&lt;/strong&gt; This error occurs when the mobile number provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;2\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid LoginId:&lt;/strong&gt; This error occurs when the LoginId provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;3\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;4\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;5\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Abha Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;6\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA address OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;7\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Blank login hint:&lt;/strong&gt; This error occurs when the login hint field is left blank in the ABHA address OTP request.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;8\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;9\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid LoginId:&lt;/strong&gt; This error occurs when the LoginId provided for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;10\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;11\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;12\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;13\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Email Id:&lt;/strong&gt; This error occurs when the email ID provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;14\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;15\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;16\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;17\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Abha Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;18\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Blank LoginID:&lt;/strong&gt; This error occurs when the LoginID field is left blank in the ABHA address email OTP request.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;19\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;20\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;21\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;22\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid ABHA Number:&lt;/strong&gt; This error occurs when the ABHA number provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;23\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;24\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;25\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;   &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;26\&quot;&gt;  &lt;li&gt;&lt;strong&gt;TXN Response - AADHAAR-FACE-VERIFY - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR-FACE-VERIFY request is invalid.&lt;/li&gt;  &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the OTP (One-Time Password) request process. </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<OtpRequestMobileLogin200Response> otpRequestMobileLoginWithHttpInfo(String REQUEST_ID, String TIMESTAMP, OtpRequestMobileLoginRequest otpRequestMobileLoginRequest) throws ApiException {
        okhttp3.Call localVarCall = otpRequestMobileLoginValidateBeforeCall(REQUEST_ID, TIMESTAMP, otpRequestMobileLoginRequest, null);
        Type localVarReturnType = new TypeToken<OtpRequestMobileLogin200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * OTP Request (asynchronously)
     * API is designed to facilitate secure user authentication by sending a One-Time Password (OTP) to the user’s registered contact method. This ensures that only authorized users can access their accounts or perform sensitive actions. The API supports multiple scenario for sending OTP. In below there is a example of multiple scenario.&lt;br&gt; &lt;br&gt;**Example of OTP Request**&lt;br&gt; &lt;br&gt;Example1:&lt;br&gt; **ABHA ADDRESS Email OTP:** Sends an OTP to the user’s registered email address associated with their ABHA address.&lt;br&gt; &lt;br&gt;Example2:&lt;br&gt; **ABHA ADDRESS Mobile OTP:** Sends an OTP to the mobile number linked to the user’s ABHA number.&lt;br&gt; &lt;br&gt;Example3:&lt;br&gt; **AADHAAR OTP:** Sends an OTP to the mobile number linked to the user’s Aadhaar number.&lt;br&gt; &lt;br&gt;Example4:&lt;br&gt; **ABHA OTP:** Sends an OTP to the mobile number linked to the user’s ABHA number.&lt;br&gt; &lt;br&gt;Example5:&lt;br&gt; **Email OTP:** Sends an OTP to the user’s registered email address.&lt;br&gt; &lt;br&gt;Example6:&lt;br&gt; **Mobile OTP:** Sends an OTP to the user’s registered mobile number.&lt;br&gt;&lt;br&gt;Note:&lt;br&gt;**1. OTP will be valid for 10 minute only** &lt;br&gt; &lt;br&gt;Example7:&lt;br&gt; **AADHAR FACE VERIFY:** FACE authentication request successfully sent.&lt;br&gt;&lt;br&gt; &lt;br&gt;&lt;br&gt; &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes &lt;th&gt;Description &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;loginHint &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;AbhaAddress Email,Abhaaddress Mobile,Aadhaar OTP,Abha OTP,Email And Mobile&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;loginId &lt;sup&gt;* required &lt;/sup&gt;&lt;/td&gt; &lt;td&gt;encrypted mobile-number&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;otpSystem &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;abdm/aadhaar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;scope &lt;sup&gt;* required&lt;/td&gt; &lt;td&gt;AbhaAddress Email/Abhaaddress Mobile/Aadhaar OTP/Abha OTP/Email/Mobile&lt;/aadhar-face-verify/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; --&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param otpRequestMobileLoginRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;scope&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the scope of the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;[\&quot;abha-login\&quot;, \&quot;mobile-verify\&quot;]&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abha-login&lt;/code&gt;, &lt;code&gt;mobile-verify&lt;/code&gt;, &lt;code&gt;aadhaar-verify&lt;/code&gt;, &lt;code&gt;email-verify&lt;/code&gt;,&lt;code&gt;abha-address-login&lt;/code&gt;,&lt;code&gt;aadhaar-face-verify&lt;/code&gt;etc.&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginHint&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Indicates the type of identifier being used for the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abha-number&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt;&lt;code&gt;abha-number&lt;/code&gt;,&lt;code&gt;mobile-number&lt;/code&gt;, &lt;code&gt;email&lt;/code&gt;,  &lt;code&gt;abha-address&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;loginId&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The encrypted identifier (Aadhaar Number, ABHA Number, or Mobile Number) for which the OTP is being requested.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{encrypted abha number}}&lt;/code&gt;,&lt;code&gt;{{encrypted abha-address}}&lt;/code&gt;,&lt;code&gt;{{encrypted email}}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;otpSystem&lt;/strong&gt; (required):&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; Specifies the system used for OTP generation.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Possible Values:&lt;/strong&gt; &lt;code&gt;abdm&lt;/code&gt;, &lt;code&gt;aadhaar&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful generation and delivery of an OTP (One-Time Password) for various services.&lt;br&gt;&lt;br&gt; &lt;p&gt;&lt;strong&gt;Types of OTP Response:&lt;/strong&gt;&lt;/p&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;OTP Response - Mobile:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to a mobile number for purposes such as logging into an account, completing a transaction, or verifying identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;2\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to a mobile number for purposes related to ABHA (Ayushman Bharat Health Account) address verification.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;3\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent for authentication or verification purposes related to AADHAAR, the unique identification number issued by the Indian government.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;4\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - Email:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to an email address for purposes such as logging into an account, completing a transaction, or verifying identity.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;5\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent to an email address for purposes related to ABHA (Ayushman Bharat Health Account) address verification.&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;6\&quot;&gt; &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP:&lt;/strong&gt; This response indicates that an OTP has been successfully generated and sent for authentication or verification purposes related to ABHA (Ayushman Bharat Health Account).&lt;/li&gt; &lt;/ol&gt; &lt;ol start&#x3D;\&quot;7\&quot;&gt; &lt;li&gt;&lt;strong&gt;TXN Response - AADHAR-FACE-VERIFY:&lt;/strong&gt; This response will send transaction Id to verify the user using generate Transaction Id along with face Id to ABHA (Ayushman Bharat Health Account).&lt;/li&gt; &lt;/ol&gt; </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the OTP (One-Time Password) request process. &lt;p&gt;&lt;strong&gt;Types of OTP Request Errors:&lt;/strong&gt;&lt;/p&gt;  &lt;ol&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid mobile number:&lt;/strong&gt; This error occurs when the mobile number provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;2\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid LoginId:&lt;/strong&gt; This error occurs when the LoginId provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;3\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;4\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Mobile - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;5\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Abha Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;6\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA address OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;7\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Blank login hint:&lt;/strong&gt; This error occurs when the login hint field is left blank in the ABHA address OTP request.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;8\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Mobile - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;9\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid LoginId:&lt;/strong&gt; This error occurs when the LoginId provided for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;10\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;11\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;12\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - AADHAAR OTP - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;13\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Email Id:&lt;/strong&gt; This error occurs when the email ID provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;14\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;15\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;16\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;17\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Abha Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;18\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Blank LoginID:&lt;/strong&gt; This error occurs when the LoginID field is left blank in the ABHA address email OTP request.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;19\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;20\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;21\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA Address Email - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the ABHA address email OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;22\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid ABHA Number:&lt;/strong&gt; This error occurs when the ABHA number provided for the OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;23\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Otp System:&lt;/strong&gt; This error occurs when the OTP system used for the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;24\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Login Hint:&lt;/strong&gt; This error occurs when the login hint provided for the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;25\&quot;&gt;  &lt;li&gt;&lt;strong&gt;OTP Response - ABHA OTP - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the ABHA OTP request is invalid.&lt;/li&gt;  &lt;/ol&gt;   &lt;/ol&gt;  &lt;ol start&#x3D;\&quot;26\&quot;&gt;  &lt;li&gt;&lt;strong&gt;TXN Response - AADHAAR-FACE-VERIFY - Invalid Scope:&lt;/strong&gt; This error occurs when the scope of the AADHAAR-FACE-VERIFY request is invalid.&lt;/li&gt;  &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates an unauthorized request. In this context, it refers to the lack of proper authentication during the OTP (One-Time Password) request process. </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call otpRequestMobileLoginAsync(String REQUEST_ID, String TIMESTAMP, OtpRequestMobileLoginRequest otpRequestMobileLoginRequest, final ApiCallback<OtpRequestMobileLogin200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = otpRequestMobileLoginValidateBeforeCall(REQUEST_ID, TIMESTAMP, otpRequestMobileLoginRequest, _callback);
        Type localVarReturnType = new TypeToken<OtpRequestMobileLogin200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public CompletionStage<OtpRequestMobileLogin200Response> otpRequestMobileLoginAsyncCall(String token, String REQUEST_ID, String TIMESTAMP, OtpRequestMobileLoginRequest otpRequestMobileLoginRequest) throws ApiException {
        FutureApiCallBack<OtpRequestMobileLogin200Response> callback = FutureApiCallBack.newCallback();
        okhttp3.Call localVarCall = otpRequestMobileLoginValidateBeforeCall(token, REQUEST_ID, TIMESTAMP, otpRequestMobileLoginRequest, callback);
        Type localVarReturnType = new TypeToken<OtpRequestMobileLogin200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, callback);
        return callback.getFuture();
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call otpRequestMobileLoginValidateBeforeCall(String token, String REQUEST_ID, String TIMESTAMP, OtpRequestMobileLoginRequest otpRequestMobileLoginRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'REQUEST_ID' is set
        if (REQUEST_ID == null) {
            throw new ApiException("Missing the required parameter 'REQUEST_ID' when calling otpRequestMobileLogin(Async)");
        }

        // verify the required parameter 'TIMESTAMP' is set
        if (TIMESTAMP == null) {
            throw new ApiException("Missing the required parameter 'TIMESTAMP' when calling otpRequestMobileLogin(Async)");
        }

        return otpRequestMobileLoginCall(token, REQUEST_ID, TIMESTAMP, otpRequestMobileLoginRequest, _callback);

    }

    public okhttp3.Call otpRequestMobileLoginCall(String token, String REQUEST_ID, String TIMESTAMP, OtpRequestMobileLoginRequest otpRequestMobileLoginRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = otpRequestMobileLoginRequest;

        // create path and map variables
        String localVarPath = "/abha/api/v3/phr/app/login/request/otp";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (token != null) {
            localVarHeaderParams.put("Authorization", "Bearer " + localVarApiClient.parameterToString(token));
        }

        if (REQUEST_ID != null) {
            localVarHeaderParams.put("REQUEST-ID", localVarApiClient.parameterToString(REQUEST_ID));
        }


        if (TIMESTAMP != null) {
            localVarHeaderParams.put("TIMESTAMP", localVarApiClient.parameterToString(TIMESTAMP));
        }


        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }
    /**
     * Build call for searchAuthMethodsAbhaaddress
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param searchAuthMethodsAbhaaddressRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;abhaAddress (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The ABHA address of the user.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;john.doe@sbx&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful retrieval of authentication methods for various services. &lt;p&gt;&lt;strong&gt;Types of Authentication Method Searches:&lt;/strong&gt;&lt;/p&gt; &lt;ol start&#x3D;\&quot;1\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address:&lt;/strong&gt; This response indicates that the authentication methods for the ABHA (Ayushman Bharat Health Account) address have been successfully retrieved.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - ABHA No. Not Linked:&lt;/strong&gt; This response indicates that the authentication methods for the ABHA address could not be retrieved because the ABHA number is not linked.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the search for authentication methods. &lt;p&gt;&lt;strong&gt;Types of Authentication Method Search Errors:&lt;/strong&gt;&lt;/p&gt; &lt;ol start&#x3D;\&quot;1\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - User Not Exist:&lt;/strong&gt; This error occurs when the user does not exist in the system for the provided ABHA address.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the search is invalid.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates unauthorized access. This means the user is not authenticated to perform the requested operation. </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call searchAuthMethodsAbhaaddressCall(String REQUEST_ID, String TIMESTAMP, SearchAuthMethodsAbhaaddressRequest searchAuthMethodsAbhaaddressRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = searchAuthMethodsAbhaaddressRequest;

        // create path and map variables
        String localVarPath = "/abha/api/v3/phr/app/login/search";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (REQUEST_ID != null) {
            localVarHeaderParams.put("REQUEST-ID", localVarApiClient.parameterToString(REQUEST_ID));
        }


        if (TIMESTAMP != null) {
            localVarHeaderParams.put("TIMESTAMP", localVarApiClient.parameterToString(TIMESTAMP));
        }


        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchAuthMethodsAbhaaddressValidateBeforeCall(String REQUEST_ID, String TIMESTAMP, SearchAuthMethodsAbhaaddressRequest searchAuthMethodsAbhaaddressRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'REQUEST_ID' is set
        if (REQUEST_ID == null) {
            throw new ApiException("Missing the required parameter 'REQUEST_ID' when calling searchAuthMethodsAbhaaddress(Async)");
        }

        // verify the required parameter 'TIMESTAMP' is set
        if (TIMESTAMP == null) {
            throw new ApiException("Missing the required parameter 'TIMESTAMP' when calling searchAuthMethodsAbhaaddress(Async)");
        }

        return searchAuthMethodsAbhaaddressCall(REQUEST_ID, TIMESTAMP, searchAuthMethodsAbhaaddressRequest, _callback);

    }

    /**
     * Search Auth Methods
     * API is used to search for authentication methods associated with a given ABHA address. This helps in identifying the available methods for user authentication, ensuring that the user can securely access their account or perform sensitive actions. &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/&gt; &lt;th&gt;Description&lt;/&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;AbhaAddress &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;AbhaAddress&lt;/td&gt; &lt;/tr&gt; &lt;/tbody &lt;/table&gt;--&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param searchAuthMethodsAbhaaddressRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;abhaAddress (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The ABHA address of the user.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;john.doe@sbx&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @return SearchAuthMethodsAbhaaddress200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful retrieval of authentication methods for various services. &lt;p&gt;&lt;strong&gt;Types of Authentication Method Searches:&lt;/strong&gt;&lt;/p&gt; &lt;ol start&#x3D;\&quot;1\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address:&lt;/strong&gt; This response indicates that the authentication methods for the ABHA (Ayushman Bharat Health Account) address have been successfully retrieved.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - ABHA No. Not Linked:&lt;/strong&gt; This response indicates that the authentication methods for the ABHA address could not be retrieved because the ABHA number is not linked.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the search for authentication methods. &lt;p&gt;&lt;strong&gt;Types of Authentication Method Search Errors:&lt;/strong&gt;&lt;/p&gt; &lt;ol start&#x3D;\&quot;1\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - User Not Exist:&lt;/strong&gt; This error occurs when the user does not exist in the system for the provided ABHA address.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the search is invalid.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates unauthorized access. This means the user is not authenticated to perform the requested operation. </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public SearchAuthMethodsAbhaaddress200Response searchAuthMethodsAbhaaddress(String REQUEST_ID, String TIMESTAMP, SearchAuthMethodsAbhaaddressRequest searchAuthMethodsAbhaaddressRequest) throws ApiException {
        ApiResponse<SearchAuthMethodsAbhaaddress200Response> localVarResp = searchAuthMethodsAbhaaddressWithHttpInfo(REQUEST_ID, TIMESTAMP, searchAuthMethodsAbhaaddressRequest);
        return localVarResp.getData();
    }

    /**
     * Search Auth Methods
     * API is used to search for authentication methods associated with a given ABHA address. This helps in identifying the available methods for user authentication, ensuring that the user can securely access their account or perform sensitive actions. &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/&gt; &lt;th&gt;Description&lt;/&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;AbhaAddress &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;AbhaAddress&lt;/td&gt; &lt;/tr&gt; &lt;/tbody &lt;/table&gt;--&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param searchAuthMethodsAbhaaddressRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;abhaAddress (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The ABHA address of the user.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;john.doe@sbx&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @return ApiResponse&lt;SearchAuthMethodsAbhaaddress200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful retrieval of authentication methods for various services. &lt;p&gt;&lt;strong&gt;Types of Authentication Method Searches:&lt;/strong&gt;&lt;/p&gt; &lt;ol start&#x3D;\&quot;1\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address:&lt;/strong&gt; This response indicates that the authentication methods for the ABHA (Ayushman Bharat Health Account) address have been successfully retrieved.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - ABHA No. Not Linked:&lt;/strong&gt; This response indicates that the authentication methods for the ABHA address could not be retrieved because the ABHA number is not linked.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the search for authentication methods. &lt;p&gt;&lt;strong&gt;Types of Authentication Method Search Errors:&lt;/strong&gt;&lt;/p&gt; &lt;ol start&#x3D;\&quot;1\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - User Not Exist:&lt;/strong&gt; This error occurs when the user does not exist in the system for the provided ABHA address.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the search is invalid.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates unauthorized access. This means the user is not authenticated to perform the requested operation. </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<SearchAuthMethodsAbhaaddress200Response> searchAuthMethodsAbhaaddressWithHttpInfo(String REQUEST_ID, String TIMESTAMP, SearchAuthMethodsAbhaaddressRequest searchAuthMethodsAbhaaddressRequest) throws ApiException {
        okhttp3.Call localVarCall = searchAuthMethodsAbhaaddressValidateBeforeCall(REQUEST_ID, TIMESTAMP, searchAuthMethodsAbhaaddressRequest, null);
        Type localVarReturnType = new TypeToken<SearchAuthMethodsAbhaaddress200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search Auth Methods (asynchronously)
     * API is used to search for authentication methods associated with a given ABHA address. This helps in identifying the available methods for user authentication, ensuring that the user can securely access their account or perform sensitive actions. &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/&gt; &lt;th&gt;Description&lt;/&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;AbhaAddress &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;AbhaAddress&lt;/td&gt; &lt;/tr&gt; &lt;/tbody &lt;/table&gt;--&gt;
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param searchAuthMethodsAbhaaddressRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;abhaAddress (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The ABHA address of the user.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;john.doe@sbx&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request. In this context, it refers to the successful retrieval of authentication methods for various services. &lt;p&gt;&lt;strong&gt;Types of Authentication Method Searches:&lt;/strong&gt;&lt;/p&gt; &lt;ol start&#x3D;\&quot;1\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address:&lt;/strong&gt; This response indicates that the authentication methods for the ABHA (Ayushman Bharat Health Account) address have been successfully retrieved.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - ABHA No. Not Linked:&lt;/strong&gt; This response indicates that the authentication methods for the ABHA address could not be retrieved because the ABHA number is not linked.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the search for authentication methods. &lt;p&gt;&lt;strong&gt;Types of Authentication Method Search Errors:&lt;/strong&gt;&lt;/p&gt; &lt;ol start&#x3D;\&quot;1\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - User Not Exist:&lt;/strong&gt; This error occurs when the user does not exist in the system for the provided ABHA address.&lt;/p&gt;   &lt;/li&gt;   &lt;/ol&gt;   &lt;ol start&#x3D;\&quot;2\&quot;&gt;   &lt;li&gt;     &lt;p&gt;&lt;strong&gt;Search Auth Methods - ABHA Address - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for the search is invalid.&lt;/p&gt;   &lt;/li&gt; &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 401 </td><td> The 401 response code indicates unauthorized access. This means the user is not authenticated to perform the requested operation. </td><td>  * Transfer-Encoding -  <br>  * accept-encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * date -  <br>  * postman-token -  <br>  * request-id -  <br>  * timestamp -  <br>  * www-authenticate -  <br>  * x-b3-sampled -  <br>  * x-b3-spanid -  <br>  * x-b3-traceid -  <br>  * x-envoy-attempt-count -  <br>  * x-envoy-upstream-service-time -  <br>  * x-forwarded-proto -  <br>  * x-request-id -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call searchAuthMethodsAbhaaddressAsync(String REQUEST_ID, String TIMESTAMP, SearchAuthMethodsAbhaaddressRequest searchAuthMethodsAbhaaddressRequest, final ApiCallback<SearchAuthMethodsAbhaaddress200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchAuthMethodsAbhaaddressValidateBeforeCall(REQUEST_ID, TIMESTAMP, searchAuthMethodsAbhaaddressRequest, _callback);
        Type localVarReturnType = new TypeToken<SearchAuthMethodsAbhaaddress200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public CompletionStage<SearchAuthMethodsAbhaaddress200Response> searchAuthMethodsAbhaaddressAsyncCall(String token, String REQUEST_ID, String TIMESTAMP, SearchAuthMethodsAbhaaddressRequest searchAuthMethodsAbhaaddressRequest) throws ApiException {
        FutureApiCallBack<SearchAuthMethodsAbhaaddress200Response> callback = FutureApiCallBack.newCallback();
        okhttp3.Call localVarCall = searchAuthMethodsAbhaaddressValidateBeforeCall(token, REQUEST_ID, TIMESTAMP, searchAuthMethodsAbhaaddressRequest, callback);
        Type localVarReturnType = new TypeToken<SearchAuthMethodsAbhaaddress200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, callback);
        return callback.getFuture();
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchAuthMethodsAbhaaddressValidateBeforeCall(String token, String REQUEST_ID, String TIMESTAMP, SearchAuthMethodsAbhaaddressRequest searchAuthMethodsAbhaaddressRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'REQUEST_ID' is set
        if (REQUEST_ID == null) {
            throw new ApiException("Missing the required parameter 'REQUEST_ID' when calling searchAuthMethodsAbhaaddress(Async)");
        }

        // verify the required parameter 'TIMESTAMP' is set
        if (TIMESTAMP == null) {
            throw new ApiException("Missing the required parameter 'TIMESTAMP' when calling searchAuthMethodsAbhaaddress(Async)");
        }

        return searchAuthMethodsAbhaaddressCall(token, REQUEST_ID, TIMESTAMP, searchAuthMethodsAbhaaddressRequest, _callback);

    }

    public okhttp3.Call searchAuthMethodsAbhaaddressCall(String token, String REQUEST_ID, String TIMESTAMP, SearchAuthMethodsAbhaaddressRequest searchAuthMethodsAbhaaddressRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = searchAuthMethodsAbhaaddressRequest;

        // create path and map variables
        String localVarPath = "/abha/api/v3/phr/app/login/search/auth-methods/abha-address";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (token != null) {
            localVarHeaderParams.put("Authorization", "Bearer " + localVarApiClient.parameterToString(token));
        }

        if (REQUEST_ID != null) {
            localVarHeaderParams.put("REQUEST-ID", localVarApiClient.parameterToString(REQUEST_ID));
        }


        if (TIMESTAMP != null) {
            localVarHeaderParams.put("TIMESTAMP", localVarApiClient.parameterToString(TIMESTAMP));
        }


        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }
    /**
     * Build call for verifyUser
     * @param tToken  (required)
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param verifyUserRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;abhaAddress (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The ABHA address of the user.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;john.doe@sbx&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;txnId (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The transaction ID associated with the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId }}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request, meaning the user has been verified for the requested service. This confirms that the provided credentials and authentication methods are valid and accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the user verification process. &lt;p&gt;&lt;strong&gt;Types of User Verification Errors:&lt;/strong&gt;&lt;/p&gt;   &lt;ol start&#x3D;\&quot;1\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;2\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;3\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;4\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;5\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;6\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;7\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;8\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;9\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;10\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;11\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;12\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 403 </td><td> The 403 response code indicates forbidden access. In this context, it refers to various errors encountered during the user verification process due to missing or invalid tokens. </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call verifyUserCall(String token, String tToken, String REQUEST_ID, String TIMESTAMP, VerifyUserRequest verifyUserRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = verifyUserRequest;

        // create path and map variables
        String localVarPath = "/abha/api/v3/phr/app/login/verify/user";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "text/plain"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (token != null) {
            localVarHeaderParams.put("Authorization", "Bearer " + localVarApiClient.parameterToString(token));
        }

        if (tToken != null) {
            localVarHeaderParams.put("T-token", localVarApiClient.parameterToString(tToken));
        }

        if (REQUEST_ID != null) {
            localVarHeaderParams.put("REQUEST-ID", localVarApiClient.parameterToString(REQUEST_ID));
        }

        if (TIMESTAMP != null) {
            localVarHeaderParams.put("TIMESTAMP", localVarApiClient.parameterToString(TIMESTAMP));
        }

        String[] localVarAuthNames = new String[] { "bearerAuth" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call verifyUserValidateBeforeCall(String token, String tToken, String REQUEST_ID, String TIMESTAMP, VerifyUserRequest verifyUserRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'tToken' is set
        if (tToken == null) {
            throw new ApiException("Missing the required parameter 'tToken' when calling verifyUser(Async)");
        }

        // verify the required parameter 'REQUEST_ID' is set
        if (REQUEST_ID == null) {
            throw new ApiException("Missing the required parameter 'REQUEST_ID' when calling verifyUser(Async)");
        }

        // verify the required parameter 'TIMESTAMP' is set
        if (TIMESTAMP == null) {
            throw new ApiException("Missing the required parameter 'TIMESTAMP' when calling verifyUser(Async)");
        }

        return verifyUserCall(token, tToken, REQUEST_ID, TIMESTAMP, verifyUserRequest, _callback);

    }

    /**
     * Verify User
     * API is used to validate the OTP request based on the scopes requested by the user. This ensures that the user is authenticated and can securely access their account or perform sensitive actions. &lt;br&gt;&lt;br&gt; &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/&gt; &lt;th&gt;Description&lt;/&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;AbhaAddress &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;AbhaAddress&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;txnId&lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;Transaction Id&lt;/td&gt; &lt;/tr&gt; &lt;/tbody &lt;/table&gt;--&gt;
     * @param tToken  (required)
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param verifyUserRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;abhaAddress (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The ABHA address of the user.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;john.doe@sbx&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;txnId (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The transaction ID associated with the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId }}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @return VerifyUser200Response
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request, meaning the user has been verified for the requested service. This confirms that the provided credentials and authentication methods are valid and accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the user verification process. &lt;p&gt;&lt;strong&gt;Types of User Verification Errors:&lt;/strong&gt;&lt;/p&gt;   &lt;ol start&#x3D;\&quot;1\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;2\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;3\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;4\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;5\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;6\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;7\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;8\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;9\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;10\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;11\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;12\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 403 </td><td> The 403 response code indicates forbidden access. In this context, it refers to various errors encountered during the user verification process due to missing or invalid tokens. </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
     </table>
     */
    public VerifyUser200Response verifyUser(String token, String tToken, String REQUEST_ID, String TIMESTAMP, VerifyUserRequest verifyUserRequest) throws ApiException {
        ApiResponse<VerifyUser200Response> localVarResp = verifyUserWithHttpInfo(token, tToken, REQUEST_ID, TIMESTAMP, verifyUserRequest);
        return localVarResp.getData();
    }

    /**
     * Verify User
     * API is used to validate the OTP request based on the scopes requested by the user. This ensures that the user is authenticated and can securely access their account or perform sensitive actions. &lt;br&gt;&lt;br&gt; &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/&gt; &lt;th&gt;Description&lt;/&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;AbhaAddress &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;AbhaAddress&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;txnId&lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;Transaction Id&lt;/td&gt; &lt;/tr&gt; &lt;/tbody &lt;/table&gt;--&gt;
     * @param tToken  (required)
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param verifyUserRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;abhaAddress (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The ABHA address of the user.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;john.doe@sbx&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;txnId (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The transaction ID associated with the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId }}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @return ApiResponse&lt;VerifyUser200Response&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request, meaning the user has been verified for the requested service. This confirms that the provided credentials and authentication methods are valid and accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the user verification process. &lt;p&gt;&lt;strong&gt;Types of User Verification Errors:&lt;/strong&gt;&lt;/p&gt;   &lt;ol start&#x3D;\&quot;1\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;2\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;3\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;4\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;5\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;6\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;7\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;8\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;9\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;10\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;11\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;12\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 403 </td><td> The 403 response code indicates forbidden access. In this context, it refers to various errors encountered during the user verification process due to missing or invalid tokens. </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
     </table>
     */
    public ApiResponse<VerifyUser200Response> verifyUserWithHttpInfo(String token, String tToken, String REQUEST_ID, String TIMESTAMP, VerifyUserRequest verifyUserRequest) throws ApiException {
        okhttp3.Call localVarCall = verifyUserValidateBeforeCall(token, tToken, REQUEST_ID, TIMESTAMP, verifyUserRequest, null);
        Type localVarReturnType = new TypeToken<VerifyUser200Response>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Verify User (asynchronously)
     * API is used to validate the OTP request based on the scopes requested by the user. This ensures that the user is authenticated and can securely access their account or perform sensitive actions. &lt;br&gt;&lt;br&gt; &lt;!--&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Attributes&lt;/&gt; &lt;th&gt;Description&lt;/&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;AbhaAddress &lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;AbhaAddress&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;txnId&lt;sup&gt; * required&lt;/td&gt; &lt;td&gt;Transaction Id&lt;/td&gt; &lt;/tr&gt; &lt;/tbody &lt;/table&gt;--&gt;
     * @param tToken  (required)
     * @param REQUEST_ID  (required)
     * @param TIMESTAMP  (required)
     * @param verifyUserRequest &lt;b&gt;Below is the Request Body description:&lt;/b&gt;&lt;br&gt;&lt;br&gt; &lt;b&gt;Note:&lt;/b&gt; Mandatory fields can&#39;t be null. &lt;ol&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;abhaAddress (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The ABHA address of the user.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;john.doe@sbx&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;txnId (required):&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;Description:&lt;/strong&gt; The transaction ID associated with the OTP request.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Example:&lt;/strong&gt; &lt;code&gt;{{transactionId }}&lt;/code&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ol&gt; (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The 200 response code indicates a successful request, meaning the user has been verified for the requested service. This confirms that the provided credentials and authentication methods are valid and accepted. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The 400 response code indicates a bad request. In this context, it refers to various errors encountered during the user verification process. &lt;p&gt;&lt;strong&gt;Types of User Verification Errors:&lt;/strong&gt;&lt;/p&gt;   &lt;ol start&#x3D;\&quot;1\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;2\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;3\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;4\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;5\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;6\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;7\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;8\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;9\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;10\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid Transaction Id:&lt;/strong&gt; This error occurs when the transaction ID provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;11\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Invalid ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address provided for user verification is invalid.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt;     &lt;ol start&#x3D;\&quot;12\&quot;&gt;       &lt;li&gt;         &lt;p&gt;&lt;strong&gt;Verify - User - Blank ABHA Address:&lt;/strong&gt; This error occurs when the ABHA address field is left blank during the user verification process.&lt;/p&gt;       &lt;/li&gt;     &lt;/ol&gt; </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * vary -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
        <tr><td> 403 </td><td> The 403 response code indicates forbidden access. In this context, it refers to various errors encountered during the user verification process due to missing or invalid tokens. </td><td>  * Transfer-Encoding -  <br>  * access-control-allow-headers -  <br>  * access-control-allow-methods -  <br>  * activityid -  <br>  * cache-control -  <br>  * content-security-policy -  <br>  * date -  <br>  * expires -  <br>  * permissions-policy -  <br>  * pragma -  <br>  * referrer-policy -  <br>  * strict-transport-security -  <br>  * x-content-type-options -  <br>  * x-envoy-upstream-service-time -  <br>  * x-frame-options -  <br>  * x-xss-protection -  <br>  </td></tr>
     </table>
     */
    public okhttp3.Call verifyUserAsync(String token, String tToken, String REQUEST_ID, String TIMESTAMP, VerifyUserRequest verifyUserRequest, final ApiCallback<VerifyUser200Response> _callback) throws ApiException {

        okhttp3.Call localVarCall = verifyUserValidateBeforeCall(token, tToken, REQUEST_ID, TIMESTAMP, verifyUserRequest, _callback);
        Type localVarReturnType = new TypeToken<VerifyUser200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public CompletionStage<VerifyUser200Response> verifyUserAsyncCall(String token, String tToken, String REQUEST_ID, String TIMESTAMP, VerifyUserRequest verifyUserRequest) throws ApiException {
        FutureApiCallBack<VerifyUser200Response> callback = FutureApiCallBack.newCallback();
        okhttp3.Call localVarCall = verifyUserValidateBeforeCall(token, tToken, REQUEST_ID, TIMESTAMP, verifyUserRequest, callback);
        Type localVarReturnType = new TypeToken<VerifyUser200Response>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, callback);
        return callback.getFuture();
    }
}
