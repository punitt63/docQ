/*
 * Ayushman Bharat Digital Mission - Consent Management
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model;

import com.google.gson.*;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.util.*;

/**
 * AbdmConsentManagement12RequestExcludedSourcesInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-12T19:03:49.762814+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class AbdmConsentManagement12RequestExcludedSourcesInner {
  /**
   * Gets or Sets hiTypes
   */
  @JsonAdapter(HiTypesEnum.Adapter.class)
  public enum HiTypesEnum {
    PRESCRIPTION("Prescription"),
    
    DIAGNOSTIC_REPORT("DiagnosticReport"),
    
    OP_CONSULTATION("OPConsultation"),
    
    DISCHARGE_SUMMARY("DischargeSummary"),
    
    IMMUNIZATION_RECORD("ImmunizationRecord"),
    
    HEALTH_DOCUMENT_RECORD("HealthDocumentRecord"),
    
    WELLNESS_RECORD("WellnessRecord"),
    
    INVOICE("Invoice");

    private String value;

    HiTypesEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static HiTypesEnum fromValue(String value) {
      for (HiTypesEnum b : HiTypesEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<HiTypesEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final HiTypesEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public HiTypesEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return HiTypesEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      HiTypesEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_HI_TYPES = "hiTypes";
  @SerializedName(SERIALIZED_NAME_HI_TYPES)
  @javax.annotation.Nonnull
  private List<HiTypesEnum> hiTypes = new ArrayList<>();

  public static final String SERIALIZED_NAME_PURPOSE = "purpose";
  @SerializedName(SERIALIZED_NAME_PURPOSE)
  @javax.annotation.Nullable
  private AbdmConsentManagement12RequestExcludedSourcesInnerPurpose purpose;

  public static final String SERIALIZED_NAME_HIP = "hip";
  @SerializedName(SERIALIZED_NAME_HIP)
  @javax.annotation.Nullable
  private AbdmConsentManagement12RequestIncludedSourcesInnerHip hip;

  public static final String SERIALIZED_NAME_PERIOD = "period";
  @SerializedName(SERIALIZED_NAME_PERIOD)
  @javax.annotation.Nonnull
  private AbdmConsentManagement12RequestExcludedSourcesInnerPeriod period;

  public AbdmConsentManagement12RequestExcludedSourcesInner() {
  }

  public AbdmConsentManagement12RequestExcludedSourcesInner hiTypes(@javax.annotation.Nonnull List<HiTypesEnum> hiTypes) {
    this.hiTypes = hiTypes;
    return this;
  }

  public AbdmConsentManagement12RequestExcludedSourcesInner addHiTypesItem(HiTypesEnum hiTypesItem) {
    if (this.hiTypes == null) {
      this.hiTypes = new ArrayList<>();
    }
    this.hiTypes.add(hiTypesItem);
    return this;
  }

  /**
   * Get hiTypes
   * @return hiTypes
   */
  @javax.annotation.Nonnull
  public List<HiTypesEnum> getHiTypes() {
    return hiTypes;
  }

  public void setHiTypes(@javax.annotation.Nonnull List<HiTypesEnum> hiTypes) {
    this.hiTypes = hiTypes;
  }


  public AbdmConsentManagement12RequestExcludedSourcesInner purpose(@javax.annotation.Nullable AbdmConsentManagement12RequestExcludedSourcesInnerPurpose purpose) {
    this.purpose = purpose;
    return this;
  }

  /**
   * Get purpose
   * @return purpose
   */
  @javax.annotation.Nullable
  public AbdmConsentManagement12RequestExcludedSourcesInnerPurpose getPurpose() {
    return purpose;
  }

  public void setPurpose(@javax.annotation.Nullable AbdmConsentManagement12RequestExcludedSourcesInnerPurpose purpose) {
    this.purpose = purpose;
  }


  public AbdmConsentManagement12RequestExcludedSourcesInner hip(@javax.annotation.Nullable AbdmConsentManagement12RequestIncludedSourcesInnerHip hip) {
    this.hip = hip;
    return this;
  }

  /**
   * Get hip
   * @return hip
   */
  @javax.annotation.Nullable
  public AbdmConsentManagement12RequestIncludedSourcesInnerHip getHip() {
    return hip;
  }

  public void setHip(@javax.annotation.Nullable AbdmConsentManagement12RequestIncludedSourcesInnerHip hip) {
    this.hip = hip;
  }


  public AbdmConsentManagement12RequestExcludedSourcesInner period(@javax.annotation.Nonnull AbdmConsentManagement12RequestExcludedSourcesInnerPeriod period) {
    this.period = period;
    return this;
  }

  /**
   * Get period
   * @return period
   */
  @javax.annotation.Nonnull
  public AbdmConsentManagement12RequestExcludedSourcesInnerPeriod getPeriod() {
    return period;
  }

  public void setPeriod(@javax.annotation.Nonnull AbdmConsentManagement12RequestExcludedSourcesInnerPeriod period) {
    this.period = period;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbdmConsentManagement12RequestExcludedSourcesInner abdmConsentManagement12RequestExcludedSourcesInner = (AbdmConsentManagement12RequestExcludedSourcesInner) o;
    return Objects.equals(this.hiTypes, abdmConsentManagement12RequestExcludedSourcesInner.hiTypes) &&
        Objects.equals(this.purpose, abdmConsentManagement12RequestExcludedSourcesInner.purpose) &&
        Objects.equals(this.hip, abdmConsentManagement12RequestExcludedSourcesInner.hip) &&
        Objects.equals(this.period, abdmConsentManagement12RequestExcludedSourcesInner.period);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hiTypes, purpose, hip, period);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbdmConsentManagement12RequestExcludedSourcesInner {\n");
    sb.append("    hiTypes: ").append(toIndentedString(hiTypes)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    hip: ").append(toIndentedString(hip)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("hiTypes");
    openapiFields.add("purpose");
    openapiFields.add("hip");
    openapiFields.add("period");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("hiTypes");
    openapiRequiredFields.add("period");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AbdmConsentManagement12RequestExcludedSourcesInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AbdmConsentManagement12RequestExcludedSourcesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AbdmConsentManagement12RequestExcludedSourcesInner is not found in the empty JSON string", AbdmConsentManagement12RequestExcludedSourcesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AbdmConsentManagement12RequestExcludedSourcesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AbdmConsentManagement12RequestExcludedSourcesInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AbdmConsentManagement12RequestExcludedSourcesInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the required json array is present
      if (jsonObj.get("hiTypes") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("hiTypes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `hiTypes` to be an array in the JSON string but got `%s`", jsonObj.get("hiTypes").toString()));
      }
      // validate the optional field `purpose`
      if (jsonObj.get("purpose") != null && !jsonObj.get("purpose").isJsonNull()) {
        AbdmConsentManagement12RequestExcludedSourcesInnerPurpose.validateJsonElement(jsonObj.get("purpose"));
      }
      // validate the optional field `hip`
      if (jsonObj.get("hip") != null && !jsonObj.get("hip").isJsonNull()) {
        AbdmConsentManagement12RequestIncludedSourcesInnerHip.validateJsonElement(jsonObj.get("hip"));
      }
      // validate the required field `period`
      AbdmConsentManagement12RequestExcludedSourcesInnerPeriod.validateJsonElement(jsonObj.get("period"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AbdmConsentManagement12RequestExcludedSourcesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AbdmConsentManagement12RequestExcludedSourcesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AbdmConsentManagement12RequestExcludedSourcesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AbdmConsentManagement12RequestExcludedSourcesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<AbdmConsentManagement12RequestExcludedSourcesInner>() {
           @Override
           public void write(JsonWriter out, AbdmConsentManagement12RequestExcludedSourcesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AbdmConsentManagement12RequestExcludedSourcesInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AbdmConsentManagement12RequestExcludedSourcesInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AbdmConsentManagement12RequestExcludedSourcesInner
   * @throws IOException if the JSON string is invalid with respect to AbdmConsentManagement12RequestExcludedSourcesInner
   */
  public static AbdmConsentManagement12RequestExcludedSourcesInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AbdmConsentManagement12RequestExcludedSourcesInner.class);
  }

  /**
   * Convert an instance of AbdmConsentManagement12RequestExcludedSourcesInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

