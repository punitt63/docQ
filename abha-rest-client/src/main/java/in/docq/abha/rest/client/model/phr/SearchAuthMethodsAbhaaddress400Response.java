/*
 * PHR V3 Swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model.phr;

import com.google.gson.*;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-10T18:02:09.764020+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class SearchAuthMethodsAbhaaddress400Response extends AbstractOpenApiSchema {
    private static final Logger log = Logger.getLogger(SearchAuthMethodsAbhaaddress400Response.class.getName());

    public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
        @SuppressWarnings("unchecked")
        @Override
        public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
            if (!SearchAuthMethodsAbhaaddress400Response.class.isAssignableFrom(type.getRawType())) {
                return null; // this class only serializes 'SearchAuthMethodsAbhaaddress400Response' and its subtypes
            }
            final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
            final TypeAdapter<SearchAuthMethodsAbhaaddress400ResponseAnyOf> adapterSearchAuthMethodsAbhaaddress400ResponseAnyOf = gson.getDelegateAdapter(this, TypeToken.get(SearchAuthMethodsAbhaaddress400ResponseAnyOf.class));

            final Type typeInstanceListSearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner = new TypeToken<List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>>(){}.getType();
            final TypeAdapter<List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>> adapterListSearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner = (TypeAdapter<List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>>) gson.getDelegateAdapter(this, TypeToken.get(typeInstanceListSearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner));

            return (TypeAdapter<T>) new TypeAdapter<SearchAuthMethodsAbhaaddress400Response>() {
                @Override
                public void write(JsonWriter out, SearchAuthMethodsAbhaaddress400Response value) throws IOException {
                    if (value == null || value.getActualInstance() == null) {
                        elementAdapter.write(out, null);
                        return;
                    }

                    // check if the actual instance is of the type `SearchAuthMethodsAbhaaddress400ResponseAnyOf`
                    if (value.getActualInstance() instanceof SearchAuthMethodsAbhaaddress400ResponseAnyOf) {
                        JsonElement element = adapterSearchAuthMethodsAbhaaddress400ResponseAnyOf.toJsonTree((SearchAuthMethodsAbhaaddress400ResponseAnyOf)value.getActualInstance());
                        elementAdapter.write(out, element);
                        return;
                    }
                    // check if the actual instance is of the type `List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>`
                    if (value.getActualInstance() instanceof List<?>) {
                        List<?> list = (List<?>) value.getActualInstance();
                        if (list.get(0) instanceof SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner) {
                            JsonArray array = adapterListSearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner.toJsonTree((List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>)value.getActualInstance()).getAsJsonArray();
                            elementAdapter.write(out, array);
                            return;
                        }
                    }
                    throw new IOException("Failed to serialize as the type doesn't match anyOf schemas: List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>, SearchAuthMethodsAbhaaddress400ResponseAnyOf");
                }

                @Override
                public SearchAuthMethodsAbhaaddress400Response read(JsonReader in) throws IOException {
                    Object deserialized = null;
                    JsonElement jsonElement = elementAdapter.read(in);

                    ArrayList<String> errorMessages = new ArrayList<>();
                    TypeAdapter actualAdapter = elementAdapter;

                    // deserialize SearchAuthMethodsAbhaaddress400ResponseAnyOf
                    try {
                        // validate the JSON object to see if any exception is thrown
                        SearchAuthMethodsAbhaaddress400ResponseAnyOf.validateJsonElement(jsonElement);
                        actualAdapter = adapterSearchAuthMethodsAbhaaddress400ResponseAnyOf;
                        SearchAuthMethodsAbhaaddress400Response ret = new SearchAuthMethodsAbhaaddress400Response();
                        ret.setActualInstance(actualAdapter.fromJsonTree(jsonElement));
                        return ret;
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for SearchAuthMethodsAbhaaddress400ResponseAnyOf failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'SearchAuthMethodsAbhaaddress400ResponseAnyOf'", e);
                    }
                    // deserialize List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>
                    try {
                        // validate the JSON object to see if any exception is thrown
                        if (!jsonElement.isJsonArray()) {
                            throw new IllegalArgumentException(String.format("Expected json element to be a array type in the JSON string but got `%s`", jsonElement.toString()));
                        }

                        JsonArray array = jsonElement.getAsJsonArray();
                        // validate array items
                        for(JsonElement element : array) {
                            SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner.validateJsonElement(element);
                        }
                        actualAdapter = adapterListSearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner;
                        SearchAuthMethodsAbhaaddress400Response ret = new SearchAuthMethodsAbhaaddress400Response();
                        ret.setActualInstance(actualAdapter.fromJsonTree(jsonElement));
                        return ret;
                    } catch (Exception e) {
                        // deserialization failed, continue
                        errorMessages.add(String.format("Deserialization for List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner> failed with `%s`.", e.getMessage()));
                        log.log(Level.FINER, "Input data does not match schema 'List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>'", e);
                    }

                    throw new IOException(String.format("Failed deserialization for SearchAuthMethodsAbhaaddress400Response: no class matches result, expected at least 1. Detailed failure message for anyOf schemas: %s. JSON: %s", errorMessages, jsonElement.toString()));
                }
            }.nullSafe();
        }
    }

    // store a list of schema names defined in anyOf
    public static final Map<String, Class<?>> schemas = new HashMap<String, Class<?>>();

    public SearchAuthMethodsAbhaaddress400Response() {
        super("anyOf", Boolean.FALSE);
    }

    public SearchAuthMethodsAbhaaddress400Response(Object o) {
        super("anyOf", Boolean.FALSE);
        setActualInstance(o);
    }

    static {
        schemas.put("SearchAuthMethodsAbhaaddress400ResponseAnyOf", SearchAuthMethodsAbhaaddress400ResponseAnyOf.class);
        schemas.put("List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>", List.class);
    }

    @Override
    public Map<String, Class<?>> getSchemas() {
        return SearchAuthMethodsAbhaaddress400Response.schemas;
    }

    /**
     * Set the instance that matches the anyOf child schema, check
     * the instance parameter is valid against the anyOf child schemas:
     * List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>, SearchAuthMethodsAbhaaddress400ResponseAnyOf
     *
     * It could be an instance of the 'anyOf' schemas.
     */
    @Override
    public void setActualInstance(Object instance) {
        if (instance instanceof SearchAuthMethodsAbhaaddress400ResponseAnyOf) {
            super.setActualInstance(instance);
            return;
        }

        if (instance instanceof List<?>) {
            List<?> list = (List<?>) instance;
            if (list.get(0) instanceof SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner) {
                super.setActualInstance(instance);
                return;
            }
        }

        throw new RuntimeException("Invalid instance type. Must be List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>, SearchAuthMethodsAbhaaddress400ResponseAnyOf");
    }

    /**
     * Get the actual instance, which can be the following:
     * List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>, SearchAuthMethodsAbhaaddress400ResponseAnyOf
     *
     * @return The actual instance (List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>, SearchAuthMethodsAbhaaddress400ResponseAnyOf)
     */
    @SuppressWarnings("unchecked")
    @Override
    public Object getActualInstance() {
        return super.getActualInstance();
    }

    /**
     * Get the actual instance of `SearchAuthMethodsAbhaaddress400ResponseAnyOf`. If the actual instance is not `SearchAuthMethodsAbhaaddress400ResponseAnyOf`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `SearchAuthMethodsAbhaaddress400ResponseAnyOf`
     * @throws ClassCastException if the instance is not `SearchAuthMethodsAbhaaddress400ResponseAnyOf`
     */
    public SearchAuthMethodsAbhaaddress400ResponseAnyOf getSearchAuthMethodsAbhaaddress400ResponseAnyOf() throws ClassCastException {
        return (SearchAuthMethodsAbhaaddress400ResponseAnyOf)super.getActualInstance();
    }

    /**
     * Get the actual instance of `List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>`. If the actual instance is not `List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>`,
     * the ClassCastException will be thrown.
     *
     * @return The actual instance of `List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>`
     * @throws ClassCastException if the instance is not `List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>`
     */
    public List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner> getListSearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner() throws ClassCastException {
        return (List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>)super.getActualInstance();
    }

    /**
     * Validates the JSON Element and throws an exception if issues found
     *
     * @param jsonElement JSON Element
     * @throws IOException if the JSON Element is invalid with respect to SearchAuthMethodsAbhaaddress400Response
     */
    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
        // validate anyOf schemas one by one
        ArrayList<String> errorMessages = new ArrayList<>();
        // validate the json string with SearchAuthMethodsAbhaaddress400ResponseAnyOf
        try {
            SearchAuthMethodsAbhaaddress400ResponseAnyOf.validateJsonElement(jsonElement);
            return;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for SearchAuthMethodsAbhaaddress400ResponseAnyOf failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        // validate the json string with List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>
        try {
            if (!jsonElement.isJsonArray()) {
                throw new IllegalArgumentException(String.format("Expected json element to be a array type in the JSON string but got `%s`", jsonElement.toString()));
            }
            JsonArray array = jsonElement.getAsJsonArray();
            // validate array items
            for(JsonElement element : array) {
                SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner.validateJsonElement(element);
            }
            return;
        } catch (Exception e) {
            errorMessages.add(String.format("Deserialization for List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner> failed with `%s`.", e.getMessage()));
            // continue to the next one
        }
        throw new IOException(String.format("The JSON string is invalid for SearchAuthMethodsAbhaaddress400Response with anyOf schemas: List<SearchAuthMethodsAbhaaddress400ResponseAnyOf1Inner>, SearchAuthMethodsAbhaaddress400ResponseAnyOf. no class match the result, expected at least 1. Detailed failure message for anyOf schemas: %s. JSON: %s", errorMessages, jsonElement.toString()));
    }

    /**
     * Create an instance of SearchAuthMethodsAbhaaddress400Response given an JSON string
     *
     * @param jsonString JSON string
     * @return An instance of SearchAuthMethodsAbhaaddress400Response
     * @throws IOException if the JSON string is invalid with respect to SearchAuthMethodsAbhaaddress400Response
     */
    public static SearchAuthMethodsAbhaaddress400Response fromJson(String jsonString) throws IOException {
        return JSON.getGson().fromJson(jsonString, SearchAuthMethodsAbhaaddress400Response.class);
    }

    /**
     * Convert an instance of SearchAuthMethodsAbhaaddress400Response to an JSON string
     *
     * @return JSON string
     */
    public String toJson() {
        return JSON.getGson().toJson(this);
    }
}

