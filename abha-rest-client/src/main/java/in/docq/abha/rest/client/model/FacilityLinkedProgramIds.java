/*
 * HFR APIs
 * The following are APIs hosted by HFR for public use.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * FacilityLinkedProgramIds
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-25T14:50:59.077868+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class FacilityLinkedProgramIds {
  public static final String SERIALIZED_NAME_NHRR_ID = "nhrrId";
  @SerializedName(SERIALIZED_NAME_NHRR_ID)
  @javax.annotation.Nullable
  private String nhrrId;

  public static final String SERIALIZED_NAME_NIN = "nin";
  @SerializedName(SERIALIZED_NAME_NIN)
  @javax.annotation.Nullable
  private String nin;

  public static final String SERIALIZED_NAME_ABPMJAY_ID = "abpmjayId";
  @SerializedName(SERIALIZED_NAME_ABPMJAY_ID)
  @javax.annotation.Nullable
  private String abpmjayId;

  public static final String SERIALIZED_NAME_ROHINI_ID = "rohiniId";
  @SerializedName(SERIALIZED_NAME_ROHINI_ID)
  @javax.annotation.Nullable
  private String rohiniId;

  public static final String SERIALIZED_NAME_ECHS_ID = "echsId";
  @SerializedName(SERIALIZED_NAME_ECHS_ID)
  @javax.annotation.Nullable
  private String echsId;

  public static final String SERIALIZED_NAME_CGHS_ID = "cghsId";
  @SerializedName(SERIALIZED_NAME_CGHS_ID)
  @javax.annotation.Nullable
  private String cghsId;

  public static final String SERIALIZED_NAME_CEA_REGISTRATION = "ceaRegistration";
  @SerializedName(SERIALIZED_NAME_CEA_REGISTRATION)
  @javax.annotation.Nullable
  private String ceaRegistration;

  public static final String SERIALIZED_NAME_STATE_INSURANCE_SCHEME_ID = "stateInsuranceSchemeId";
  @SerializedName(SERIALIZED_NAME_STATE_INSURANCE_SCHEME_ID)
  @javax.annotation.Nullable
  private String stateInsuranceSchemeId;

  public FacilityLinkedProgramIds() {
  }

  public FacilityLinkedProgramIds nhrrId(@javax.annotation.Nullable String nhrrId) {
    this.nhrrId = nhrrId;
    return this;
  }

  /**
   * Get nhrrId
   * @return nhrrId
   */
  @javax.annotation.Nullable
  public String getNhrrId() {
    return nhrrId;
  }

  public void setNhrrId(@javax.annotation.Nullable String nhrrId) {
    this.nhrrId = nhrrId;
  }


  public FacilityLinkedProgramIds nin(@javax.annotation.Nullable String nin) {
    this.nin = nin;
    return this;
  }

  /**
   * Get nin
   * @return nin
   */
  @javax.annotation.Nullable
  public String getNin() {
    return nin;
  }

  public void setNin(@javax.annotation.Nullable String nin) {
    this.nin = nin;
  }


  public FacilityLinkedProgramIds abpmjayId(@javax.annotation.Nullable String abpmjayId) {
    this.abpmjayId = abpmjayId;
    return this;
  }

  /**
   * Get abpmjayId
   * @return abpmjayId
   */
  @javax.annotation.Nullable
  public String getAbpmjayId() {
    return abpmjayId;
  }

  public void setAbpmjayId(@javax.annotation.Nullable String abpmjayId) {
    this.abpmjayId = abpmjayId;
  }


  public FacilityLinkedProgramIds rohiniId(@javax.annotation.Nullable String rohiniId) {
    this.rohiniId = rohiniId;
    return this;
  }

  /**
   * Get rohiniId
   * @return rohiniId
   */
  @javax.annotation.Nullable
  public String getRohiniId() {
    return rohiniId;
  }

  public void setRohiniId(@javax.annotation.Nullable String rohiniId) {
    this.rohiniId = rohiniId;
  }


  public FacilityLinkedProgramIds echsId(@javax.annotation.Nullable String echsId) {
    this.echsId = echsId;
    return this;
  }

  /**
   * Get echsId
   * @return echsId
   */
  @javax.annotation.Nullable
  public String getEchsId() {
    return echsId;
  }

  public void setEchsId(@javax.annotation.Nullable String echsId) {
    this.echsId = echsId;
  }


  public FacilityLinkedProgramIds cghsId(@javax.annotation.Nullable String cghsId) {
    this.cghsId = cghsId;
    return this;
  }

  /**
   * Get cghsId
   * @return cghsId
   */
  @javax.annotation.Nullable
  public String getCghsId() {
    return cghsId;
  }

  public void setCghsId(@javax.annotation.Nullable String cghsId) {
    this.cghsId = cghsId;
  }


  public FacilityLinkedProgramIds ceaRegistration(@javax.annotation.Nullable String ceaRegistration) {
    this.ceaRegistration = ceaRegistration;
    return this;
  }

  /**
   * Get ceaRegistration
   * @return ceaRegistration
   */
  @javax.annotation.Nullable
  public String getCeaRegistration() {
    return ceaRegistration;
  }

  public void setCeaRegistration(@javax.annotation.Nullable String ceaRegistration) {
    this.ceaRegistration = ceaRegistration;
  }


  public FacilityLinkedProgramIds stateInsuranceSchemeId(@javax.annotation.Nullable String stateInsuranceSchemeId) {
    this.stateInsuranceSchemeId = stateInsuranceSchemeId;
    return this;
  }

  /**
   * Get stateInsuranceSchemeId
   * @return stateInsuranceSchemeId
   */
  @javax.annotation.Nullable
  public String getStateInsuranceSchemeId() {
    return stateInsuranceSchemeId;
  }

  public void setStateInsuranceSchemeId(@javax.annotation.Nullable String stateInsuranceSchemeId) {
    this.stateInsuranceSchemeId = stateInsuranceSchemeId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FacilityLinkedProgramIds facilityLinkedProgramIds = (FacilityLinkedProgramIds) o;
    return Objects.equals(this.nhrrId, facilityLinkedProgramIds.nhrrId) &&
        Objects.equals(this.nin, facilityLinkedProgramIds.nin) &&
        Objects.equals(this.abpmjayId, facilityLinkedProgramIds.abpmjayId) &&
        Objects.equals(this.rohiniId, facilityLinkedProgramIds.rohiniId) &&
        Objects.equals(this.echsId, facilityLinkedProgramIds.echsId) &&
        Objects.equals(this.cghsId, facilityLinkedProgramIds.cghsId) &&
        Objects.equals(this.ceaRegistration, facilityLinkedProgramIds.ceaRegistration) &&
        Objects.equals(this.stateInsuranceSchemeId, facilityLinkedProgramIds.stateInsuranceSchemeId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nhrrId, nin, abpmjayId, rohiniId, echsId, cghsId, ceaRegistration, stateInsuranceSchemeId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FacilityLinkedProgramIds {\n");
    sb.append("    nhrrId: ").append(toIndentedString(nhrrId)).append("\n");
    sb.append("    nin: ").append(toIndentedString(nin)).append("\n");
    sb.append("    abpmjayId: ").append(toIndentedString(abpmjayId)).append("\n");
    sb.append("    rohiniId: ").append(toIndentedString(rohiniId)).append("\n");
    sb.append("    echsId: ").append(toIndentedString(echsId)).append("\n");
    sb.append("    cghsId: ").append(toIndentedString(cghsId)).append("\n");
    sb.append("    ceaRegistration: ").append(toIndentedString(ceaRegistration)).append("\n");
    sb.append("    stateInsuranceSchemeId: ").append(toIndentedString(stateInsuranceSchemeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("nhrrId");
    openapiFields.add("nin");
    openapiFields.add("abpmjayId");
    openapiFields.add("rohiniId");
    openapiFields.add("echsId");
    openapiFields.add("cghsId");
    openapiFields.add("ceaRegistration");
    openapiFields.add("stateInsuranceSchemeId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FacilityLinkedProgramIds
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FacilityLinkedProgramIds.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FacilityLinkedProgramIds is not found in the empty JSON string", FacilityLinkedProgramIds.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FacilityLinkedProgramIds.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FacilityLinkedProgramIds` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("nhrrId") != null && !jsonObj.get("nhrrId").isJsonNull()) && !jsonObj.get("nhrrId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nhrrId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nhrrId").toString()));
      }
      if ((jsonObj.get("nin") != null && !jsonObj.get("nin").isJsonNull()) && !jsonObj.get("nin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nin").toString()));
      }
      if ((jsonObj.get("abpmjayId") != null && !jsonObj.get("abpmjayId").isJsonNull()) && !jsonObj.get("abpmjayId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `abpmjayId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("abpmjayId").toString()));
      }
      if ((jsonObj.get("rohiniId") != null && !jsonObj.get("rohiniId").isJsonNull()) && !jsonObj.get("rohiniId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rohiniId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rohiniId").toString()));
      }
      if ((jsonObj.get("echsId") != null && !jsonObj.get("echsId").isJsonNull()) && !jsonObj.get("echsId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `echsId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("echsId").toString()));
      }
      if ((jsonObj.get("cghsId") != null && !jsonObj.get("cghsId").isJsonNull()) && !jsonObj.get("cghsId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cghsId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cghsId").toString()));
      }
      if ((jsonObj.get("ceaRegistration") != null && !jsonObj.get("ceaRegistration").isJsonNull()) && !jsonObj.get("ceaRegistration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ceaRegistration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ceaRegistration").toString()));
      }
      if ((jsonObj.get("stateInsuranceSchemeId") != null && !jsonObj.get("stateInsuranceSchemeId").isJsonNull()) && !jsonObj.get("stateInsuranceSchemeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateInsuranceSchemeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateInsuranceSchemeId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FacilityLinkedProgramIds.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FacilityLinkedProgramIds' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FacilityLinkedProgramIds> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FacilityLinkedProgramIds.class));

       return (TypeAdapter<T>) new TypeAdapter<FacilityLinkedProgramIds>() {
           @Override
           public void write(JsonWriter out, FacilityLinkedProgramIds value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FacilityLinkedProgramIds read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FacilityLinkedProgramIds given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FacilityLinkedProgramIds
   * @throws IOException if the JSON string is invalid with respect to FacilityLinkedProgramIds
   */
  public static FacilityLinkedProgramIds fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FacilityLinkedProgramIds.class);
  }

  /**
   * Convert an instance of FacilityLinkedProgramIds to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

