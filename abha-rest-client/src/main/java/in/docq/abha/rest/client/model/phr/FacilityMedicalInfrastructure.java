/*
 * Health Facility Registry APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model.phr;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * FacilityMedicalInfrastructure
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-04T14:58:27.910059+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class FacilityMedicalInfrastructure {
  public static final String SERIALIZED_NAME_COUNT_I_P_D_BEDS_WITHOUT_OXYGEN = "countIPDBedsWithoutOxygen";
  @SerializedName(SERIALIZED_NAME_COUNT_I_P_D_BEDS_WITHOUT_OXYGEN)
  @javax.annotation.Nullable
  private Integer countIPDBedsWithoutOxygen;

  public static final String SERIALIZED_NAME_COUNT_I_P_D_BEDS_WITH_OXYGEN = "countIPDBedsWithOxygen";
  @SerializedName(SERIALIZED_NAME_COUNT_I_P_D_BEDS_WITH_OXYGEN)
  @javax.annotation.Nullable
  private Integer countIPDBedsWithOxygen;

  public static final String SERIALIZED_NAME_COUNT_I_C_U_BEDS_WITH_VENTILATORS = "countICUBedsWithVentilators";
  @SerializedName(SERIALIZED_NAME_COUNT_I_C_U_BEDS_WITH_VENTILATORS)
  @javax.annotation.Nullable
  private Integer countICUBedsWithVentilators;

  public static final String SERIALIZED_NAME_COUNT_I_C_U_BEDS_WITHOUT_VENTILATORS = "countICUBedsWithoutVentilators";
  @SerializedName(SERIALIZED_NAME_COUNT_I_C_U_BEDS_WITHOUT_VENTILATORS)
  @javax.annotation.Nullable
  private Integer countICUBedsWithoutVentilators;

  public static final String SERIALIZED_NAME_COUNT_H_D_U_BEDS_WITH_VENTILATORS = "countHDUBedsWithVentilators";
  @SerializedName(SERIALIZED_NAME_COUNT_H_D_U_BEDS_WITH_VENTILATORS)
  @javax.annotation.Nullable
  private Integer countHDUBedsWithVentilators;

  public static final String SERIALIZED_NAME_COUNT_H_D_U_BEDS_WITHOUT_VENTILATORS = "countHDUBedsWithoutVentilators";
  @SerializedName(SERIALIZED_NAME_COUNT_H_D_U_BEDS_WITHOUT_VENTILATORS)
  @javax.annotation.Nullable
  private Integer countHDUBedsWithoutVentilators;

  public static final String SERIALIZED_NAME_TOTAL_NUMBER_OF_VENTILATORS = "totalNumberOfVentilators";
  @SerializedName(SERIALIZED_NAME_TOTAL_NUMBER_OF_VENTILATORS)
  @javax.annotation.Nullable
  private Integer totalNumberOfVentilators;

  public static final String SERIALIZED_NAME_COUNT_DAY_CARE_BEDS_WITHOUT_OXYGEN = "countDayCareBedsWithoutOxygen";
  @SerializedName(SERIALIZED_NAME_COUNT_DAY_CARE_BEDS_WITHOUT_OXYGEN)
  @javax.annotation.Nullable
  private Integer countDayCareBedsWithoutOxygen;

  public static final String SERIALIZED_NAME_COUNT_DAY_CARE_BEDS_WITH_OXYGEN = "countDayCareBedsWithOxygen";
  @SerializedName(SERIALIZED_NAME_COUNT_DAY_CARE_BEDS_WITH_OXYGEN)
  @javax.annotation.Nullable
  private Integer countDayCareBedsWithOxygen;

  public static final String SERIALIZED_NAME_COUNT_DENTAL_CHAIRS = "countDentalChairs";
  @SerializedName(SERIALIZED_NAME_COUNT_DENTAL_CHAIRS)
  @javax.annotation.Nullable
  private Integer countDentalChairs;

  public static final String SERIALIZED_NAME_TOTAL_NUMBER_OF_BEDS = "totalNumberOfBeds";
  @SerializedName(SERIALIZED_NAME_TOTAL_NUMBER_OF_BEDS)
  @javax.annotation.Nullable
  private Integer totalNumberOfBeds;

  public FacilityMedicalInfrastructure() {
  }

  public FacilityMedicalInfrastructure countIPDBedsWithoutOxygen(@javax.annotation.Nullable Integer countIPDBedsWithoutOxygen) {
    this.countIPDBedsWithoutOxygen = countIPDBedsWithoutOxygen;
    return this;
  }

  /**
   * Get countIPDBedsWithoutOxygen
   * @return countIPDBedsWithoutOxygen
   */
  @javax.annotation.Nullable
  public Integer getCountIPDBedsWithoutOxygen() {
    return countIPDBedsWithoutOxygen;
  }

  public void setCountIPDBedsWithoutOxygen(@javax.annotation.Nullable Integer countIPDBedsWithoutOxygen) {
    this.countIPDBedsWithoutOxygen = countIPDBedsWithoutOxygen;
  }


  public FacilityMedicalInfrastructure countIPDBedsWithOxygen(@javax.annotation.Nullable Integer countIPDBedsWithOxygen) {
    this.countIPDBedsWithOxygen = countIPDBedsWithOxygen;
    return this;
  }

  /**
   * Get countIPDBedsWithOxygen
   * @return countIPDBedsWithOxygen
   */
  @javax.annotation.Nullable
  public Integer getCountIPDBedsWithOxygen() {
    return countIPDBedsWithOxygen;
  }

  public void setCountIPDBedsWithOxygen(@javax.annotation.Nullable Integer countIPDBedsWithOxygen) {
    this.countIPDBedsWithOxygen = countIPDBedsWithOxygen;
  }


  public FacilityMedicalInfrastructure countICUBedsWithVentilators(@javax.annotation.Nullable Integer countICUBedsWithVentilators) {
    this.countICUBedsWithVentilators = countICUBedsWithVentilators;
    return this;
  }

  /**
   * Get countICUBedsWithVentilators
   * @return countICUBedsWithVentilators
   */
  @javax.annotation.Nullable
  public Integer getCountICUBedsWithVentilators() {
    return countICUBedsWithVentilators;
  }

  public void setCountICUBedsWithVentilators(@javax.annotation.Nullable Integer countICUBedsWithVentilators) {
    this.countICUBedsWithVentilators = countICUBedsWithVentilators;
  }


  public FacilityMedicalInfrastructure countICUBedsWithoutVentilators(@javax.annotation.Nullable Integer countICUBedsWithoutVentilators) {
    this.countICUBedsWithoutVentilators = countICUBedsWithoutVentilators;
    return this;
  }

  /**
   * Get countICUBedsWithoutVentilators
   * @return countICUBedsWithoutVentilators
   */
  @javax.annotation.Nullable
  public Integer getCountICUBedsWithoutVentilators() {
    return countICUBedsWithoutVentilators;
  }

  public void setCountICUBedsWithoutVentilators(@javax.annotation.Nullable Integer countICUBedsWithoutVentilators) {
    this.countICUBedsWithoutVentilators = countICUBedsWithoutVentilators;
  }


  public FacilityMedicalInfrastructure countHDUBedsWithVentilators(@javax.annotation.Nullable Integer countHDUBedsWithVentilators) {
    this.countHDUBedsWithVentilators = countHDUBedsWithVentilators;
    return this;
  }

  /**
   * Get countHDUBedsWithVentilators
   * @return countHDUBedsWithVentilators
   */
  @javax.annotation.Nullable
  public Integer getCountHDUBedsWithVentilators() {
    return countHDUBedsWithVentilators;
  }

  public void setCountHDUBedsWithVentilators(@javax.annotation.Nullable Integer countHDUBedsWithVentilators) {
    this.countHDUBedsWithVentilators = countHDUBedsWithVentilators;
  }


  public FacilityMedicalInfrastructure countHDUBedsWithoutVentilators(@javax.annotation.Nullable Integer countHDUBedsWithoutVentilators) {
    this.countHDUBedsWithoutVentilators = countHDUBedsWithoutVentilators;
    return this;
  }

  /**
   * Get countHDUBedsWithoutVentilators
   * @return countHDUBedsWithoutVentilators
   */
  @javax.annotation.Nullable
  public Integer getCountHDUBedsWithoutVentilators() {
    return countHDUBedsWithoutVentilators;
  }

  public void setCountHDUBedsWithoutVentilators(@javax.annotation.Nullable Integer countHDUBedsWithoutVentilators) {
    this.countHDUBedsWithoutVentilators = countHDUBedsWithoutVentilators;
  }


  public FacilityMedicalInfrastructure totalNumberOfVentilators(@javax.annotation.Nullable Integer totalNumberOfVentilators) {
    this.totalNumberOfVentilators = totalNumberOfVentilators;
    return this;
  }

  /**
   * Get totalNumberOfVentilators
   * @return totalNumberOfVentilators
   */
  @javax.annotation.Nullable
  public Integer getTotalNumberOfVentilators() {
    return totalNumberOfVentilators;
  }

  public void setTotalNumberOfVentilators(@javax.annotation.Nullable Integer totalNumberOfVentilators) {
    this.totalNumberOfVentilators = totalNumberOfVentilators;
  }


  public FacilityMedicalInfrastructure countDayCareBedsWithoutOxygen(@javax.annotation.Nullable Integer countDayCareBedsWithoutOxygen) {
    this.countDayCareBedsWithoutOxygen = countDayCareBedsWithoutOxygen;
    return this;
  }

  /**
   * Get countDayCareBedsWithoutOxygen
   * @return countDayCareBedsWithoutOxygen
   */
  @javax.annotation.Nullable
  public Integer getCountDayCareBedsWithoutOxygen() {
    return countDayCareBedsWithoutOxygen;
  }

  public void setCountDayCareBedsWithoutOxygen(@javax.annotation.Nullable Integer countDayCareBedsWithoutOxygen) {
    this.countDayCareBedsWithoutOxygen = countDayCareBedsWithoutOxygen;
  }


  public FacilityMedicalInfrastructure countDayCareBedsWithOxygen(@javax.annotation.Nullable Integer countDayCareBedsWithOxygen) {
    this.countDayCareBedsWithOxygen = countDayCareBedsWithOxygen;
    return this;
  }

  /**
   * Get countDayCareBedsWithOxygen
   * @return countDayCareBedsWithOxygen
   */
  @javax.annotation.Nullable
  public Integer getCountDayCareBedsWithOxygen() {
    return countDayCareBedsWithOxygen;
  }

  public void setCountDayCareBedsWithOxygen(@javax.annotation.Nullable Integer countDayCareBedsWithOxygen) {
    this.countDayCareBedsWithOxygen = countDayCareBedsWithOxygen;
  }


  public FacilityMedicalInfrastructure countDentalChairs(@javax.annotation.Nullable Integer countDentalChairs) {
    this.countDentalChairs = countDentalChairs;
    return this;
  }

  /**
   * Get countDentalChairs
   * @return countDentalChairs
   */
  @javax.annotation.Nullable
  public Integer getCountDentalChairs() {
    return countDentalChairs;
  }

  public void setCountDentalChairs(@javax.annotation.Nullable Integer countDentalChairs) {
    this.countDentalChairs = countDentalChairs;
  }


  public FacilityMedicalInfrastructure totalNumberOfBeds(@javax.annotation.Nullable Integer totalNumberOfBeds) {
    this.totalNumberOfBeds = totalNumberOfBeds;
    return this;
  }

  /**
   * Get totalNumberOfBeds
   * @return totalNumberOfBeds
   */
  @javax.annotation.Nullable
  public Integer getTotalNumberOfBeds() {
    return totalNumberOfBeds;
  }

  public void setTotalNumberOfBeds(@javax.annotation.Nullable Integer totalNumberOfBeds) {
    this.totalNumberOfBeds = totalNumberOfBeds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FacilityMedicalInfrastructure facilityMedicalInfrastructure = (FacilityMedicalInfrastructure) o;
    return Objects.equals(this.countIPDBedsWithoutOxygen, facilityMedicalInfrastructure.countIPDBedsWithoutOxygen) &&
        Objects.equals(this.countIPDBedsWithOxygen, facilityMedicalInfrastructure.countIPDBedsWithOxygen) &&
        Objects.equals(this.countICUBedsWithVentilators, facilityMedicalInfrastructure.countICUBedsWithVentilators) &&
        Objects.equals(this.countICUBedsWithoutVentilators, facilityMedicalInfrastructure.countICUBedsWithoutVentilators) &&
        Objects.equals(this.countHDUBedsWithVentilators, facilityMedicalInfrastructure.countHDUBedsWithVentilators) &&
        Objects.equals(this.countHDUBedsWithoutVentilators, facilityMedicalInfrastructure.countHDUBedsWithoutVentilators) &&
        Objects.equals(this.totalNumberOfVentilators, facilityMedicalInfrastructure.totalNumberOfVentilators) &&
        Objects.equals(this.countDayCareBedsWithoutOxygen, facilityMedicalInfrastructure.countDayCareBedsWithoutOxygen) &&
        Objects.equals(this.countDayCareBedsWithOxygen, facilityMedicalInfrastructure.countDayCareBedsWithOxygen) &&
        Objects.equals(this.countDentalChairs, facilityMedicalInfrastructure.countDentalChairs) &&
        Objects.equals(this.totalNumberOfBeds, facilityMedicalInfrastructure.totalNumberOfBeds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countIPDBedsWithoutOxygen, countIPDBedsWithOxygen, countICUBedsWithVentilators, countICUBedsWithoutVentilators, countHDUBedsWithVentilators, countHDUBedsWithoutVentilators, totalNumberOfVentilators, countDayCareBedsWithoutOxygen, countDayCareBedsWithOxygen, countDentalChairs, totalNumberOfBeds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FacilityMedicalInfrastructure {\n");
    sb.append("    countIPDBedsWithoutOxygen: ").append(toIndentedString(countIPDBedsWithoutOxygen)).append("\n");
    sb.append("    countIPDBedsWithOxygen: ").append(toIndentedString(countIPDBedsWithOxygen)).append("\n");
    sb.append("    countICUBedsWithVentilators: ").append(toIndentedString(countICUBedsWithVentilators)).append("\n");
    sb.append("    countICUBedsWithoutVentilators: ").append(toIndentedString(countICUBedsWithoutVentilators)).append("\n");
    sb.append("    countHDUBedsWithVentilators: ").append(toIndentedString(countHDUBedsWithVentilators)).append("\n");
    sb.append("    countHDUBedsWithoutVentilators: ").append(toIndentedString(countHDUBedsWithoutVentilators)).append("\n");
    sb.append("    totalNumberOfVentilators: ").append(toIndentedString(totalNumberOfVentilators)).append("\n");
    sb.append("    countDayCareBedsWithoutOxygen: ").append(toIndentedString(countDayCareBedsWithoutOxygen)).append("\n");
    sb.append("    countDayCareBedsWithOxygen: ").append(toIndentedString(countDayCareBedsWithOxygen)).append("\n");
    sb.append("    countDentalChairs: ").append(toIndentedString(countDentalChairs)).append("\n");
    sb.append("    totalNumberOfBeds: ").append(toIndentedString(totalNumberOfBeds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("countIPDBedsWithoutOxygen");
    openapiFields.add("countIPDBedsWithOxygen");
    openapiFields.add("countICUBedsWithVentilators");
    openapiFields.add("countICUBedsWithoutVentilators");
    openapiFields.add("countHDUBedsWithVentilators");
    openapiFields.add("countHDUBedsWithoutVentilators");
    openapiFields.add("totalNumberOfVentilators");
    openapiFields.add("countDayCareBedsWithoutOxygen");
    openapiFields.add("countDayCareBedsWithOxygen");
    openapiFields.add("countDentalChairs");
    openapiFields.add("totalNumberOfBeds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FacilityMedicalInfrastructure
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FacilityMedicalInfrastructure.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FacilityMedicalInfrastructure is not found in the empty JSON string", FacilityMedicalInfrastructure.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FacilityMedicalInfrastructure.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FacilityMedicalInfrastructure` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FacilityMedicalInfrastructure.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FacilityMedicalInfrastructure' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FacilityMedicalInfrastructure> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FacilityMedicalInfrastructure.class));

       return (TypeAdapter<T>) new TypeAdapter<FacilityMedicalInfrastructure>() {
           @Override
           public void write(JsonWriter out, FacilityMedicalInfrastructure value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FacilityMedicalInfrastructure read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FacilityMedicalInfrastructure given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FacilityMedicalInfrastructure
   * @throws IOException if the JSON string is invalid with respect to FacilityMedicalInfrastructure
   */
  public static FacilityMedicalInfrastructure fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FacilityMedicalInfrastructure.class);
  }

  /**
   * Convert an instance of FacilityMedicalInfrastructure to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

