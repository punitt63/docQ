/*
 * User Initiated Linking Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.*;

/**
 * AbdmUserInitiatedLinking5RequestConfirmation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-12T17:25:36.087359+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class AbdmUserInitiatedLinking5RequestConfirmation {
  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  @javax.annotation.Nonnull
  private Integer token;

  public static final String SERIALIZED_NAME_LINK_REF_NUMBER = "linkRefNumber";
  @SerializedName(SERIALIZED_NAME_LINK_REF_NUMBER)
  @javax.annotation.Nonnull
  private UUID linkRefNumber;

  public AbdmUserInitiatedLinking5RequestConfirmation() {
  }

  public AbdmUserInitiatedLinking5RequestConfirmation token(@javax.annotation.Nonnull Integer token) {
    this.token = token;
    return this;
  }

  /**
   * The token number. Must be 6 digit and contain only 0-9
   * @return token
   */
  @javax.annotation.Nonnull
  public Integer getToken() {
    return token;
  }

  public void setToken(@javax.annotation.Nonnull Integer token) {
    this.token = token;
  }


  public AbdmUserInitiatedLinking5RequestConfirmation linkRefNumber(@javax.annotation.Nonnull UUID linkRefNumber) {
    this.linkRefNumber = linkRefNumber;
    return this;
  }

  /**
   * The link reference number random uuid. Allows alpha numeric characters and special characters like \&quot;^[a-zA-Z0-9_\\\\-@,. \\\&quot;&#39;:|()/]{0,255}$\&quot;
   * @return linkRefNumber
   */
  @javax.annotation.Nonnull
  public UUID getLinkRefNumber() {
    return linkRefNumber;
  }

  public void setLinkRefNumber(@javax.annotation.Nonnull UUID linkRefNumber) {
    this.linkRefNumber = linkRefNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AbdmUserInitiatedLinking5RequestConfirmation abdmUserInitiatedLinking5RequestConfirmation = (AbdmUserInitiatedLinking5RequestConfirmation) o;
    return Objects.equals(this.token, abdmUserInitiatedLinking5RequestConfirmation.token) &&
        Objects.equals(this.linkRefNumber, abdmUserInitiatedLinking5RequestConfirmation.linkRefNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(token, linkRefNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AbdmUserInitiatedLinking5RequestConfirmation {\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    linkRefNumber: ").append(toIndentedString(linkRefNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("token");
    openapiFields.add("linkRefNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("token");
    openapiRequiredFields.add("linkRefNumber");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AbdmUserInitiatedLinking5RequestConfirmation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AbdmUserInitiatedLinking5RequestConfirmation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AbdmUserInitiatedLinking5RequestConfirmation is not found in the empty JSON string", AbdmUserInitiatedLinking5RequestConfirmation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AbdmUserInitiatedLinking5RequestConfirmation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AbdmUserInitiatedLinking5RequestConfirmation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AbdmUserInitiatedLinking5RequestConfirmation.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("linkRefNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkRefNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkRefNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AbdmUserInitiatedLinking5RequestConfirmation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AbdmUserInitiatedLinking5RequestConfirmation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AbdmUserInitiatedLinking5RequestConfirmation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AbdmUserInitiatedLinking5RequestConfirmation.class));

       return (TypeAdapter<T>) new TypeAdapter<AbdmUserInitiatedLinking5RequestConfirmation>() {
           @Override
           public void write(JsonWriter out, AbdmUserInitiatedLinking5RequestConfirmation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AbdmUserInitiatedLinking5RequestConfirmation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AbdmUserInitiatedLinking5RequestConfirmation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AbdmUserInitiatedLinking5RequestConfirmation
   * @throws IOException if the JSON string is invalid with respect to AbdmUserInitiatedLinking5RequestConfirmation
   */
  public static AbdmUserInitiatedLinking5RequestConfirmation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AbdmUserInitiatedLinking5RequestConfirmation.class);
  }

  /**
   * Convert an instance of AbdmUserInitiatedLinking5RequestConfirmation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

