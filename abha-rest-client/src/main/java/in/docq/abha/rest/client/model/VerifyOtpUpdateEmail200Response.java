/*
 * PHR V3 Swagger
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.*;

/**
 * VerifyOtpUpdateEmail200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-10T18:02:09.764020+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class VerifyOtpUpdateEmail200Response {
  public static final String SERIALIZED_NAME_ACCOUNTS = "accounts";
  @SerializedName(SERIALIZED_NAME_ACCOUNTS)
  @javax.annotation.Nullable
  private List<VerifyOtpUpdateEmail200ResponseAccountsInner> accounts = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTH_RESULT = "authResult";
  @SerializedName(SERIALIZED_NAME_AUTH_RESULT)
  @javax.annotation.Nullable
  private String authResult;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  @javax.annotation.Nullable
  private String message;

  public static final String SERIALIZED_NAME_TOKENS = "tokens";
  @SerializedName(SERIALIZED_NAME_TOKENS)
  @javax.annotation.Nullable
  private OtpVerifyMobile200ResponseTokens tokens;

  public static final String SERIALIZED_NAME_TXN_ID = "txnId";
  @SerializedName(SERIALIZED_NAME_TXN_ID)
  @javax.annotation.Nullable
  private String txnId;

  public static final String SERIALIZED_NAME_USERS = "users";
  @SerializedName(SERIALIZED_NAME_USERS)
  @javax.annotation.Nullable
  private List<Object> users = new ArrayList<>();

  public VerifyOtpUpdateEmail200Response() {
  }

  public VerifyOtpUpdateEmail200Response accounts(@javax.annotation.Nullable List<VerifyOtpUpdateEmail200ResponseAccountsInner> accounts) {
    this.accounts = accounts;
    return this;
  }

  public VerifyOtpUpdateEmail200Response addAccountsItem(VerifyOtpUpdateEmail200ResponseAccountsInner accountsItem) {
    if (this.accounts == null) {
      this.accounts = new ArrayList<>();
    }
    this.accounts.add(accountsItem);
    return this;
  }

  /**
   * Get accounts
   * @return accounts
   */
  @javax.annotation.Nullable
  public List<VerifyOtpUpdateEmail200ResponseAccountsInner> getAccounts() {
    return accounts;
  }

  public void setAccounts(@javax.annotation.Nullable List<VerifyOtpUpdateEmail200ResponseAccountsInner> accounts) {
    this.accounts = accounts;
  }


  public VerifyOtpUpdateEmail200Response authResult(@javax.annotation.Nullable String authResult) {
    this.authResult = authResult;
    return this;
  }

  /**
   * Get authResult
   * @return authResult
   */
  @javax.annotation.Nullable
  public String getAuthResult() {
    return authResult;
  }

  public void setAuthResult(@javax.annotation.Nullable String authResult) {
    this.authResult = authResult;
  }


  public VerifyOtpUpdateEmail200Response message(@javax.annotation.Nullable String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(@javax.annotation.Nullable String message) {
    this.message = message;
  }


  public VerifyOtpUpdateEmail200Response tokens(@javax.annotation.Nullable OtpVerifyMobile200ResponseTokens tokens) {
    this.tokens = tokens;
    return this;
  }

  /**
   * Get tokens
   * @return tokens
   */
  @javax.annotation.Nullable
  public OtpVerifyMobile200ResponseTokens getTokens() {
    return tokens;
  }

  public void setTokens(@javax.annotation.Nullable OtpVerifyMobile200ResponseTokens tokens) {
    this.tokens = tokens;
  }


  public VerifyOtpUpdateEmail200Response txnId(@javax.annotation.Nullable String txnId) {
    this.txnId = txnId;
    return this;
  }

  /**
   * Get txnId
   * @return txnId
   */
  @javax.annotation.Nullable
  public String getTxnId() {
    return txnId;
  }

  public void setTxnId(@javax.annotation.Nullable String txnId) {
    this.txnId = txnId;
  }


  public VerifyOtpUpdateEmail200Response users(@javax.annotation.Nullable List<Object> users) {
    this.users = users;
    return this;
  }

  public VerifyOtpUpdateEmail200Response addUsersItem(Object usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

  /**
   * Get users
   * @return users
   */
  @javax.annotation.Nullable
  public List<Object> getUsers() {
    return users;
  }

  public void setUsers(@javax.annotation.Nullable List<Object> users) {
    this.users = users;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VerifyOtpUpdateEmail200Response verifyOtpUpdateEmail200Response = (VerifyOtpUpdateEmail200Response) o;
    return Objects.equals(this.accounts, verifyOtpUpdateEmail200Response.accounts) &&
        Objects.equals(this.authResult, verifyOtpUpdateEmail200Response.authResult) &&
        Objects.equals(this.message, verifyOtpUpdateEmail200Response.message) &&
        Objects.equals(this.tokens, verifyOtpUpdateEmail200Response.tokens) &&
        Objects.equals(this.txnId, verifyOtpUpdateEmail200Response.txnId) &&
        Objects.equals(this.users, verifyOtpUpdateEmail200Response.users);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accounts, authResult, message, tokens, txnId, users);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VerifyOtpUpdateEmail200Response {\n");
    sb.append("    accounts: ").append(toIndentedString(accounts)).append("\n");
    sb.append("    authResult: ").append(toIndentedString(authResult)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    tokens: ").append(toIndentedString(tokens)).append("\n");
    sb.append("    txnId: ").append(toIndentedString(txnId)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accounts");
    openapiFields.add("authResult");
    openapiFields.add("message");
    openapiFields.add("tokens");
    openapiFields.add("txnId");
    openapiFields.add("users");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VerifyOtpUpdateEmail200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VerifyOtpUpdateEmail200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VerifyOtpUpdateEmail200Response is not found in the empty JSON string", VerifyOtpUpdateEmail200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VerifyOtpUpdateEmail200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VerifyOtpUpdateEmail200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("accounts") != null && !jsonObj.get("accounts").isJsonNull()) {
        JsonArray jsonArrayaccounts = jsonObj.getAsJsonArray("accounts");
        if (jsonArrayaccounts != null) {
          // ensure the json data is an array
          if (!jsonObj.get("accounts").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `accounts` to be an array in the JSON string but got `%s`", jsonObj.get("accounts").toString()));
          }

          // validate the optional field `accounts` (array)
          for (int i = 0; i < jsonArrayaccounts.size(); i++) {
            VerifyOtpUpdateEmail200ResponseAccountsInner.validateJsonElement(jsonArrayaccounts.get(i));
          };
        }
      }
      if ((jsonObj.get("authResult") != null && !jsonObj.get("authResult").isJsonNull()) && !jsonObj.get("authResult").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authResult` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authResult").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      // validate the optional field `tokens`
      if (jsonObj.get("tokens") != null && !jsonObj.get("tokens").isJsonNull()) {
        OtpVerifyMobile200ResponseTokens.validateJsonElement(jsonObj.get("tokens"));
      }
      if ((jsonObj.get("txnId") != null && !jsonObj.get("txnId").isJsonNull()) && !jsonObj.get("txnId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `txnId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("txnId").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("users") != null && !jsonObj.get("users").isJsonNull() && !jsonObj.get("users").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `users` to be an array in the JSON string but got `%s`", jsonObj.get("users").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VerifyOtpUpdateEmail200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VerifyOtpUpdateEmail200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VerifyOtpUpdateEmail200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VerifyOtpUpdateEmail200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<VerifyOtpUpdateEmail200Response>() {
           @Override
           public void write(JsonWriter out, VerifyOtpUpdateEmail200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VerifyOtpUpdateEmail200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VerifyOtpUpdateEmail200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VerifyOtpUpdateEmail200Response
   * @throws IOException if the JSON string is invalid with respect to VerifyOtpUpdateEmail200Response
   */
  public static VerifyOtpUpdateEmail200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VerifyOtpUpdateEmail200Response.class);
  }

  /**
   * Convert an instance of VerifyOtpUpdateEmail200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

