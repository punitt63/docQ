/*
 * HIE-CM Profile Share
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model.phr;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * PatientShare2RequestOneOfAcknowledgement
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-09-12T12:11:20.742865+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class PatientShare2RequestOneOfAcknowledgement {
  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nonnull
  private String status;

  public static final String SERIALIZED_NAME_ABHA_ADDRESS = "abhaAddress";
  @SerializedName(SERIALIZED_NAME_ABHA_ADDRESS)
  @javax.annotation.Nonnull
  private String abhaAddress;

  public static final String SERIALIZED_NAME_PROFILE = "profile";
  @SerializedName(SERIALIZED_NAME_PROFILE)
  @javax.annotation.Nonnull
  private PatientShare2RequestOneOfAcknowledgementProfile profile;

  public PatientShare2RequestOneOfAcknowledgement() {
  }

  public PatientShare2RequestOneOfAcknowledgement status(@javax.annotation.Nonnull String status) {
    this.status = status;
    return this;
  }

  /**
   * The status of the transaction.Allows like (SUCCESS|FAILED)
   * @return status
   */
  @javax.annotation.Nonnull
  public String getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nonnull String status) {
    this.status = status;
  }


  public PatientShare2RequestOneOfAcknowledgement abhaAddress(@javax.annotation.Nonnull String abhaAddress) {
    this.abhaAddress = abhaAddress;
    return this;
  }

  /**
   * The abha address of the patient. Should start with Alphanumeric . and  _  in the middle and must be ending with @abdm or @sbx and Allows alpha numeric character and special characters like ^[a-zA-Z0-9][a-zA-Z0-9_.\\-!]+[a-zA-Z0-9]@(abdm|sbx)$
   * @return abhaAddress
   */
  @javax.annotation.Nonnull
  public String getAbhaAddress() {
    return abhaAddress;
  }

  public void setAbhaAddress(@javax.annotation.Nonnull String abhaAddress) {
    this.abhaAddress = abhaAddress;
  }


  public PatientShare2RequestOneOfAcknowledgement profile(@javax.annotation.Nonnull PatientShare2RequestOneOfAcknowledgementProfile profile) {
    this.profile = profile;
    return this;
  }

  /**
   * Get profile
   * @return profile
   */
  @javax.annotation.Nonnull
  public PatientShare2RequestOneOfAcknowledgementProfile getProfile() {
    return profile;
  }

  public void setProfile(@javax.annotation.Nonnull PatientShare2RequestOneOfAcknowledgementProfile profile) {
    this.profile = profile;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PatientShare2RequestOneOfAcknowledgement patientShare2RequestOneOfAcknowledgement = (PatientShare2RequestOneOfAcknowledgement) o;
    return Objects.equals(this.status, patientShare2RequestOneOfAcknowledgement.status) &&
        Objects.equals(this.abhaAddress, patientShare2RequestOneOfAcknowledgement.abhaAddress) &&
        Objects.equals(this.profile, patientShare2RequestOneOfAcknowledgement.profile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, abhaAddress, profile);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PatientShare2RequestOneOfAcknowledgement {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    abhaAddress: ").append(toIndentedString(abhaAddress)).append("\n");
    sb.append("    profile: ").append(toIndentedString(profile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("status");
    openapiFields.add("abhaAddress");
    openapiFields.add("profile");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("abhaAddress");
    openapiRequiredFields.add("profile");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PatientShare2RequestOneOfAcknowledgement
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PatientShare2RequestOneOfAcknowledgement.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PatientShare2RequestOneOfAcknowledgement is not found in the empty JSON string", PatientShare2RequestOneOfAcknowledgement.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PatientShare2RequestOneOfAcknowledgement.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PatientShare2RequestOneOfAcknowledgement` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : PatientShare2RequestOneOfAcknowledgement.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if (!jsonObj.get("abhaAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `abhaAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("abhaAddress").toString()));
      }
      // validate the required field `profile`
      PatientShare2RequestOneOfAcknowledgementProfile.validateJsonElement(jsonObj.get("profile"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PatientShare2RequestOneOfAcknowledgement.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PatientShare2RequestOneOfAcknowledgement' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PatientShare2RequestOneOfAcknowledgement> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PatientShare2RequestOneOfAcknowledgement.class));

       return (TypeAdapter<T>) new TypeAdapter<PatientShare2RequestOneOfAcknowledgement>() {
           @Override
           public void write(JsonWriter out, PatientShare2RequestOneOfAcknowledgement value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PatientShare2RequestOneOfAcknowledgement read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PatientShare2RequestOneOfAcknowledgement given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PatientShare2RequestOneOfAcknowledgement
   * @throws IOException if the JSON string is invalid with respect to PatientShare2RequestOneOfAcknowledgement
   */
  public static PatientShare2RequestOneOfAcknowledgement fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PatientShare2RequestOneOfAcknowledgement.class);
  }

  /**
   * Convert an instance of PatientShare2RequestOneOfAcknowledgement to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

