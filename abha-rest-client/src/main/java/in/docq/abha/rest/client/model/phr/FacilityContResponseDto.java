/*
 * Health Facility Registry APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model.phr;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.*;

/**
 * FacilityContResponseDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-04T14:58:27.910059+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class FacilityContResponseDto {
  public static final String SERIALIZED_NAME_FACILITY_DETAILS = "facilityDetails";
  @SerializedName(SERIALIZED_NAME_FACILITY_DETAILS)
  @javax.annotation.Nullable
  private FacilityContDetails facilityDetails;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private String status;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  @javax.annotation.Nullable
  private String message;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  @javax.annotation.Nullable
  private String transactionId;

  public static final String SERIALIZED_NAME_ERROR_STATUS = "errorStatus";
  @SerializedName(SERIALIZED_NAME_ERROR_STATUS)
  @javax.annotation.Nullable
  private List<ErrorStatus> errorStatus = new ArrayList<>();

  public FacilityContResponseDto() {
  }

  public FacilityContResponseDto facilityDetails(@javax.annotation.Nullable FacilityContDetails facilityDetails) {
    this.facilityDetails = facilityDetails;
    return this;
  }

  /**
   * Get facilityDetails
   * @return facilityDetails
   */
  @javax.annotation.Nullable
  public FacilityContDetails getFacilityDetails() {
    return facilityDetails;
  }

  public void setFacilityDetails(@javax.annotation.Nullable FacilityContDetails facilityDetails) {
    this.facilityDetails = facilityDetails;
  }


  public FacilityContResponseDto status(@javax.annotation.Nullable String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = status;
  }


  public FacilityContResponseDto message(@javax.annotation.Nullable String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(@javax.annotation.Nullable String message) {
    this.message = message;
  }


  public FacilityContResponseDto transactionId(@javax.annotation.Nullable String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(@javax.annotation.Nullable String transactionId) {
    this.transactionId = transactionId;
  }


  public FacilityContResponseDto errorStatus(@javax.annotation.Nullable List<ErrorStatus> errorStatus) {
    this.errorStatus = errorStatus;
    return this;
  }

  public FacilityContResponseDto addErrorStatusItem(ErrorStatus errorStatusItem) {
    if (this.errorStatus == null) {
      this.errorStatus = new ArrayList<>();
    }
    this.errorStatus.add(errorStatusItem);
    return this;
  }

  /**
   * Get errorStatus
   * @return errorStatus
   */
  @javax.annotation.Nullable
  public List<ErrorStatus> getErrorStatus() {
    return errorStatus;
  }

  public void setErrorStatus(@javax.annotation.Nullable List<ErrorStatus> errorStatus) {
    this.errorStatus = errorStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FacilityContResponseDto facilityContResponseDto = (FacilityContResponseDto) o;
    return Objects.equals(this.facilityDetails, facilityContResponseDto.facilityDetails) &&
        Objects.equals(this.status, facilityContResponseDto.status) &&
        Objects.equals(this.message, facilityContResponseDto.message) &&
        Objects.equals(this.transactionId, facilityContResponseDto.transactionId) &&
        Objects.equals(this.errorStatus, facilityContResponseDto.errorStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(facilityDetails, status, message, transactionId, errorStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FacilityContResponseDto {\n");
    sb.append("    facilityDetails: ").append(toIndentedString(facilityDetails)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    errorStatus: ").append(toIndentedString(errorStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("facilityDetails");
    openapiFields.add("status");
    openapiFields.add("message");
    openapiFields.add("transactionId");
    openapiFields.add("errorStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FacilityContResponseDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FacilityContResponseDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FacilityContResponseDto is not found in the empty JSON string", FacilityContResponseDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FacilityContResponseDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FacilityContResponseDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `facilityDetails`
      if (jsonObj.get("facilityDetails") != null && !jsonObj.get("facilityDetails").isJsonNull()) {
        FacilityContDetails.validateJsonElement(jsonObj.get("facilityDetails"));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("transactionId") != null && !jsonObj.get("transactionId").isJsonNull()) && !jsonObj.get("transactionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionId").toString()));
      }
      if (jsonObj.get("errorStatus") != null && !jsonObj.get("errorStatus").isJsonNull()) {
        JsonArray jsonArrayerrorStatus = jsonObj.getAsJsonArray("errorStatus");
        if (jsonArrayerrorStatus != null) {
          // ensure the json data is an array
          if (!jsonObj.get("errorStatus").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `errorStatus` to be an array in the JSON string but got `%s`", jsonObj.get("errorStatus").toString()));
          }

          // validate the optional field `errorStatus` (array)
          for (int i = 0; i < jsonArrayerrorStatus.size(); i++) {
            ErrorStatus.validateJsonElement(jsonArrayerrorStatus.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FacilityContResponseDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FacilityContResponseDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FacilityContResponseDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FacilityContResponseDto.class));

       return (TypeAdapter<T>) new TypeAdapter<FacilityContResponseDto>() {
           @Override
           public void write(JsonWriter out, FacilityContResponseDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FacilityContResponseDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FacilityContResponseDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FacilityContResponseDto
   * @throws IOException if the JSON string is invalid with respect to FacilityContResponseDto
   */
  public static FacilityContResponseDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FacilityContResponseDto.class);
  }

  /**
   * Convert an instance of FacilityContResponseDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

