/*
 * HFR APIs
 * The following are APIs hosted by HFR for public use.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * SearchedFacilityDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-25T14:50:59.077868+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class SearchedFacilityDetails {
  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  @javax.annotation.Nullable
  private String active;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  @javax.annotation.Nullable
  private FacilityAddress address;

  public static final String SERIALIZED_NAME_CONTACT_NUMBER = "contactNumber";
  @SerializedName(SERIALIZED_NAME_CONTACT_NUMBER)
  @javax.annotation.Nullable
  private Long contactNumber;

  public static final String SERIALIZED_NAME_DOC_DEPARTMENT = "docDepartment";
  @SerializedName(SERIALIZED_NAME_DOC_DEPARTMENT)
  @javax.annotation.Nullable
  private String docDepartment;

  public static final String SERIALIZED_NAME_DOC_DESIGNATION = "docDesignation";
  @SerializedName(SERIALIZED_NAME_DOC_DESIGNATION)
  @javax.annotation.Nullable
  private String docDesignation;

  public static final String SERIALIZED_NAME_FACILITY_PROFILE_STATUS = "facilityProfileStatus";
  @SerializedName(SERIALIZED_NAME_FACILITY_PROFILE_STATUS)
  @javax.annotation.Nullable
  private String facilityProfileStatus;

  public static final String SERIALIZED_NAME_FACILITY_TYPE = "facilityType";
  @SerializedName(SERIALIZED_NAME_FACILITY_TYPE)
  @javax.annotation.Nullable
  private String facilityType;

  public static final String SERIALIZED_NAME_HIP_ID = "hipId";
  @SerializedName(SERIALIZED_NAME_HIP_ID)
  @javax.annotation.Nullable
  private String hipId;

  public static final String SERIALIZED_NAME_HIP_NAME = "hipName";
  @SerializedName(SERIALIZED_NAME_HIP_NAME)
  @javax.annotation.Nullable
  private String hipName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_LANGITUDE = "langitude";
  @SerializedName(SERIALIZED_NAME_LANGITUDE)
  @javax.annotation.Nullable
  private String langitude;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  @javax.annotation.Nullable
  private String latitude;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  @javax.annotation.Nullable
  private String name;

  public static final String SERIALIZED_NAME_PHOTO = "photo";
  @SerializedName(SERIALIZED_NAME_PHOTO)
  @javax.annotation.Nullable
  private String photo;

  public static final String SERIALIZED_NAME_SYSTEM_OF_MEDICINE = "systemOfMedicine";
  @SerializedName(SERIALIZED_NAME_SYSTEM_OF_MEDICINE)
  @javax.annotation.Nullable
  private String systemOfMedicine;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  @javax.annotation.Nullable
  private String transactionId;

  public SearchedFacilityDetails() {
  }

  public SearchedFacilityDetails active(@javax.annotation.Nullable String active) {
    this.active = active;
    return this;
  }

  /**
   * Get active
   * @return active
   */
  @javax.annotation.Nullable
  public String getActive() {
    return active;
  }

  public void setActive(@javax.annotation.Nullable String active) {
    this.active = active;
  }


  public SearchedFacilityDetails address(@javax.annotation.Nullable FacilityAddress address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public FacilityAddress getAddress() {
    return address;
  }

  public void setAddress(@javax.annotation.Nullable FacilityAddress address) {
    this.address = address;
  }


  public SearchedFacilityDetails contactNumber(@javax.annotation.Nullable Long contactNumber) {
    this.contactNumber = contactNumber;
    return this;
  }

  /**
   * Get contactNumber
   * @return contactNumber
   */
  @javax.annotation.Nullable
  public Long getContactNumber() {
    return contactNumber;
  }

  public void setContactNumber(@javax.annotation.Nullable Long contactNumber) {
    this.contactNumber = contactNumber;
  }


  public SearchedFacilityDetails docDepartment(@javax.annotation.Nullable String docDepartment) {
    this.docDepartment = docDepartment;
    return this;
  }

  /**
   * Get docDepartment
   * @return docDepartment
   */
  @javax.annotation.Nullable
  public String getDocDepartment() {
    return docDepartment;
  }

  public void setDocDepartment(@javax.annotation.Nullable String docDepartment) {
    this.docDepartment = docDepartment;
  }


  public SearchedFacilityDetails docDesignation(@javax.annotation.Nullable String docDesignation) {
    this.docDesignation = docDesignation;
    return this;
  }

  /**
   * Get docDesignation
   * @return docDesignation
   */
  @javax.annotation.Nullable
  public String getDocDesignation() {
    return docDesignation;
  }

  public void setDocDesignation(@javax.annotation.Nullable String docDesignation) {
    this.docDesignation = docDesignation;
  }


  public SearchedFacilityDetails facilityProfileStatus(@javax.annotation.Nullable String facilityProfileStatus) {
    this.facilityProfileStatus = facilityProfileStatus;
    return this;
  }

  /**
   * Get facilityProfileStatus
   * @return facilityProfileStatus
   */
  @javax.annotation.Nullable
  public String getFacilityProfileStatus() {
    return facilityProfileStatus;
  }

  public void setFacilityProfileStatus(@javax.annotation.Nullable String facilityProfileStatus) {
    this.facilityProfileStatus = facilityProfileStatus;
  }


  public SearchedFacilityDetails facilityType(@javax.annotation.Nullable String facilityType) {
    this.facilityType = facilityType;
    return this;
  }

  /**
   * Get facilityType
   * @return facilityType
   */
  @javax.annotation.Nullable
  public String getFacilityType() {
    return facilityType;
  }

  public void setFacilityType(@javax.annotation.Nullable String facilityType) {
    this.facilityType = facilityType;
  }


  public SearchedFacilityDetails hipId(@javax.annotation.Nullable String hipId) {
    this.hipId = hipId;
    return this;
  }

  /**
   * Get hipId
   * @return hipId
   */
  @javax.annotation.Nullable
  public String getHipId() {
    return hipId;
  }

  public void setHipId(@javax.annotation.Nullable String hipId) {
    this.hipId = hipId;
  }


  public SearchedFacilityDetails hipName(@javax.annotation.Nullable String hipName) {
    this.hipName = hipName;
    return this;
  }

  /**
   * Get hipName
   * @return hipName
   */
  @javax.annotation.Nullable
  public String getHipName() {
    return hipName;
  }

  public void setHipName(@javax.annotation.Nullable String hipName) {
    this.hipName = hipName;
  }


  public SearchedFacilityDetails id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public SearchedFacilityDetails langitude(@javax.annotation.Nullable String langitude) {
    this.langitude = langitude;
    return this;
  }

  /**
   * Get langitude
   * @return langitude
   */
  @javax.annotation.Nullable
  public String getLangitude() {
    return langitude;
  }

  public void setLangitude(@javax.annotation.Nullable String langitude) {
    this.langitude = langitude;
  }


  public SearchedFacilityDetails latitude(@javax.annotation.Nullable String latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @javax.annotation.Nullable
  public String getLatitude() {
    return latitude;
  }

  public void setLatitude(@javax.annotation.Nullable String latitude) {
    this.latitude = latitude;
  }


  public SearchedFacilityDetails name(@javax.annotation.Nullable String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(@javax.annotation.Nullable String name) {
    this.name = name;
  }


  public SearchedFacilityDetails photo(@javax.annotation.Nullable String photo) {
    this.photo = photo;
    return this;
  }

  /**
   * Get photo
   * @return photo
   */
  @javax.annotation.Nullable
  public String getPhoto() {
    return photo;
  }

  public void setPhoto(@javax.annotation.Nullable String photo) {
    this.photo = photo;
  }


  public SearchedFacilityDetails systemOfMedicine(@javax.annotation.Nullable String systemOfMedicine) {
    this.systemOfMedicine = systemOfMedicine;
    return this;
  }

  /**
   * Get systemOfMedicine
   * @return systemOfMedicine
   */
  @javax.annotation.Nullable
  public String getSystemOfMedicine() {
    return systemOfMedicine;
  }

  public void setSystemOfMedicine(@javax.annotation.Nullable String systemOfMedicine) {
    this.systemOfMedicine = systemOfMedicine;
  }


  public SearchedFacilityDetails transactionId(@javax.annotation.Nullable String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(@javax.annotation.Nullable String transactionId) {
    this.transactionId = transactionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchedFacilityDetails searchedFacilityDetails = (SearchedFacilityDetails) o;
    return Objects.equals(this.active, searchedFacilityDetails.active) &&
        Objects.equals(this.address, searchedFacilityDetails.address) &&
        Objects.equals(this.contactNumber, searchedFacilityDetails.contactNumber) &&
        Objects.equals(this.docDepartment, searchedFacilityDetails.docDepartment) &&
        Objects.equals(this.docDesignation, searchedFacilityDetails.docDesignation) &&
        Objects.equals(this.facilityProfileStatus, searchedFacilityDetails.facilityProfileStatus) &&
        Objects.equals(this.facilityType, searchedFacilityDetails.facilityType) &&
        Objects.equals(this.hipId, searchedFacilityDetails.hipId) &&
        Objects.equals(this.hipName, searchedFacilityDetails.hipName) &&
        Objects.equals(this.id, searchedFacilityDetails.id) &&
        Objects.equals(this.langitude, searchedFacilityDetails.langitude) &&
        Objects.equals(this.latitude, searchedFacilityDetails.latitude) &&
        Objects.equals(this.name, searchedFacilityDetails.name) &&
        Objects.equals(this.photo, searchedFacilityDetails.photo) &&
        Objects.equals(this.systemOfMedicine, searchedFacilityDetails.systemOfMedicine) &&
        Objects.equals(this.transactionId, searchedFacilityDetails.transactionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, address, contactNumber, docDepartment, docDesignation, facilityProfileStatus, facilityType, hipId, hipName, id, langitude, latitude, name, photo, systemOfMedicine, transactionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchedFacilityDetails {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    contactNumber: ").append(toIndentedString(contactNumber)).append("\n");
    sb.append("    docDepartment: ").append(toIndentedString(docDepartment)).append("\n");
    sb.append("    docDesignation: ").append(toIndentedString(docDesignation)).append("\n");
    sb.append("    facilityProfileStatus: ").append(toIndentedString(facilityProfileStatus)).append("\n");
    sb.append("    facilityType: ").append(toIndentedString(facilityType)).append("\n");
    sb.append("    hipId: ").append(toIndentedString(hipId)).append("\n");
    sb.append("    hipName: ").append(toIndentedString(hipName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    langitude: ").append(toIndentedString(langitude)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    photo: ").append(toIndentedString(photo)).append("\n");
    sb.append("    systemOfMedicine: ").append(toIndentedString(systemOfMedicine)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("active");
    openapiFields.add("address");
    openapiFields.add("contactNumber");
    openapiFields.add("docDepartment");
    openapiFields.add("docDesignation");
    openapiFields.add("facilityProfileStatus");
    openapiFields.add("facilityType");
    openapiFields.add("hipId");
    openapiFields.add("hipName");
    openapiFields.add("id");
    openapiFields.add("langitude");
    openapiFields.add("latitude");
    openapiFields.add("name");
    openapiFields.add("photo");
    openapiFields.add("systemOfMedicine");
    openapiFields.add("transactionId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SearchedFacilityDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SearchedFacilityDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SearchedFacilityDetails is not found in the empty JSON string", SearchedFacilityDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SearchedFacilityDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SearchedFacilityDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("active") != null && !jsonObj.get("active").isJsonNull()) && !jsonObj.get("active").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `active` to be a primitive type in the JSON string but got `%s`", jsonObj.get("active").toString()));
      }
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        FacilityAddress.validateJsonElement(jsonObj.get("address"));
      }
      if ((jsonObj.get("docDepartment") != null && !jsonObj.get("docDepartment").isJsonNull()) && !jsonObj.get("docDepartment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `docDepartment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("docDepartment").toString()));
      }
      if ((jsonObj.get("docDesignation") != null && !jsonObj.get("docDesignation").isJsonNull()) && !jsonObj.get("docDesignation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `docDesignation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("docDesignation").toString()));
      }
      if ((jsonObj.get("facilityProfileStatus") != null && !jsonObj.get("facilityProfileStatus").isJsonNull()) && !jsonObj.get("facilityProfileStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilityProfileStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facilityProfileStatus").toString()));
      }
      if ((jsonObj.get("facilityType") != null && !jsonObj.get("facilityType").isJsonNull()) && !jsonObj.get("facilityType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilityType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facilityType").toString()));
      }
      if ((jsonObj.get("hipId") != null && !jsonObj.get("hipId").isJsonNull()) && !jsonObj.get("hipId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hipId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hipId").toString()));
      }
      if ((jsonObj.get("hipName") != null && !jsonObj.get("hipName").isJsonNull()) && !jsonObj.get("hipName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hipName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hipName").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("langitude") != null && !jsonObj.get("langitude").isJsonNull()) && !jsonObj.get("langitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `langitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("langitude").toString()));
      }
      if ((jsonObj.get("latitude") != null && !jsonObj.get("latitude").isJsonNull()) && !jsonObj.get("latitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latitude").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("photo") != null && !jsonObj.get("photo").isJsonNull()) && !jsonObj.get("photo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `photo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("photo").toString()));
      }
      if ((jsonObj.get("systemOfMedicine") != null && !jsonObj.get("systemOfMedicine").isJsonNull()) && !jsonObj.get("systemOfMedicine").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `systemOfMedicine` to be a primitive type in the JSON string but got `%s`", jsonObj.get("systemOfMedicine").toString()));
      }
      if ((jsonObj.get("transactionId") != null && !jsonObj.get("transactionId").isJsonNull()) && !jsonObj.get("transactionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transactionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transactionId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SearchedFacilityDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SearchedFacilityDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SearchedFacilityDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SearchedFacilityDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<SearchedFacilityDetails>() {
           @Override
           public void write(JsonWriter out, SearchedFacilityDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SearchedFacilityDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SearchedFacilityDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SearchedFacilityDetails
   * @throws IOException if the JSON string is invalid with respect to SearchedFacilityDetails
   */
  public static SearchedFacilityDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SearchedFacilityDetails.class);
  }

  /**
   * Convert an instance of SearchedFacilityDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

