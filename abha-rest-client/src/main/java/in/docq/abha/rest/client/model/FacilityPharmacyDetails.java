/*
 * HFR APIs
 * The following are APIs hosted by HFR for public use.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * FacilityPharmacyDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-25T14:50:59.077868+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class FacilityPharmacyDetails {
  public static final String SERIALIZED_NAME_IS_JAN_AUSHADHI_KENDRA = "isJanAushadhiKendra";
  @SerializedName(SERIALIZED_NAME_IS_JAN_AUSHADHI_KENDRA)
  @javax.annotation.Nullable
  private String isJanAushadhiKendra;

  public static final String SERIALIZED_NAME_JAN_AUSHADHI_KENDRA_ID = "janAushadhiKendraId";
  @SerializedName(SERIALIZED_NAME_JAN_AUSHADHI_KENDRA_ID)
  @javax.annotation.Nullable
  private String janAushadhiKendraId;

  public static final String SERIALIZED_NAME_DRUG_LICENSE_NUMBER = "drugLicenseNumber";
  @SerializedName(SERIALIZED_NAME_DRUG_LICENSE_NUMBER)
  @javax.annotation.Nullable
  private String drugLicenseNumber;

  public static final String SERIALIZED_NAME_PHARMACY_GSTIN_NUMBER = "pharmacyGstinNumber";
  @SerializedName(SERIALIZED_NAME_PHARMACY_GSTIN_NUMBER)
  @javax.annotation.Nullable
  private String pharmacyGstinNumber;

  public static final String SERIALIZED_NAME_PHARMACIST_REGISTRATION_NUMBER = "pharmacistRegistrationNumber";
  @SerializedName(SERIALIZED_NAME_PHARMACIST_REGISTRATION_NUMBER)
  @javax.annotation.Nullable
  private String pharmacistRegistrationNumber;

  public FacilityPharmacyDetails() {
  }

  public FacilityPharmacyDetails isJanAushadhiKendra(@javax.annotation.Nullable String isJanAushadhiKendra) {
    this.isJanAushadhiKendra = isJanAushadhiKendra;
    return this;
  }

  /**
   * Get isJanAushadhiKendra
   * @return isJanAushadhiKendra
   */
  @javax.annotation.Nullable
  public String getIsJanAushadhiKendra() {
    return isJanAushadhiKendra;
  }

  public void setIsJanAushadhiKendra(@javax.annotation.Nullable String isJanAushadhiKendra) {
    this.isJanAushadhiKendra = isJanAushadhiKendra;
  }


  public FacilityPharmacyDetails janAushadhiKendraId(@javax.annotation.Nullable String janAushadhiKendraId) {
    this.janAushadhiKendraId = janAushadhiKendraId;
    return this;
  }

  /**
   * Get janAushadhiKendraId
   * @return janAushadhiKendraId
   */
  @javax.annotation.Nullable
  public String getJanAushadhiKendraId() {
    return janAushadhiKendraId;
  }

  public void setJanAushadhiKendraId(@javax.annotation.Nullable String janAushadhiKendraId) {
    this.janAushadhiKendraId = janAushadhiKendraId;
  }


  public FacilityPharmacyDetails drugLicenseNumber(@javax.annotation.Nullable String drugLicenseNumber) {
    this.drugLicenseNumber = drugLicenseNumber;
    return this;
  }

  /**
   * Get drugLicenseNumber
   * @return drugLicenseNumber
   */
  @javax.annotation.Nullable
  public String getDrugLicenseNumber() {
    return drugLicenseNumber;
  }

  public void setDrugLicenseNumber(@javax.annotation.Nullable String drugLicenseNumber) {
    this.drugLicenseNumber = drugLicenseNumber;
  }


  public FacilityPharmacyDetails pharmacyGstinNumber(@javax.annotation.Nullable String pharmacyGstinNumber) {
    this.pharmacyGstinNumber = pharmacyGstinNumber;
    return this;
  }

  /**
   * Get pharmacyGstinNumber
   * @return pharmacyGstinNumber
   */
  @javax.annotation.Nullable
  public String getPharmacyGstinNumber() {
    return pharmacyGstinNumber;
  }

  public void setPharmacyGstinNumber(@javax.annotation.Nullable String pharmacyGstinNumber) {
    this.pharmacyGstinNumber = pharmacyGstinNumber;
  }


  public FacilityPharmacyDetails pharmacistRegistrationNumber(@javax.annotation.Nullable String pharmacistRegistrationNumber) {
    this.pharmacistRegistrationNumber = pharmacistRegistrationNumber;
    return this;
  }

  /**
   * Get pharmacistRegistrationNumber
   * @return pharmacistRegistrationNumber
   */
  @javax.annotation.Nullable
  public String getPharmacistRegistrationNumber() {
    return pharmacistRegistrationNumber;
  }

  public void setPharmacistRegistrationNumber(@javax.annotation.Nullable String pharmacistRegistrationNumber) {
    this.pharmacistRegistrationNumber = pharmacistRegistrationNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FacilityPharmacyDetails facilityPharmacyDetails = (FacilityPharmacyDetails) o;
    return Objects.equals(this.isJanAushadhiKendra, facilityPharmacyDetails.isJanAushadhiKendra) &&
        Objects.equals(this.janAushadhiKendraId, facilityPharmacyDetails.janAushadhiKendraId) &&
        Objects.equals(this.drugLicenseNumber, facilityPharmacyDetails.drugLicenseNumber) &&
        Objects.equals(this.pharmacyGstinNumber, facilityPharmacyDetails.pharmacyGstinNumber) &&
        Objects.equals(this.pharmacistRegistrationNumber, facilityPharmacyDetails.pharmacistRegistrationNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isJanAushadhiKendra, janAushadhiKendraId, drugLicenseNumber, pharmacyGstinNumber, pharmacistRegistrationNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FacilityPharmacyDetails {\n");
    sb.append("    isJanAushadhiKendra: ").append(toIndentedString(isJanAushadhiKendra)).append("\n");
    sb.append("    janAushadhiKendraId: ").append(toIndentedString(janAushadhiKendraId)).append("\n");
    sb.append("    drugLicenseNumber: ").append(toIndentedString(drugLicenseNumber)).append("\n");
    sb.append("    pharmacyGstinNumber: ").append(toIndentedString(pharmacyGstinNumber)).append("\n");
    sb.append("    pharmacistRegistrationNumber: ").append(toIndentedString(pharmacistRegistrationNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("isJanAushadhiKendra");
    openapiFields.add("janAushadhiKendraId");
    openapiFields.add("drugLicenseNumber");
    openapiFields.add("pharmacyGstinNumber");
    openapiFields.add("pharmacistRegistrationNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FacilityPharmacyDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FacilityPharmacyDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FacilityPharmacyDetails is not found in the empty JSON string", FacilityPharmacyDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FacilityPharmacyDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FacilityPharmacyDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("isJanAushadhiKendra") != null && !jsonObj.get("isJanAushadhiKendra").isJsonNull()) && !jsonObj.get("isJanAushadhiKendra").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isJanAushadhiKendra` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isJanAushadhiKendra").toString()));
      }
      if ((jsonObj.get("janAushadhiKendraId") != null && !jsonObj.get("janAushadhiKendraId").isJsonNull()) && !jsonObj.get("janAushadhiKendraId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `janAushadhiKendraId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("janAushadhiKendraId").toString()));
      }
      if ((jsonObj.get("drugLicenseNumber") != null && !jsonObj.get("drugLicenseNumber").isJsonNull()) && !jsonObj.get("drugLicenseNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `drugLicenseNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("drugLicenseNumber").toString()));
      }
      if ((jsonObj.get("pharmacyGstinNumber") != null && !jsonObj.get("pharmacyGstinNumber").isJsonNull()) && !jsonObj.get("pharmacyGstinNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pharmacyGstinNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pharmacyGstinNumber").toString()));
      }
      if ((jsonObj.get("pharmacistRegistrationNumber") != null && !jsonObj.get("pharmacistRegistrationNumber").isJsonNull()) && !jsonObj.get("pharmacistRegistrationNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pharmacistRegistrationNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pharmacistRegistrationNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FacilityPharmacyDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FacilityPharmacyDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FacilityPharmacyDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FacilityPharmacyDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<FacilityPharmacyDetails>() {
           @Override
           public void write(JsonWriter out, FacilityPharmacyDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FacilityPharmacyDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FacilityPharmacyDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FacilityPharmacyDetails
   * @throws IOException if the JSON string is invalid with respect to FacilityPharmacyDetails
   */
  public static FacilityPharmacyDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FacilityPharmacyDetails.class);
  }

  /**
   * Convert an instance of FacilityPharmacyDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

