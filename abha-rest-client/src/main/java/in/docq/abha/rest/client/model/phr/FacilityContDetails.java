/*
 * Health Facility Registry APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package in.docq.abha.rest.client.model.phr;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import in.docq.abha.rest.client.JSON;

import java.io.IOException;
import java.util.*;

/**
 * FacilityContDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-04T14:58:27.910059+05:30[Asia/Kolkata]", comments = "Generator version: 7.11.0")
public class FacilityContDetails {
  public static final String SERIALIZED_NAME_FAC_STATUS = "facStatus";
  @SerializedName(SERIALIZED_NAME_FAC_STATUS)
  @javax.annotation.Nullable
  private String facStatus;

  public static final String SERIALIZED_NAME_STATE_CODE = "stateCode";
  @SerializedName(SERIALIZED_NAME_STATE_CODE)
  @javax.annotation.Nullable
  private String stateCode;

  public static final String SERIALIZED_NAME_FACILITY_OWNERSHIP = "facilityOwnership";
  @SerializedName(SERIALIZED_NAME_FACILITY_OWNERSHIP)
  @javax.annotation.Nullable
  private String facilityOwnership;

  public static final String SERIALIZED_NAME_TOTAL_NO_OF_BEDS = "totalNoOfBeds";
  @SerializedName(SERIALIZED_NAME_TOTAL_NO_OF_BEDS)
  @javax.annotation.Nullable
  private String totalNoOfBeds;

  public static final String SERIALIZED_NAME_DISTRICT_CODE = "districtCode";
  @SerializedName(SERIALIZED_NAME_DISTRICT_CODE)
  @javax.annotation.Nullable
  private String districtCode;

  public static final String SERIALIZED_NAME_FACILITY_ID = "facilityId";
  @SerializedName(SERIALIZED_NAME_FACILITY_ID)
  @javax.annotation.Nullable
  private String facilityId;

  public static final String SERIALIZED_NAME_FACILITY_NAME = "facilityName";
  @SerializedName(SERIALIZED_NAME_FACILITY_NAME)
  @javax.annotation.Nullable
  private String facilityName;

  public static final String SERIALIZED_NAME_CONTACT_NAME = "contactName";
  @SerializedName(SERIALIZED_NAME_CONTACT_NAME)
  @javax.annotation.Nullable
  private String contactName;

  public static final String SERIALIZED_NAME_CONTACT_MOBILE = "contactMobile";
  @SerializedName(SERIALIZED_NAME_CONTACT_MOBILE)
  @javax.annotation.Nullable
  private String contactMobile;

  public static final String SERIALIZED_NAME_FACILITY_ADDRESS = "facilityAddress";
  @SerializedName(SERIALIZED_NAME_FACILITY_ADDRESS)
  @javax.annotation.Nullable
  private String facilityAddress;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  @javax.annotation.Nullable
  private String latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  @javax.annotation.Nullable
  private String longitude;

  public static final String SERIALIZED_NAME_FACILITY_TYPE = "facilityType";
  @SerializedName(SERIALIZED_NAME_FACILITY_TYPE)
  @javax.annotation.Nullable
  private String facilityType;

  public static final String SERIALIZED_NAME_HIECM_DETAIL = "hiecmDetail";
  @SerializedName(SERIALIZED_NAME_HIECM_DETAIL)
  @javax.annotation.Nullable
  private List<HiecmDetails> hiecmDetail = new ArrayList<>();

  public static final String SERIALIZED_NAME_REVIEWS = "reviews";
  @SerializedName(SERIALIZED_NAME_REVIEWS)
  @javax.annotation.Nullable
  private Object reviews;

  public FacilityContDetails() {
  }

  public FacilityContDetails facStatus(@javax.annotation.Nullable String facStatus) {
    this.facStatus = facStatus;
    return this;
  }

  /**
   * Get facStatus
   * @return facStatus
   */
  @javax.annotation.Nullable
  public String getFacStatus() {
    return facStatus;
  }

  public void setFacStatus(@javax.annotation.Nullable String facStatus) {
    this.facStatus = facStatus;
  }


  public FacilityContDetails stateCode(@javax.annotation.Nullable String stateCode) {
    this.stateCode = stateCode;
    return this;
  }

  /**
   * Get stateCode
   * @return stateCode
   */
  @javax.annotation.Nullable
  public String getStateCode() {
    return stateCode;
  }

  public void setStateCode(@javax.annotation.Nullable String stateCode) {
    this.stateCode = stateCode;
  }


  public FacilityContDetails facilityOwnership(@javax.annotation.Nullable String facilityOwnership) {
    this.facilityOwnership = facilityOwnership;
    return this;
  }

  /**
   * Get facilityOwnership
   * @return facilityOwnership
   */
  @javax.annotation.Nullable
  public String getFacilityOwnership() {
    return facilityOwnership;
  }

  public void setFacilityOwnership(@javax.annotation.Nullable String facilityOwnership) {
    this.facilityOwnership = facilityOwnership;
  }


  public FacilityContDetails totalNoOfBeds(@javax.annotation.Nullable String totalNoOfBeds) {
    this.totalNoOfBeds = totalNoOfBeds;
    return this;
  }

  /**
   * Get totalNoOfBeds
   * @return totalNoOfBeds
   */
  @javax.annotation.Nullable
  public String getTotalNoOfBeds() {
    return totalNoOfBeds;
  }

  public void setTotalNoOfBeds(@javax.annotation.Nullable String totalNoOfBeds) {
    this.totalNoOfBeds = totalNoOfBeds;
  }


  public FacilityContDetails districtCode(@javax.annotation.Nullable String districtCode) {
    this.districtCode = districtCode;
    return this;
  }

  /**
   * Get districtCode
   * @return districtCode
   */
  @javax.annotation.Nullable
  public String getDistrictCode() {
    return districtCode;
  }

  public void setDistrictCode(@javax.annotation.Nullable String districtCode) {
    this.districtCode = districtCode;
  }


  public FacilityContDetails facilityId(@javax.annotation.Nullable String facilityId) {
    this.facilityId = facilityId;
    return this;
  }

  /**
   * Get facilityId
   * @return facilityId
   */
  @javax.annotation.Nullable
  public String getFacilityId() {
    return facilityId;
  }

  public void setFacilityId(@javax.annotation.Nullable String facilityId) {
    this.facilityId = facilityId;
  }


  public FacilityContDetails facilityName(@javax.annotation.Nullable String facilityName) {
    this.facilityName = facilityName;
    return this;
  }

  /**
   * Get facilityName
   * @return facilityName
   */
  @javax.annotation.Nullable
  public String getFacilityName() {
    return facilityName;
  }

  public void setFacilityName(@javax.annotation.Nullable String facilityName) {
    this.facilityName = facilityName;
  }


  public FacilityContDetails contactName(@javax.annotation.Nullable String contactName) {
    this.contactName = contactName;
    return this;
  }

  /**
   * Get contactName
   * @return contactName
   */
  @javax.annotation.Nullable
  public String getContactName() {
    return contactName;
  }

  public void setContactName(@javax.annotation.Nullable String contactName) {
    this.contactName = contactName;
  }


  public FacilityContDetails contactMobile(@javax.annotation.Nullable String contactMobile) {
    this.contactMobile = contactMobile;
    return this;
  }

  /**
   * Get contactMobile
   * @return contactMobile
   */
  @javax.annotation.Nullable
  public String getContactMobile() {
    return contactMobile;
  }

  public void setContactMobile(@javax.annotation.Nullable String contactMobile) {
    this.contactMobile = contactMobile;
  }


  public FacilityContDetails facilityAddress(@javax.annotation.Nullable String facilityAddress) {
    this.facilityAddress = facilityAddress;
    return this;
  }

  /**
   * Get facilityAddress
   * @return facilityAddress
   */
  @javax.annotation.Nullable
  public String getFacilityAddress() {
    return facilityAddress;
  }

  public void setFacilityAddress(@javax.annotation.Nullable String facilityAddress) {
    this.facilityAddress = facilityAddress;
  }


  public FacilityContDetails latitude(@javax.annotation.Nullable String latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @javax.annotation.Nullable
  public String getLatitude() {
    return latitude;
  }

  public void setLatitude(@javax.annotation.Nullable String latitude) {
    this.latitude = latitude;
  }


  public FacilityContDetails longitude(@javax.annotation.Nullable String longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   */
  @javax.annotation.Nullable
  public String getLongitude() {
    return longitude;
  }

  public void setLongitude(@javax.annotation.Nullable String longitude) {
    this.longitude = longitude;
  }


  public FacilityContDetails facilityType(@javax.annotation.Nullable String facilityType) {
    this.facilityType = facilityType;
    return this;
  }

  /**
   * Get facilityType
   * @return facilityType
   */
  @javax.annotation.Nullable
  public String getFacilityType() {
    return facilityType;
  }

  public void setFacilityType(@javax.annotation.Nullable String facilityType) {
    this.facilityType = facilityType;
  }


  public FacilityContDetails hiecmDetail(@javax.annotation.Nullable List<HiecmDetails> hiecmDetail) {
    this.hiecmDetail = hiecmDetail;
    return this;
  }

  public FacilityContDetails addHiecmDetailItem(HiecmDetails hiecmDetailItem) {
    if (this.hiecmDetail == null) {
      this.hiecmDetail = new ArrayList<>();
    }
    this.hiecmDetail.add(hiecmDetailItem);
    return this;
  }

  /**
   * Get hiecmDetail
   * @return hiecmDetail
   */
  @javax.annotation.Nullable
  public List<HiecmDetails> getHiecmDetail() {
    return hiecmDetail;
  }

  public void setHiecmDetail(@javax.annotation.Nullable List<HiecmDetails> hiecmDetail) {
    this.hiecmDetail = hiecmDetail;
  }


  public FacilityContDetails reviews(@javax.annotation.Nullable Object reviews) {
    this.reviews = reviews;
    return this;
  }

  /**
   * Get reviews
   * @return reviews
   */
  @javax.annotation.Nullable
  public Object getReviews() {
    return reviews;
  }

  public void setReviews(@javax.annotation.Nullable Object reviews) {
    this.reviews = reviews;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FacilityContDetails facilityContDetails = (FacilityContDetails) o;
    return Objects.equals(this.facStatus, facilityContDetails.facStatus) &&
        Objects.equals(this.stateCode, facilityContDetails.stateCode) &&
        Objects.equals(this.facilityOwnership, facilityContDetails.facilityOwnership) &&
        Objects.equals(this.totalNoOfBeds, facilityContDetails.totalNoOfBeds) &&
        Objects.equals(this.districtCode, facilityContDetails.districtCode) &&
        Objects.equals(this.facilityId, facilityContDetails.facilityId) &&
        Objects.equals(this.facilityName, facilityContDetails.facilityName) &&
        Objects.equals(this.contactName, facilityContDetails.contactName) &&
        Objects.equals(this.contactMobile, facilityContDetails.contactMobile) &&
        Objects.equals(this.facilityAddress, facilityContDetails.facilityAddress) &&
        Objects.equals(this.latitude, facilityContDetails.latitude) &&
        Objects.equals(this.longitude, facilityContDetails.longitude) &&
        Objects.equals(this.facilityType, facilityContDetails.facilityType) &&
        Objects.equals(this.hiecmDetail, facilityContDetails.hiecmDetail) &&
        Objects.equals(this.reviews, facilityContDetails.reviews);
  }

  @Override
  public int hashCode() {
    return Objects.hash(facStatus, stateCode, facilityOwnership, totalNoOfBeds, districtCode, facilityId, facilityName, contactName, contactMobile, facilityAddress, latitude, longitude, facilityType, hiecmDetail, reviews);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FacilityContDetails {\n");
    sb.append("    facStatus: ").append(toIndentedString(facStatus)).append("\n");
    sb.append("    stateCode: ").append(toIndentedString(stateCode)).append("\n");
    sb.append("    facilityOwnership: ").append(toIndentedString(facilityOwnership)).append("\n");
    sb.append("    totalNoOfBeds: ").append(toIndentedString(totalNoOfBeds)).append("\n");
    sb.append("    districtCode: ").append(toIndentedString(districtCode)).append("\n");
    sb.append("    facilityId: ").append(toIndentedString(facilityId)).append("\n");
    sb.append("    facilityName: ").append(toIndentedString(facilityName)).append("\n");
    sb.append("    contactName: ").append(toIndentedString(contactName)).append("\n");
    sb.append("    contactMobile: ").append(toIndentedString(contactMobile)).append("\n");
    sb.append("    facilityAddress: ").append(toIndentedString(facilityAddress)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    facilityType: ").append(toIndentedString(facilityType)).append("\n");
    sb.append("    hiecmDetail: ").append(toIndentedString(hiecmDetail)).append("\n");
    sb.append("    reviews: ").append(toIndentedString(reviews)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("facStatus");
    openapiFields.add("stateCode");
    openapiFields.add("facilityOwnership");
    openapiFields.add("totalNoOfBeds");
    openapiFields.add("districtCode");
    openapiFields.add("facilityId");
    openapiFields.add("facilityName");
    openapiFields.add("contactName");
    openapiFields.add("contactMobile");
    openapiFields.add("facilityAddress");
    openapiFields.add("latitude");
    openapiFields.add("longitude");
    openapiFields.add("facilityType");
    openapiFields.add("hiecmDetail");
    openapiFields.add("reviews");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FacilityContDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FacilityContDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FacilityContDetails is not found in the empty JSON string", FacilityContDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FacilityContDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FacilityContDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("facStatus") != null && !jsonObj.get("facStatus").isJsonNull()) && !jsonObj.get("facStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facStatus").toString()));
      }
      if ((jsonObj.get("stateCode") != null && !jsonObj.get("stateCode").isJsonNull()) && !jsonObj.get("stateCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateCode").toString()));
      }
      if ((jsonObj.get("facilityOwnership") != null && !jsonObj.get("facilityOwnership").isJsonNull()) && !jsonObj.get("facilityOwnership").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilityOwnership` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facilityOwnership").toString()));
      }
      if ((jsonObj.get("totalNoOfBeds") != null && !jsonObj.get("totalNoOfBeds").isJsonNull()) && !jsonObj.get("totalNoOfBeds").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `totalNoOfBeds` to be a primitive type in the JSON string but got `%s`", jsonObj.get("totalNoOfBeds").toString()));
      }
      if ((jsonObj.get("districtCode") != null && !jsonObj.get("districtCode").isJsonNull()) && !jsonObj.get("districtCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `districtCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("districtCode").toString()));
      }
      if ((jsonObj.get("facilityId") != null && !jsonObj.get("facilityId").isJsonNull()) && !jsonObj.get("facilityId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilityId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facilityId").toString()));
      }
      if ((jsonObj.get("facilityName") != null && !jsonObj.get("facilityName").isJsonNull()) && !jsonObj.get("facilityName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilityName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facilityName").toString()));
      }
      if ((jsonObj.get("contactName") != null && !jsonObj.get("contactName").isJsonNull()) && !jsonObj.get("contactName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactName").toString()));
      }
      if ((jsonObj.get("contactMobile") != null && !jsonObj.get("contactMobile").isJsonNull()) && !jsonObj.get("contactMobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactMobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactMobile").toString()));
      }
      if ((jsonObj.get("facilityAddress") != null && !jsonObj.get("facilityAddress").isJsonNull()) && !jsonObj.get("facilityAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilityAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facilityAddress").toString()));
      }
      if ((jsonObj.get("latitude") != null && !jsonObj.get("latitude").isJsonNull()) && !jsonObj.get("latitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `latitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("latitude").toString()));
      }
      if ((jsonObj.get("longitude") != null && !jsonObj.get("longitude").isJsonNull()) && !jsonObj.get("longitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `longitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("longitude").toString()));
      }
      if ((jsonObj.get("facilityType") != null && !jsonObj.get("facilityType").isJsonNull()) && !jsonObj.get("facilityType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facilityType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facilityType").toString()));
      }
      if (jsonObj.get("hiecmDetail") != null && !jsonObj.get("hiecmDetail").isJsonNull()) {
        JsonArray jsonArrayhiecmDetail = jsonObj.getAsJsonArray("hiecmDetail");
        if (jsonArrayhiecmDetail != null) {
          // ensure the json data is an array
          if (!jsonObj.get("hiecmDetail").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `hiecmDetail` to be an array in the JSON string but got `%s`", jsonObj.get("hiecmDetail").toString()));
          }

          // validate the optional field `hiecmDetail` (array)
          for (int i = 0; i < jsonArrayhiecmDetail.size(); i++) {
            HiecmDetails.validateJsonElement(jsonArrayhiecmDetail.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FacilityContDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FacilityContDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FacilityContDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FacilityContDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<FacilityContDetails>() {
           @Override
           public void write(JsonWriter out, FacilityContDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FacilityContDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FacilityContDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FacilityContDetails
   * @throws IOException if the JSON string is invalid with respect to FacilityContDetails
   */
  public static FacilityContDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FacilityContDetails.class);
  }

  /**
   * Convert an instance of FacilityContDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

